Pin: pin-3.13-98189-60a6ef199
Copyright 2002-2019 Intel Corporation.
 Exe generic_start_main
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov eax, 0x702350
 ins:mov eax, 0x702350
 reg:eax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov r14, r8
 ins:mov r14, r8
 reg:r14
 Exe generic_start_main
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov r13, rcx
 ins:mov r13, rcx
 reg:r13
 Exe generic_start_main
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov r12, r9
 ins:mov r12, r9
 reg:r12
 Exe generic_start_main
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included sub rsp, 0x90
 ins:sub rsp, 0x90
 reg:rsp
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x2d7f46]
 ins:mov ecx, dword ptr [rip+0x2d7f46]
 reg:ecx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rsp+0xc]
 ins:movsxd rax, dword ptr [rsp+0xc]
 reg:rax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x10]
 ins:mov rcx, qword ptr [rsp+0x10]
 reg:rcx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0xc0]
 ins:mov rdx, qword ptr [rsp+0xc0]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included lea rdi, ptr [rcx+rax*8+0x8]
 ins:lea rdi, ptr [rcx+rax*8+0x8]
 reg:rdi
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp qword ptr [rdi-0x8], 0x0
 ins:cmp qword ptr [rdi-0x8], 0x0
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp qword ptr [rdi-0x8], 0x0
 ins:cmp qword ptr [rdi-0x8], 0x0
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rip+0x2b2b0c]
 ins:mov r11, qword ptr [rip+0x2b2b0c]
 reg:r11
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rip+0x2ab5fb]
 ins:mov r15, qword ptr [rip+0x2ab5fb]
 reg:r15
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rip+0x2aa24c]
 ins:mov r10d, dword ptr [rip+0x2aa24c]
 reg:r10d
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rip+0x2b2bd9]
 ins:mov r9d, dword ptr [rip+0x2b2bd9]
 reg:r9d
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rip+0x2b2ae0]
 ins:mov r14d, dword ptr [rip+0x2b2ae0]
 reg:r14d
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x2aa219]
 ins:mov r8, qword ptr [rip+0x2aa219]
 reg:r8
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rip+0x2b2ab0]
 ins:mov r13, qword ptr [rip+0x2b2ab0]
 reg:r13
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x2b2ae7]
 ins:mov r12, qword ptr [rip+0x2b2ae7]
 reg:r12
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x2b1a9f]
 ins:mov rbp, qword ptr [rip+0x2b1a9f]
 reg:rbp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2b1a87]
 ins:mov rbx, qword ptr [rip+0x2b1a87]
 reg:rbx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included sub rax, 0x3
 ins:sub rax, 0x3
 reg:rax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included cmp rax, 0x1e
 ins:cmp rax, 0x1e
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rdi+0x8]
 ins:mov r11, qword ptr [rdi+0x8]
 reg:r11
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included add rdi, 0x10
 ins:add rdi, 0x10
 reg:rdi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included cmp edx, 0xf
 ins:cmp edx, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0xf
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz dl
 ins:setnz dl
 reg:dl
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included sub rax, 0x3
 ins:sub rax, 0x3
 reg:rax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included cmp rax, 0x1e
 ins:cmp rax, 0x1e
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x8]
 ins:mov rbp, qword ptr [rdi+0x8]
 reg:rbp
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included add rdi, 0x10
 ins:add rdi, 0x10
 reg:rdi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included cmp edx, 0xf
 ins:cmp edx, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0xf
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz dl
 ins:setnz dl
 reg:dl
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rdi+0x8]
 ins:mov r15, qword ptr [rdi+0x8]
 reg:r15
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rdi+0x8]
 ins:mov r14d, dword ptr [rdi+0x8]
 reg:r14d
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0x8]
 ins:mov r13, qword ptr [rdi+0x8]
 reg:r13
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included add rdi, 0x10
 ins:add rdi, 0x10
 reg:rdi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included cmp edx, 0xf
 ins:cmp edx, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0xf
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included setnz dl
 ins:setnz dl
 reg:dl
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rdi+0x8]
 ins:mov r12, qword ptr [rdi+0x8]
 reg:r12
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor ecx, dword ptr [rdi+0x8]
 ins:xor ecx, dword ptr [rdi+0x8]
 reg:ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or edx, 0x1
 ins:or edx, 0x1
 reg:edx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor ecx, dword ptr [rdi+0x8]
 ins:xor ecx, dword ptr [rdi+0x8]
 reg:ecx
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or edx, 0x2
 ins:or edx, 0x2
 reg:edx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor esi, dword ptr [rdi+0x8]
 ins:xor esi, dword ptr [rdi+0x8]
 reg:esi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or edx, 0x4
 ins:or edx, 0x4
 reg:edx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included xor esi, dword ptr [rdi+0x8]
 ins:xor esi, dword ptr [rdi+0x8]
 reg:esi
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included or edx, 0x8
 ins:or edx, 0x8
 reg:edx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rdi+0x8]
 ins:mov r10d, dword ptr [rdi+0x8]
 reg:r10d
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r9d, 0x1
 ins:mov r9d, 0x1
 reg:r9d
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov edx, 0xffffffff
 ins:mov edx, 0xffffffff
 reg:edx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi+0x8]
 ins:mov r8, qword ptr [rdi+0x8]
 reg:r8
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdi+0x8]
 ins:mov rbx, qword ptr [rdi+0x8]
 reg:rbx
 Exe _dl_aux_init
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _dl_aux_init
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _dl_aux_init
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2d7f0a]
 ins:mov edx, dword ptr [rip+0x2d7f0a]
 reg:edx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included sub rsp, 0x1d8
 ins:sub rsp, 0x1d8
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 ins:lea rdi, ptr [rsp+0x40]
 reg:rdi
 Exe _dl_discover_osversion
 Exe uname
 INSTSELECTOR: instruction to be included mov eax, 0x3f
 ins:mov eax, 0x3f
 reg:eax
 Exe uname
 Exe uname
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff001
 ins:cmp rax, 0xfffffffffffff001
 reg:rflags
 Exe uname
 Exe uname
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0xc2]
 ins:lea rdi, ptr [rsp+0xc2]
 reg:rdi
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included xor r8d, r8d
 ins:xor r8d, r8d
 reg:r8d
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rdi]
 ins:movsx esi, byte ptr [rdi]
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea edx, ptr [rsi-0x30]
 ins:lea edx, ptr [rsi-0x30]
 reg:edx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dl, 0x9
 ins:cmp dl, 0x9
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rdi+0x1]
 ins:movsx edx, byte ptr [rdi+0x1]
 reg:edx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdi+0x1]
 ins:lea rcx, ptr [rdi+0x1]
 reg:rcx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included sub esi, 0x30
 ins:sub esi, 0x30
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea edi, ptr [rdx-0x30]
 ins:lea edi, ptr [rdx-0x30]
 reg:edi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dil, 0x9
 ins:cmp dil, 0x9
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included shl eax, 0x8
 ins:shl eax, 0x8
 reg:eax
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included add r8d, 0x1
 ins:add r8d, 0x1
 reg:r8d
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea rdi, ptr [rcx+0x1]
 ins:lea rdi, ptr [rcx+0x1]
 reg:rdi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included or eax, esi
 ins:or eax, esi
 reg:eax
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dl, 0x2e
 ins:cmp dl, 0x2e
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp r8d, 0x3
 ins:cmp r8d, 0x3
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included add rsp, 0x1d8
 ins:add rsp, 0x1d8
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rdi]
 ins:movsx esi, byte ptr [rdi]
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea edx, ptr [rsi-0x30]
 ins:lea edx, ptr [rsi-0x30]
 reg:edx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dl, 0x9
 ins:cmp dl, 0x9
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rdi+0x1]
 ins:movsx edx, byte ptr [rdi+0x1]
 reg:edx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdi+0x1]
 ins:lea rcx, ptr [rdi+0x1]
 reg:rcx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included sub esi, 0x30
 ins:sub esi, 0x30
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea edi, ptr [rdx-0x30]
 ins:lea edi, ptr [rdx-0x30]
 reg:edi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dil, 0x9
 ins:cmp dil, 0x9
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea esi, ptr [rsi+rsi*4]
 ins:lea esi, ptr [rsi+rsi*4]
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included add rcx, 0x1
 ins:add rcx, 0x1
 reg:rcx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea esi, ptr [rdx+rsi*2-0x30]
 ins:lea esi, ptr [rdx+rsi*2-0x30]
 reg:esi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rcx]
 ins:movsx edx, byte ptr [rcx]
 reg:edx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included lea edi, ptr [rdx-0x30]
 ins:lea edi, ptr [rdx-0x30]
 reg:edi
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp dil, 0x9
 ins:cmp dil, 0x9
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included cmp r8d, 0x3
 ins:cmp r8d, 0x3
 reg:rflags
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included mov ecx, 0x3
 ins:mov ecx, 0x3
 reg:ecx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included add rsp, 0x1d8
 ins:add rsp, 0x1d8
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included sub ecx, r8d
 ins:sub ecx, r8d
 reg:ecx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included shl ecx, 0x3
 ins:shl ecx, 0x3
 reg:ecx
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_discover_osversion
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included add rsp, 0x1d8
 ins:add rsp, 0x1d8
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_discover_osversion
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_discover_osversion
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2df413]
 ins:mov edx, dword ptr [rip+0x2df413]
 reg:edx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp eax, 0x2061f
 ins:cmp eax, 0x2061f
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov eax, 0x4001d8
 ins:mov eax, 0x4001d8
 reg:eax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp rax, 0x400358
 ins:cmp rax, 0x400358
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp dword ptr [rip-0x2a2ba], 0x25
 ins:cmp dword ptr [rip-0x2a2ba], 0x25
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rip-0x2a2ba], 0x25
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip-0x2a2c9]
 ins:mov rbp, qword ptr [rip-0x2a2c9]
 reg:rbp
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov ebx, 0x4001d8
 ins:mov ebx, 0x4001d8
 reg:ebx
 Exe generic_start_main
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included add rbx, 0x18
 ins:add rbx, 0x18
 reg:rbx
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp rbx, 0x400358
 ins:cmp rbx, 0x400358
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2dd6c0]
 ins:mov rdx, qword ptr [rip+0x2dd6c0]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0xc]
 ins:mov edi, dword ptr [rsp+0xc]
 reg:edi
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included cmp dword ptr [rbx+0x8], 0x25
 ins:cmp dword ptr [rbx+0x8], 0x25
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbx+0x8], 0x25
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe generic_start_main
 Exe generic_start_main
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included mov eax, 0x15
 ins:mov eax, 0x15
 reg:eax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x5fc54]
 ins:lea rdi, ptr [rip+0x5fc54]
 reg:rdi
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc887]
 ins:lea rax, ptr [rip+0xc887]
 reg:rax
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x3e2e]
 ins:lea rax, ptr [rip+0x3e2e]
 reg:rax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2867fc], 0x40
 ins:test dword ptr [rip+0x2867fc], 0x40
 reg:rflags
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x226b]
 ins:lea rax, ptr [rip+0x226b]
 reg:rax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2867b1], 0x100000
 ins:test dword ptr [rip+0x2867b1], 0x100000
 reg:rflags
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 Exe strerror
 INSTSELECTOR: instruction to be included mov eax, 0x15
 ins:mov eax, 0x15
 reg:eax
 Exe strerror
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2ddd4]
 ins:lea rdi, ptr [rip+0x2ddd4]
 reg:rdi
 Exe strerror
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x8647]
 ins:lea rax, ptr [rip+0x8647]
 reg:rax
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x26ee]
 ins:lea rax, ptr [rip+0x26ee]
 reg:rax
 Exe strerror
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x254944], 0x100000
 ins:test dword ptr [rip+0x254944], 0x100000
 reg:rflags
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x60db]
 ins:lea rax, ptr [rip+0x60db]
 reg:rax
 Exe strerror
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x254931], 0x200
 ins:test dword ptr [rip+0x254931], 0x200
 reg:rflags
 Exe strerror
 Exe strerror
 Exe __default_morecore
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1469]
 ins:lea rax, ptr [rip+0x1469]
 reg:rax
 Exe __default_morecore
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c989f], 0x100000
 ins:test dword ptr [rip+0x2c989f], 0x100000
 reg:rflags
 Exe __default_morecore
 Exe __default_morecore
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x3e86]
 ins:lea rax, ptr [rip+0x3e86]
 reg:rax
 Exe __default_morecore
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c988c], 0x200
 ins:test dword ptr [rip+0x2c988c], 0x200
 reg:rflags
 Exe __default_morecore
 Exe __default_morecore
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x3]
 ins:lea rax, ptr [rip+0x3]
 reg:rax
 Exe __default_morecore
 Exe __default_morecore
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9189]
 ins:lea rax, ptr [rip+0x9189]
 reg:rax
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c6c87], 0x8
 ins:test dword ptr [rip+0x2c6c87], 0x8
 reg:rflags
 Exe __memmove_sse2
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x26]
 ins:lea rax, ptr [rip+0x26]
 reg:rax
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c6c74], 0x1000
 ins:test dword ptr [rip+0x2c6c74], 0x1000
 reg:rflags
 Exe __memmove_sse2
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c6c68], 0x20000
 ins:test dword ptr [rip+0x2c6c68], 0x20000
 reg:rflags
 Exe __memmove_sse2
 Exe __memmove_sse2
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included mov eax, 0x15
 ins:mov eax, 0x15
 reg:eax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x5fca4]
 ins:lea rdi, ptr [rip+0x5fca4]
 reg:rdi
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc897]
 ins:lea rax, ptr [rip+0xc897]
 reg:rax
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x22de]
 ins:lea rax, ptr [rip+0x22de]
 reg:rax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x286814], 0x100000
 ins:test dword ptr [rip+0x286814], 0x100000
 reg:rflags
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x5fbb]
 ins:lea rax, ptr [rip+0x5fbb]
 reg:rax
 Exe __GI___stpcpy
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x286801], 0x200
 ins:test dword ptr [rip+0x286801], 0x200
 reg:rflags
 Exe __GI___stpcpy
 Exe __GI___stpcpy
 Exe __memchr
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c7256], 0x200
 ins:test dword ptr [rip+0x2c7256], 0x200
 reg:rflags
 Exe __memchr
 Exe __memchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1d]
 ins:lea rax, ptr [rip+0x1d]
 reg:rax
 Exe __memchr
 Exe __memchr
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c7242], 0x80000
 ins:test dword ptr [rip+0x2c7242], 0x80000
 reg:rflags
 Exe __memchr
 Exe __memchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2a89]
 ins:lea rax, ptr [rip+0x2a89]
 reg:rax
 Exe __memchr
 Exe __dlvsym
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2e99]
 ins:lea rax, ptr [rip+0x2e99]
 reg:rax
 Exe __dlvsym
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x244a97], 0x10
 ins:test dword ptr [rip+0x244a97], 0x10
 reg:rflags
 Exe __dlvsym
 Exe __dlvsym
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xb6]
 ins:lea rax, ptr [rip+0xb6]
 reg:rax
 Exe __dlvsym
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x244a4c], 0x200
 ins:test dword ptr [rip+0x244a4c], 0x200
 reg:rflags
 Exe __dlvsym
 Exe __dlvsym
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2f3]
 ins:lea rax, ptr [rip+0x2f3]
 reg:rax
 Exe __dlvsym
 Exe __dlvsym
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2f4772]
 ins:mov edx, dword ptr [rip+0x2f4772]
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x418620
 ins:mov eax, 0x418620
 reg:eax
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included test dh, 0x1
 ins:test dh, 0x1
 reg:rflags
 Exe __cos_sse2
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included and edx, 0x40
 ins:and edx, 0x40
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x41ee20
 ins:mov eax, 0x41ee20
 reg:eax
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov edx, 0x4102a0
 ins:mov edx, 0x4102a0
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe __cos_sse2
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2f47a2]
 ins:mov edx, dword ptr [rip+0x2f47a2]
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x41a2b0
 ins:mov eax, 0x41a2b0
 reg:eax
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included test dh, 0x1
 ins:test dh, 0x1
 reg:rflags
 Exe __cos_sse2
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included and edx, 0x40
 ins:and edx, 0x40
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x420ec0
 ins:mov eax, 0x420ec0
 reg:eax
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included mov edx, 0x412ca0
 ins:mov edx, 0x412ca0
 reg:edx
 Exe __cos_sse2
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe __cos_sse2
 Exe strerror
 INSTSELECTOR: instruction to be included mov eax, 0x15
 ins:mov eax, 0x15
 reg:eax
 Exe strerror
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2dd84]
 ins:lea rdi, ptr [rip+0x2dd84]
 reg:rdi
 Exe strerror
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x8647]
 ins:lea rax, ptr [rip+0x8647]
 reg:rax
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x465e]
 ins:lea rax, ptr [rip+0x465e]
 reg:rax
 Exe strerror
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x25492c], 0x40
 ins:test dword ptr [rip+0x25492c], 0x40
 reg:rflags
 Exe strerror
 Exe strerror
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x267b]
 ins:lea rax, ptr [rip+0x267b]
 reg:rax
 Exe strerror
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2548e1], 0x100000
 ins:test dword ptr [rip+0x2548e1], 0x100000
 reg:rflags
 Exe strerror
 Exe strerror
 Exe _wordcopy_bwd_dest_aligned
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c5d3e], 0x20
 ins:test dword ptr [rip+0x2c5d3e], 0x20
 reg:rflags
 Exe _wordcopy_bwd_dest_aligned
 Exe _wordcopy_bwd_dest_aligned
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2c5cfa], 0x100000
 ins:test dword ptr [rip+0x2c5cfa], 0x100000
 reg:rflags
 Exe _wordcopy_bwd_dest_aligned
 Exe _wordcopy_bwd_dest_aligned
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x221]
 ins:lea rax, ptr [rip+0x221]
 reg:rax
 Exe _wordcopy_bwd_dest_aligned
 Exe _wordcopy_bwd_dest_aligned
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9]
 ins:lea rax, ptr [rip+0x9]
 reg:rax
 Exe _wordcopy_bwd_dest_aligned
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2c6cd2]
 ins:mov edx, dword ptr [rip+0x2c6cd2]
 reg:edx
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included and eax, 0x21000
 ins:and eax, 0x21000
 reg:eax
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included cmp eax, 0x21000
 ins:cmp eax, 0x21000
 reg:rflags
 Exe __memmove_sse2
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2c6c86], 0x2
 ins:test byte ptr [rip+0x2c6c86], 0x2
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rip+0x2c6c86], 0x2
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x441a20
 ins:mov eax, 0x441a20
 reg:eax
 Exe __memmove_sse2
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included and edx, 0x2
 ins:and edx, 0x2
 reg:edx
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included mov eax, 0x448270
 ins:mov eax, 0x448270
 reg:eax
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included mov edx, 0x4456f0
 ins:mov edx, 0x4456f0
 reg:edx
 Exe __memmove_sse2
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe __memmove_sse2
 Exe strerror_r
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x19]
 ins:lea rax, ptr [rip+0x19]
 reg:rax
 Exe strerror_r
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2882f7], 0x4
 ins:test dword ptr [rip+0x2882f7], 0x4
 reg:rflags
 Exe strerror_r
 Exe strerror_r
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xd846]
 ins:lea rax, ptr [rip+0xd846]
 reg:rax
 Exe strerror_r
 Exe strerror_r
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xcea9]
 ins:lea rax, ptr [rip+0xcea9]
 reg:rax
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x288627], 0x10
 ins:test dword ptr [rip+0x288627], 0x10
 reg:rflags
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x16]
 ins:lea rax, ptr [rip+0x16]
 reg:rax
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x2885dc], 0x200
 ins:test dword ptr [rip+0x2885dc], 0x200
 reg:rflags
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ec3]
 ins:lea rax, ptr [rip+0x9ec3]
 reg:rax
 Exe __strchr_sse42
 Exe __strchr_sse42
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xb829]
 ins:lea rax, ptr [rip+0xb829]
 reg:rax
 Exe strrchr
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x286977], 0x10
 ins:test dword ptr [rip+0x286977], 0x10
 reg:rflags
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x16]
 ins:lea rax, ptr [rip+0x16]
 reg:rax
 Exe strrchr
 INSTSELECTOR: instruction to be included test dword ptr [rip+0x28692c], 0x200
 ins:test dword ptr [rip+0x28692c], 0x200
 reg:rflags
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x99c3]
 ins:lea rax, ptr [rip+0x99c3]
 reg:rax
 Exe strrchr
 Exe strrchr
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov esi, 0x40
 ins:mov esi, 0x40
 reg:esi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x900
 ins:mov edi, 0x900
 reg:edi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included sub rsp, 0xc8
 ins:sub rsp, 0xc8
 reg:rsp
 Exe __pthread_initialize_minimal
 Exe sbrk
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe sbrk
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2b8920]
 ins:mov rbx, qword ptr [rip+0x2b8920]
 reg:rbx
 Exe sbrk
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b1e95]
 ins:mov eax, dword ptr [rip+0x2b1e95]
 reg:eax
 Exe sbrk
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included cmp rbp, 0x0
 ins:cmp rbp, 0x0
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe sbrk
 Exe __brk
 INSTSELECTOR: instruction to be included mov ecx, 0xc
 ins:mov ecx, 0xc
 reg:ecx
 Exe __brk
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __brk
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe __brk
 Exe __brk
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff000
 ins:cmp rax, 0xfffffffffffff000
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0xfffffffffffff000
 Exe __brk
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __brk
 Exe __brk
 Exe __brk
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __brk
 INSTSELECTOR: instruction to be included cmp rsi, rdx
 ins:cmp rsi, rdx
 reg:rflags
 Exe __brk
 Exe __brk
 Exe sbrk
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2b88d8]
 ins:mov rbx, qword ptr [rip+0x2b88d8]
 reg:rbx
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbx, 0xffffffffffffffff
 ins:mov rbx, 0xffffffffffffffff
 reg:rbx
 Exe sbrk
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included cmp rbp, 0x0
 ins:cmp rbp, 0x0
 reg:rflags
 Exe sbrk
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe sbrk
 INSTSELECTOR: instruction to be included add rdi, rbx
 ins:add rdi, rbx
 reg:rdi
 Exe sbrk
 Exe sbrk
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe sbrk
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x20
 ins:cmp rdx, 0x20
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, 0x20
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included and ecx, 0x7
 ins:and ecx, 0x7
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdx, ptr [rcx+rdx*1-0x8]
 ins:lea rdx, ptr [rcx+rdx*1-0x8]
 reg:rdx
 Exe memcpy
 INSTSELECTOR: instruction to be included sub ecx, 0x8
 ins:sub ecx, 0x8
 reg:ecx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc ecx
 ins:inc ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x1]
 ins:lea rsi, ptr [rsi+0x1]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x1]
 ins:lea rdi, ptr [rdi+0x1]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included shr ecx, 0x5
 ins:shr ecx, 0x5
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included dec ecx
 ins:dec ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x10]
 ins:mov r9, qword ptr [rsi+0x10]
 reg:r9
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x18]
 ins:mov r10, qword ptr [rsi+0x18]
 reg:r10
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x20]
 ins:lea rsi, ptr [rsi+0x20]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x20]
 ins:lea rdi, ptr [rdi+0x20]
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0x1f
 ins:and edx, 0x1f
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x8]
 ins:mov rax, qword ptr [rsp-0x8]
 reg:rax
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov r8, qword ptr fs:[0x10]
 ins:mov r8, qword ptr fs:[0x10]
 reg:r8
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov eax, 0xda
 ins:mov eax, 0xda
 reg:eax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rdi, ptr [r8+0x2d0]
 ins:lea rdi, ptr [r8+0x2d0]
 reg:rdi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rax, ptr [r8+0x310]
 ins:lea rax, ptr [r8+0x310]
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x303a48]
 ins:mov rax, qword ptr [rip+0x303a48]
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rdi, ptr [r8+0x2e0]
 ins:lea rdi, ptr [r8+0x2e0]
 reg:rdi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov esi, 0x18
 ins:mov esi, 0x18
 reg:esi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov eax, 0x111
 ins:mov eax, 0x111
 reg:eax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fb1ac]
 ins:mov rax, qword ptr [rip+0x2fb1ac]
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rax, ptr [r8+0x2c0]
 ins:lea rax, ptr [r8+0x2c0]
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x2fca9e]
 ins:movzx eax, byte ptr [rip+0x2fca9e]
 reg:eax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x28]
 ins:lea rbx, ptr [rsp+0x28]
 reg:rbx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov ecx, 0x10
 ins:mov ecx, 0x10
 reg:ecx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsp+0x20]
 ins:lea rsi, ptr [rsp+0x20]
 reg:rsi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included rep stosq qword ptr [rdi]
 ins:rep stosq qword ptr [rdi]
 reg:rdi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included rep stosq qword ptr [rdi]
 ins:rep stosq qword ptr [rdi]
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsp+0x20]
 ins:lea rsi, ptr [rsp+0x20]
 reg:rsi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x21
 ins:mov edi, 0x21
 reg:edi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, 0x180000000
 ins:mov rax, 0x180000000
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov r10d, 0x8
 ins:mov r10d, 0x8
 reg:r10d
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included or qword ptr [rsp+0x28], rax
 ins:or qword ptr [rsp+0x28], rax
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+0x28], rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov eax, 0xe
 ins:mov eax, 0xe
 reg:eax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x709258
 ins:mov edi, 0x709258
 reg:edi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe __pthread_initialize_minimal
 Exe _dl_get_tls_static_info
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2aaef9]
 ins:mov rax, qword ptr [rip+0x2aaef9]
 reg:rax
 Exe _dl_get_tls_static_info
 Exe _dl_get_tls_static_info
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2b30a7]
 ins:mov rax, qword ptr [rip+0x2b30a7]
 reg:rax
 Exe _dl_get_tls_static_info
 Exe _dl_get_tls_static_info
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp]
 ins:mov rcx, qword ptr [rsp]
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmp rcx, 0xf
 ins:cmp rcx, 0xf
 reg:rflags
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov ecx, 0x10
 ins:mov ecx, 0x10
 reg:ecx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x303372]
 ins:mov rax, qword ptr [rip+0x303372]
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x10]
 ins:lea rbp, ptr [rsp+0x10]
 reg:rbp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx+rax*1-0x1]
 ins:lea rax, ptr [rcx+rax*1-0x1]
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included div rcx
 ins:div rcx
 reg:rdx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx-0x1]
 ins:lea rax, ptr [rcx-0x1]
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x303372]
 ins:mov rax, qword ptr [rip+0x303372]
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x10]
 ins:lea rbp, ptr [rsp+0x10]
 reg:rbp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx+rax*1-0x1]
 ins:lea rax, ptr [rcx+rax*1-0x1]
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included div rcx
 ins:div rcx
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x4cd9fc
 ins:mov edi, 0x4cd9fc
 reg:edi
 Exe __pthread_initialize_minimal
 Exe getenv
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe getenv
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe getenv
 Exe strlen
 INSTSELECTOR: instruction to be included xor rax, rax
 ins:xor rax, rax
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe strlen
 INSTSELECTOR: instruction to be included and ecx, 0x3f
 ins:and ecx, 0x3f
 reg:ecx
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included cmp ecx, 0x30
 ins:cmp ecx, 0x30
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included movdqu xmm1, xmmword ptr [rdi]
 ins:movdqu xmm1, xmmword ptr [rdi]
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmmword ptr [rax]
 ins:pcmpeqb xmm0, xmmword ptr [rax]
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 ins:mov esi, 0xffffffff
 reg:esi
 Exe strlen
 INSTSELECTOR: instruction to be included sub rcx, rax
 ins:sub rcx, rax
 reg:rcx
 Exe strlen
 INSTSELECTOR: instruction to be included shl esi, cl
 ins:shl esi, cl
 reg:esi
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included and edx, esi
 ins:and edx, esi
 reg:edx
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm1, xmm1
 ins:pxor xmm1, xmm1
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm2, xmm2
 ins:pxor xmm2, xmm2
 reg:xmm2
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm3, xmm3
 ins:pxor xmm3, xmm3
 reg:xmm3
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmmword ptr [rax+0x10]
 ins:pcmpeqb xmm0, xmmword ptr [rax+0x10]
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm1, xmmword ptr [rax+0x20]
 ins:pcmpeqb xmm1, xmmword ptr [rax+0x20]
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm1
 ins:pmovmskb edx, xmm1
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included sub rax, rdi
 ins:sub rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strlen
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rax*1+0x20]
 ins:lea rax, ptr [rdx+rax*1+0x20]
 reg:rax
 Exe strlen
 Exe getenv
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x29ff1b]
 ins:mov rbp, qword ptr [rip+0x29ff1b]
 reg:rbp
 Exe getenv
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe getenv
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 ins:movzx eax, byte ptr [rbx]
 reg:eax
 Exe getenv
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx+0x1], 0x0
 ins:cmp byte ptr [rbx+0x1], 0x0
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included movzx r12d, word ptr [rbx]
 ins:movzx r12d, word ptr [rbx]
 reg:r12d
 Exe getenv
 INSTSELECTOR: instruction to be included lea r15, ptr [rbx+0x2]
 ins:lea r15, ptr [rbx+0x2]
 reg:r15
 Exe getenv
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp]
 ins:mov rbx, qword ptr [rbp]
 reg:rbx
 Exe getenv
 INSTSELECTOR: instruction to be included lea r13, ptr [r14-0x2]
 ins:lea r13, ptr [r14-0x2]
 reg:r13
 Exe getenv
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe getenv
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included cmp r12w, word ptr [rbx]
 ins:cmp r12w, word ptr [rbx]
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+0x2]
 ins:lea rdi, ptr [rbx+0x2]
 reg:rdi
 Exe getenv
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe getenv
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included add rbp, 0x8
 ins:add rbp, 0x8
 reg:rbp
 Exe getenv
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp]
 ins:mov rbx, qword ptr [rbp]
 reg:rbx
 Exe getenv
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included cmp r12w, word ptr [rbx]
 ins:cmp r12w, word ptr [rbx]
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+0x2]
 ins:lea rdi, ptr [rbx+0x2]
 reg:rdi
 Exe getenv
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe getenv
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe getenv
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe getenv
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe getenv
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe getenv
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x3
 ins:mov edi, 0x3
 reg:edi
 Exe __pthread_initialize_minimal
 Exe getrlimit64
 INSTSELECTOR: instruction to be included mov eax, 0x61
 ins:mov eax, 0x61
 reg:eax
 Exe getrlimit64
 Exe getrlimit64
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff001
 ins:cmp rax, 0xfffffffffffff001
 reg:rflags
 Exe getrlimit64
 Exe getrlimit64
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edx, 0x200000
 ins:mov edx, 0x200000
 reg:edx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x10]
 ins:mov rdx, qword ptr [rsp+0x10]
 reg:rdx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmp rdx, 0xffffffffffffffff
 ins:cmp rdx, 0xffffffffffffffff
 reg:rflags
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmp rdx, 0x3fff
 ins:cmp rdx, 0x3fff
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, 0x3fff
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov eax, 0x4000
 ins:mov eax, 0x4000
 reg:eax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmovbe rdx, rax
 ins:cmovbe rdx, rax
 reg:rdx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fc3e2]
 ins:mov rax, qword ptr [rip+0x2fc3e2]
 reg:rax
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov esi, 0x406520
 ins:mov esi, 0x406520
 reg:esi
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov edi, 0x7092d8
 ins:mov edi, 0x7092d8
 reg:edi
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included add rcx, qword ptr [rip+0x3032d0]
 ins:add rcx, qword ptr [rip+0x3032d0]
 reg:rcx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included add rcx, 0x800
 ins:add rcx, 0x800
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included cmovb rdx, rcx
 ins:cmovb rdx, rcx
 reg:rdx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+rdx*1-0x1]
 ins:lea rdx, ptr [rax+rdx*1-0x1]
 reg:rdx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included neg rcx
 ins:neg rcx
 reg:rcx
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included and rdx, rcx
 ins:and rdx, rcx
 reg:rdx
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __pthread_initialize_minimal
 Exe __register_atfork
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe __register_atfork
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe __register_atfork
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 ins:sub rsp, 0x10
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b5549], 0x0
 ins:cmp dword ptr [rip+0x2b5549], 0x0
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [rip+0x2b3a17], esi
 ins:lock cmpxchg dword ptr [rip+0x2b3a17], esi
 reg:eax
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rip+0x2b3a08], esi
 ins:cmpxchg dword ptr [rip+0x2b3a08], esi
 reg:eax
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov eax, 0x707c80
 ins:mov eax, 0x707c80
 reg:eax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lea r9, ptr [rax+0x30]
 ins:lea r9, ptr [rax+0x30]
 reg:r9
 Exe __register_atfork
 INSTSELECTOR: instruction to be included xor r8d, r8d
 ins:xor r8d, r8d
 reg:r8d
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [r9]
 ins:mov ecx, dword ptr [r9]
 reg:ecx
 Exe __register_atfork
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lea rcx, ptr [r8+r8*2]
 ins:lea rcx, ptr [r8+r8*2]
 reg:rcx
 Exe __register_atfork
 INSTSELECTOR: instruction to be included shl rcx, 0x4
 ins:shl rcx, 0x4
 reg:rcx
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lea r8, ptr [rax+rcx*1+0x8]
 ins:lea r8, ptr [rax+rcx*1+0x8]
 reg:r8
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2b54b1]
 ins:mov rdx, qword ptr [rip+0x2b54b1]
 reg:rdx
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lock cmpxchg qword ptr [rip+0x2b5497], r8
 ins:lock cmpxchg qword ptr [rip+0x2b5497], r8
 reg:rax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmpxchg qword ptr [rip+0x2b5497], r8
 ins:cmpxchg qword ptr [rip+0x2b5497], r8
 reg:rax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b549b], 0x0
 ins:cmp dword ptr [rip+0x2b549b], 0x0
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included lock dec dword ptr [rip+0x2b396a]
 ins:lock dec dword ptr [rip+0x2b396a]
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included dec dword ptr [rip+0x2b395c]
 ins:dec dword ptr [rip+0x2b395c]
 reg:rflags
 Exe __register_atfork
 Exe __register_atfork
 INSTSELECTOR: instruction to be included cmp r8, 0x1
 ins:cmp r8, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp r8, 0x1
 Exe __register_atfork
 INSTSELECTOR: instruction to be included sbb eax, eax
 ins:sbb eax, eax
 reg:eax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included add rsp, 0x10
 ins:add rsp, 0x10
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __register_atfork
 INSTSELECTOR: instruction to be included and eax, 0xc
 ins:and eax, 0xc
 reg:eax
 Exe __register_atfork
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __register_atfork
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included add rsp, 0xc8
 ins:add rsp, 0xc8
 reg:rsp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __pthread_initialize_minimal
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __pthread_initialize_minimal
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2d6a93]
 ins:mov rdx, qword ptr [rip+0x2d6a93]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 ins:mov rax, qword ptr [rdx]
 reg:rax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor al, al
 ins:xor al, al
 reg:al
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2dd678]
 ins:mov rdx, qword ptr [rip+0x2dd678]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0xc]
 ins:mov edi, dword ptr [rsp+0xc]
 reg:edi
 Exe generic_start_main
 Exe __setfpucw
 Exe __setfpucw
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rsp-0x2]
 ins:movzx eax, word ptr [rsp-0x2]
 reg:eax
 Exe __setfpucw
 INSTSELECTOR: instruction to be included and di, 0xf3f
 ins:and di, 0xf3f
 reg:di
 Exe __setfpucw
 INSTSELECTOR: instruction to be included and ax, 0xf0c0
 ins:and ax, 0xf0c0
 reg:ax
 Exe __setfpucw
 INSTSELECTOR: instruction to be included or edi, eax
 ins:or edi, eax
 reg:edi
 Exe __setfpucw
 Exe __setfpucw
 Exe __setfpucw
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included rdtsc 
 ins:rdtsc 
 reg:edx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included shl rdx, 0x20
 ins:shl rdx, 0x20
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov eax, eax
 ins:mov eax, eax
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included or rdx, rax
 ins:or rdx, rax
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2ab423], 0x0
 ins:cmp qword ptr [rip+0x2ab423], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0x2ab423], 0x0
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d312c
 ins:mov edi, 0x4d312c
 reg:edi
 Exe _dl_non_dynamic_init
 Exe strlen
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strlen
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe strlen
 Exe strncmp
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included cmp rdx, 0x1
 ins:cmp rdx, 0x1
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included mov r11, rdx
 ins:mov r11, rdx
 reg:r11
 Exe strncmp
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe strncmp
 INSTSELECTOR: instruction to be included mov eax, edi
 ins:mov eax, edi
 reg:eax
 Exe strncmp
 INSTSELECTOR: instruction to be included and rcx, 0x3f
 ins:and rcx, 0x3f
 reg:rcx
 Exe strncmp
 INSTSELECTOR: instruction to be included and rax, 0x3f
 ins:and rax, 0x3f
 reg:rax
 Exe strncmp
 INSTSELECTOR: instruction to be included cmp ecx, 0x30
 ins:cmp ecx, 0x30
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included cmp eax, 0x30
 ins:cmp eax, 0x30
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included movlpd xmm1, qword ptr [rdi]
 ins:movlpd xmm1, qword ptr [rdi]
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included movlpd xmm2, qword ptr [rsi]
 ins:movlpd xmm2, qword ptr [rsi]
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included movhpd xmm1, qword ptr [rdi+0x8]
 ins:movhpd xmm1, qword ptr [rdi+0x8]
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included movhpd xmm2, qword ptr [rsi+0x8]
 ins:movhpd xmm2, qword ptr [rsi+0x8]
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm1, xmm2
 ins:pcmpeqb xmm1, xmm2
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included psubb xmm1, xmm0
 ins:psubb xmm1, xmm0
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm1
 ins:pmovmskb edx, xmm1
 reg:edx
 Exe strncmp
 INSTSELECTOR: instruction to be included sub edx, 0xffff
 ins:sub edx, 0xffff
 reg:edx
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r11, 0x10
 ins:sub r11, 0x10
 reg:r11
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r11, rdx
 ins:sub r11, rdx
 reg:r11
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi+rdx*1]
 ins:movzx ecx, byte ptr [rsi+rdx*1]
 reg:ecx
 Exe strncmp
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdi+rdx*1]
 ins:movzx eax, byte ptr [rdi+rdx*1]
 reg:eax
 Exe strncmp
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe strncmp
 Exe getenv
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx+r14*1], 0x3d
 ins:cmp byte ptr [rbx+r14*1], 0x3d
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbx+r14*1+0x1]
 ins:lea rbx, ptr [rbx+r14*1+0x1]
 reg:rbx
 Exe getenv
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edx, 0x4e4027
 ins:mov edx, 0x4e4027
 reg:edx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmovnz rdx, rax
 ins:cmovnz rdx, rax
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx], 0x0
 ins:cmp byte ptr [rdx], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rdx], 0x0
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2b28ee], 0x0
 ins:cmp qword ptr [rip+0x2b28ee], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0x2b28ee], 0x0
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov esi, 0x4e4027
 ins:mov esi, 0x4e4027
 reg:esi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor r8d, r8d
 ins:xor r8d, r8d
 reg:r8d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rsi
 ins:mov rdi, rsi
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov r15d, edx
 ins:mov r15d, edx
 reg:r15d
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov r14, r9
 ins:mov r14, r9
 reg:r14
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov r13, rsi
 ins:mov r13, rsi
 reg:r13
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rbp, rcx
 ins:mov rbp, rcx
 reg:rbp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rdi, rsi
 ins:mov rdi, rsi
 reg:rdi
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x489]
 ins:lea rdi, ptr [rax+0x489]
 reg:rdi
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x1]
 ins:lea r12, ptr [rax+0x1]
 reg:r12
 Exe _dl_new_object
 Exe __calloc
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe __calloc
 INSTSELECTOR: instruction to be included mov eax, 0xffffffff
 ins:mov eax, 0xffffffff
 reg:eax
 Exe __calloc
 INSTSELECTOR: instruction to be included or rdx, rsi
 ins:or rdx, rsi
 reg:rdx
 Exe __calloc
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe __calloc
 INSTSELECTOR: instruction to be included imul r13, rsi
 ins:imul r13, rsi
 reg:r13
 Exe __calloc
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rax
 Exe __calloc
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __calloc
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x2c5576]
 ins:mov rcx, qword ptr [rip+0x2c5576]
 reg:rcx
 Exe __calloc
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe __calloc
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffd0
 ins:mov rax, 0xffffffffffffffd0
 reg:rax
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rbx, qword ptr fs:[rax]
 ins:mov rbx, qword ptr fs:[rax]
 reg:rbx
 Exe __calloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe __calloc
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x28]
 ins:mov rsi, qword ptr [rsp+0x28]
 reg:rsi
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe __calloc
 Exe malloc_hook_ini
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2c4c6a]
 ins:mov eax, dword ptr [rip+0x2c4c6a]
 reg:eax
 Exe malloc_hook_ini
 Exe malloc_hook_ini
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe malloc_hook_ini
 Exe malloc_hook_ini
 Exe malloc_hook_ini
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe malloc_hook_ini
 Exe malloc_hook_ini
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2cb317]
 ins:mov rbx, qword ptr [rip+0x2cb317]
 reg:rbx
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffd0
 ins:mov rax, 0xffffffffffffffd0
 reg:rax
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 NORMAL FLAG REG: inst test rbx, rbx
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r12]
 ins:movsx eax, byte ptr [r12]
 reg:eax
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x4d
 ins:cmp byte ptr [rbp], 0x4d
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1], 0x41
 ins:cmp byte ptr [rbp+0x1], 0x41
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x2], 0x4c
 ins:cmp byte ptr [rbp+0x2], 0x4c
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x3], 0x4c
 ins:cmp byte ptr [rbp+0x3], 0x4c
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r12]
 ins:movsx eax, byte ptr [r12]
 reg:eax
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2cb18d]
 ins:mov rax, qword ptr [rip+0x2cb18d]
 reg:rax
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe ptmalloc_init.part.7
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe ptmalloc_init.part.7
 Exe malloc_hook_ini
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 ins:mov rdi, qword ptr [rsp+0x8]
 reg:rdi
 Exe malloc_hook_ini
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe malloc_hook_ini
 Exe __malloc
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe __malloc
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __malloc
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2c5f60]
 ins:mov rax, qword ptr [rip+0x2c5f60]
 reg:rax
 Exe __malloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffd0
 ins:mov rax, 0xffffffffffffffd0
 reg:rax
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rbx, qword ptr fs:[rax]
 ins:mov rbx, qword ptr fs:[rax]
 reg:rbx
 Exe __malloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx+0x4]
 ins:mov eax, dword ptr [rbx+0x4]
 reg:eax
 Exe __malloc
 INSTSELECTOR: instruction to be included and eax, 0x4
 ins:and eax, 0x4
 reg:eax
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe __malloc
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2cddcc], 0x0
 ins:cmp dword ptr [rip+0x2cddcc], 0x0
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [rbx], esi
 ins:lock cmpxchg dword ptr [rbx], esi
 reg:eax
 Exe __malloc
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rbx], esi
 ins:cmpxchg dword ptr [rbx], esi
 reg:eax
 Exe __malloc
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, rsi
 ins:mov r9, rsi
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea r14, ptr [rsi+0x17]
 ins:lea r14, ptr [rsi+0x17]
 reg:r14
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 ins:sub rsp, 0x98
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, 0x1f
 ins:cmp r14, 0x1f
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and r14, 0xfffffffffffffff0
 ins:and r14, 0xfffffffffffffff0
 reg:r14
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, 0xffffffffffffffbf
 ins:cmp r14, 0xffffffffffffffbf
 reg:rflags
 NORMAL FLAG REG: inst cmp r14, 0xffffffffffffffbf
 Exe _int_malloc
 INSTSELECTOR: instruction to be included setnbe al
 ins:setnbe al
 reg:al
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, r9
 ins:cmp r14, r9
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, qword ptr [rip+0x2cf85f]
 ins:cmp r14, qword ptr [rip+0x2cf85f]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r8d, r14d
 ins:mov r8d, r14d
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r8d, 0x4
 ins:shr r8d, 0x4
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub r8d, 0x2
 ins:sub r8d, 0x2
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+rax*8+0x8]
 ins:mov rcx, qword ptr [rbp+rax*8+0x8]
 reg:rcx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+rax*8]
 ins:lea rsi, ptr [rbp+rax*8]
 reg:rsi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsi+0x8]
 ins:lea rdx, ptr [rsi+0x8]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, 0x3ff
 ins:cmp r14, 0x3ff
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10d, r14d
 ins:mov r10d, r14d
 reg:r10d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r10d, 0x4
 ins:shr r10d, 0x4
 reg:r10d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+r10*1-0x2]
 ins:lea eax, ptr [r10+r10*1-0x2]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+rax*8+0x58]
 ins:lea rax, ptr [rbp+rax*8+0x58]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax+0x18]
 ins:mov r13, qword ptr [rax+0x18]
 reg:r13
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10, r14
 ins:mov r10, r14
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r10, 0x6
 ins:shr r10, 0x6
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r10, 0x30
 ins:cmp r10, 0x30
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10, r14
 ins:mov r10, r14
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r10, 0x9
 ins:shr r10, 0x9
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r10, 0x14
 ins:cmp r10, 0x14
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add r10d, 0x5b
 ins:add r10d, 0x5b
 reg:r10d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x4], 0x1
 ins:test byte ptr [rbp+0x4], 0x1
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add r10d, 0x30
 ins:add r10d, 0x30
 reg:r10d
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x4], 0x1
 ins:test byte ptr [rbp+0x4], 0x1
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r14, rdi
 ins:mov r14, rdi
 reg:r14
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included sub rsp, 0x68
 ins:sub rsp, 0x68
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2d1947], 0x0
 ins:cmp qword ptr [rip+0x2d1947], 0x0
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lock or dword ptr [rdi+0x4], 0x1
 ins:lock or dword ptr [rdi+0x4], 0x1
 reg:rflags
 COMP2MEM: inst lock or dword ptr [rdi+0x4], 0x1
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+0x50]
 ins:lea rax, ptr [rdi+0x50]
 reg:rax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea r9, ptr [rdi+0x58]
 ins:lea r9, ptr [rdi+0x58]
 reg:r9
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x8]
 ins:lea r10, ptr [rdi+0x8]
 reg:r10
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 ins:lea rax, ptr [rsp+0x40]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included sub qword ptr [rsp+0x10], rax
 ins:sub qword ptr [rsp+0x10], rax
 reg:rflags
 COMP2MEM: inst sub qword ptr [rsp+0x10], rax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xchg qword ptr [r10], rbx
 ins:xchg qword ptr [r10], rbx
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdi+0x58]
 ins:lea rcx, ptr [rdi+0x58]
 reg:rcx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add edx, 0x1
 ins:add edx, 0x1
 reg:edx
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp edx, 0x80
 ins:cmp edx, 0x80
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp r14, 0x701920
 ins:cmp r14, 0x701920
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r14+0x4]
 ins:mov eax, dword ptr [r14+0x4]
 reg:eax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or eax, 0x2
 ins:or eax, 0x2
 reg:eax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rsp, 0x68
 ins:add rsp, 0x68
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add edx, 0x1
 ins:add edx, 0x1
 reg:edx
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp edx, 0x80
 ins:cmp edx, 0x80
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp r14, 0x701920
 ins:cmp r14, 0x701920
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r14+0x4]
 ins:mov eax, dword ptr [r14+0x4]
 reg:eax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or eax, 0x2
 ins:or eax, 0x2
 reg:eax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rsp, 0x68
 ins:add rsp, 0x68
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2cb4f2]
 ins:mov eax, dword ptr [rip+0x2cb4f2]
 reg:eax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rsp, 0x68
 ins:add rsp, 0x68
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe malloc_consolidate
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsp+0x8]
 ins:mov r9, qword ptr [rsp+0x8]
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rsp]
 ins:mov r10d, dword ptr [rsp]
 reg:r10d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, r14d
 ins:mov eax, r14d
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea r15, ptr [rbp+0x58]
 ins:lea r15, ptr [rbp+0x58]
 reg:r15
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr eax, 0x4
 ins:shr eax, 0x4
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r12, r9
 ins:mov r12, r9
 reg:r12
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x6
 ins:shr rax, 0x6
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x30
 ins:add eax, 0x30
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x9
 ins:shr rax, 0x9
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x5b
 ins:add eax, 0x5b
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0xc
 ins:shr rax, 0xc
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x6e
 ins:add eax, 0x6e
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0xf
 ins:shr rax, 0xf
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x77
 ins:add eax, 0x77
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x12
 ins:shr rax, 0x12
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x7c
 ins:add eax, 0x7c
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x70]
 ins:lea rax, ptr [rsp+0x70]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub qword ptr [rsp], rax
 ins:sub qword ptr [rsp], rax
 reg:rflags
 COMP2MEM: inst sub qword ptr [rsp], rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13d, 0x2710
 ins:mov r13d, 0x2710
 reg:r13d
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp+0x70]
 ins:mov rbx, qword ptr [rbp+0x70]
 reg:rbx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbx, r15
 ins:cmp rbx, r15
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x8]
 ins:mov rdx, qword ptr [rbx+0x8]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbx+0x18]
 ins:mov r9, qword ptr [rbx+0x18]
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rdx, 0x10
 ins:cmp rdx, 0x10
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rdx, qword ptr [rbp+0x880]
 ins:cmp rdx, qword ptr [rbp+0x880]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, 0x3ff
 ins:cmp r14, 0x3ff
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea ecx, ptr [r10+0x1]
 ins:lea ecx, ptr [r10+0x1]
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+r10*1]
 ins:lea eax, ptr [r10+r10*1]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edi, ecx
 ins:mov edi, ecx
 reg:edi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbp+rax*8+0x58]
 ins:lea rdx, ptr [rbp+rax*8+0x58]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr edi, 0x5
 ins:shr edi, 0x5
 reg:edi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, edi
 ins:mov eax, edi
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rax*4+0x858]
 ins:mov esi, dword ptr [rbp+rax*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, esi
 ins:cmp eax, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+r10*1-0x2]
 ins:lea eax, ptr [r10+r10*1-0x2]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+rax*8+0x58]
 ins:lea rax, ptr [rbp+rax*8+0x58]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x10]
 ins:mov rdx, qword ptr [rax+0x10]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, qword ptr [rdx+0x8]
 ins:cmp r14, qword ptr [rdx+0x8]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, r12
 ins:mov r9, r12
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdx+0x28]
 ins:mov r13, qword ptr [rdx+0x28]
 reg:r13
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea ecx, ptr [r10+0x1]
 ins:lea ecx, ptr [r10+0x1]
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+r10*1]
 ins:lea eax, ptr [r10+r10*1]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edi, ecx
 ins:mov edi, ecx
 reg:edi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbp+rax*8+0x58]
 ins:lea rdx, ptr [rbp+rax*8+0x58]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr edi, 0x5
 ins:shr edi, 0x5
 reg:edi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, edi
 ins:mov eax, edi
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rax*4+0x858]
 ins:mov esi, dword ptr [rbp+rax*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, esi
 ins:cmp eax, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi+0x1]
 ins:lea eax, ptr [rdi+0x1]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rdx*4+0x858]
 ins:mov esi, dword ptr [rbp+rdx*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi+0x2]
 ins:lea eax, ptr [rdi+0x2]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rdx*4+0x858]
 ins:mov esi, dword ptr [rbp+rdx*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp+0x58]
 ins:mov rdx, qword ptr [rbp+0x58]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [r14+0x20]
 ins:lea rcx, ptr [r14+0x20]
 reg:rcx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x4], 0x1
 ins:test byte ptr [rbp+0x4], 0x1
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _int_malloc
 Exe _int_malloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x2ca805]
 ins:mov r14, qword ptr [rip+0x2ca805]
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 NORMAL FLAG REG: inst test rsi, rsi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea r13, ptr [r14-0x1]
 ins:lea r13, ptr [r14-0x1]
 reg:r13
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2c9d81], rdi
 ins:cmp qword ptr [rip+0x2c9d81], rdi
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbx+0x58]
 ins:mov r12, qword ptr [rbx+0x58]
 reg:r12
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r12+0x8]
 ins:mov r15, qword ptr [r12+0x8]
 reg:r15
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and r15, 0xfffffffffffffff8
 ins:and r15, 0xfffffffffffffff8
 reg:r15
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rbx, 0x701920
 ins:cmp rbx, 0x701920
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2c9b31]
 ins:mov rax, qword ptr [rip+0x2c9b31]
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2c9b87]
 ins:mov edx, dword ptr [rip+0x2c9b87]
 reg:edx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r11, r13
 ins:mov r11, r13
 reg:r11
 Exe sysmalloc
 INSTSELECTOR: instruction to be included not r11
 ins:not r11
 reg:r11
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+rax*1+0x20]
 ins:lea rax, ptr [rbp+rax*1+0x20]
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub r14, r15
 ins:sub r14, r15
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and edx, 0x2
 ins:and edx, 0x2
 reg:edx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmovnz r14, rax
 ins:cmovnz r14, rax
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r14, r13
 ins:add r14, r13
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and r14, r11
 ins:and r14, r11
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 NORMAL FLAG REG: inst test r14, r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r10, r14
 ins:mov r10, r14
 reg:r10
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp r10, 0xfffff
 ins:cmp r10, 0xfffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r10, 0xfffff
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r14, r10
 ins:mov r14, r10
 reg:r14
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe sysmalloc
 Exe __default_morecore
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe __default_morecore
 Exe sbrk
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe sbrk
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2b8920]
 ins:mov rbx, qword ptr [rip+0x2b8920]
 reg:rbx
 Exe sbrk
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b1e95]
 ins:mov eax, dword ptr [rip+0x2b1e95]
 reg:eax
 Exe sbrk
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included cmp rbp, 0x0
 ins:cmp rbp, 0x0
 reg:rflags
 Exe sbrk
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe sbrk
 INSTSELECTOR: instruction to be included add rdi, rbx
 ins:add rdi, rbx
 reg:rdi
 Exe sbrk
 Exe sbrk
 Exe sbrk
 Exe __brk
 INSTSELECTOR: instruction to be included mov ecx, 0xc
 ins:mov ecx, 0xc
 reg:ecx
 Exe __brk
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __brk
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe __brk
 Exe __brk
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff000
 ins:cmp rax, 0xfffffffffffff000
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0xfffffffffffff000
 Exe __brk
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __brk
 Exe __brk
 Exe __brk
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __brk
 INSTSELECTOR: instruction to be included cmp rsi, rdx
 ins:cmp rsi, rdx
 reg:rflags
 Exe __brk
 Exe __brk
 Exe sbrk
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe sbrk
 Exe sbrk
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe sbrk
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe sbrk
 Exe __default_morecore
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __default_morecore
 INSTSELECTOR: instruction to be included cmp rax, 0xffffffffffffffff
 ins:cmp rax, 0xffffffffffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0xffffffffffffffff
 Exe __default_morecore
 INSTSELECTOR: instruction to be included cmovnz rdx, rax
 ins:cmovnz rdx, rax
 reg:rdx
 Exe __default_morecore
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe __default_morecore
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __default_morecore
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsp]
 ins:mov r11, qword ptr [rsp]
 reg:r11
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsp+0x8]
 ins:mov r10, qword ptr [rsp+0x8]
 reg:r10
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2cfad1]
 ins:mov rax, qword ptr [rip+0x2cfad1]
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2c9989], 0x0
 ins:cmp qword ptr [rip+0x2c9989], 0x0
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, r10
 ins:mov rdx, r10
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rdx, qword ptr [rip+0x2ca209]
 ins:add rdx, qword ptr [rip+0x2ca209]
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [r12+r15*1]
 ins:lea rcx, ptr [r12+r15*1]
 reg:rcx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp r8, rcx
 ins:cmp r8, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp r8, rcx
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r10, r15
 ins:add r10, r15
 reg:r10
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2c99c2]
 ins:mov rax, qword ptr [rip+0x2c99c2]
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or r10, 0x1
 ins:or r10, 0x1
 reg:r10
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2c9955], 0x2
 ins:test byte ptr [rip+0x2c9955], 0x2
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 NORMAL FLAG REG: inst test r15, r15
 Exe sysmalloc
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp r8, rcx
 ins:cmp r8, rcx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, r8
 ins:mov rdx, r8
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and edx, 0xf
 ins:and edx, 0xf
 reg:edx
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov eax, 0x10
 ins:mov eax, 0x10
 reg:eax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rdi, ptr [r8+rax*1]
 ins:lea rdi, ptr [r8+rax*1]
 reg:rdi
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, r15
 ins:add rax, r15
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r10, rax
 ins:add r10, rax
 reg:r10
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r8, r10
 ins:add r8, r10
 reg:r8
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r13, r8
 ins:add r13, r8
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rax, r8
 ins:sub rax, r8
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and r13, r11
 ins:and r13, r11
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r13, rax
 ins:add r13, rax
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r14, r13
 ins:mov r14, r13
 reg:r14
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, r15
 ins:add rax, r15
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r10, rax
 ins:add r10, rax
 reg:r10
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r8, r10
 ins:add r8, r10
 reg:r8
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r13, r8
 ins:add r13, r8
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rax, r8
 ins:sub rax, r8
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and r13, r11
 ins:and r13, r11
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r13, rax
 ins:add r13, rax
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r14, r13
 ins:mov r14, r13
 reg:r14
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2cf9fb]
 ins:mov rdx, qword ptr [rip+0x2cf9fb]
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2ca14b]
 ins:mov rdx, qword ptr [rip+0x2ca14b]
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsp]
 ins:mov r8, qword ptr [rsp]
 reg:r8
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rax, r8
 ins:sub rax, r8
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rdx, r13
 ins:add rdx, r13
 reg:rdx
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, r14
 ins:add rax, r14
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rax, 0x1
 ins:or rax, 0x1
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 NORMAL FLAG REG: inst test r15, r15
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rax, r8
 ins:mov rax, r8
 reg:rax
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x888], rdx
 ins:cmp qword ptr [rbx+0x888], rdx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x8]
 ins:mov rdx, qword ptr [rax+0x8]
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+0x20]
 ins:lea rcx, ptr [rbp+0x20]
 reg:rcx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff8
 ins:and rdx, 0xfffffffffffffff8
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rdx, rbp
 ins:sub rdx, rbp
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rbx, 0x701920
 ins:cmp rbx, 0x701920
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x701920
 Exe sysmalloc
 INSTSELECTOR: instruction to be included setnz cl
 ins:setnz cl
 reg:cl
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax+rbp*1]
 ins:lea rsi, ptr [rax+rbp*1]
 reg:rsi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rbp, 0x1
 ins:or rbp, 0x1
 reg:rbp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included shl rcx, 0x2
 ins:shl rcx, 0x2
 reg:rcx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rdx, 0x1
 ins:or rdx, 0x1
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rbp, rcx
 ins:or rbp, rcx
 reg:rbp
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x8]
 ins:mov rdx, qword ptr [rax+0x8]
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+0x20]
 ins:lea rcx, ptr [rbp+0x20]
 reg:rcx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff8
 ins:and rdx, 0xfffffffffffffff8
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included sub rdx, rbp
 ins:sub rdx, rbp
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rbx, 0x701920
 ins:cmp rbx, 0x701920
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x701920
 Exe sysmalloc
 INSTSELECTOR: instruction to be included setnz cl
 ins:setnz cl
 reg:cl
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax+rbp*1]
 ins:lea rsi, ptr [rax+rbp*1]
 reg:rsi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rbp, 0x1
 ins:or rbp, 0x1
 reg:rbp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included shl rcx, 0x2
 ins:shl rcx, 0x2
 reg:rcx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rdx, 0x1
 ins:or rdx, 0x1
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rbp, rcx
 ins:or rbp, rcx
 reg:rbp
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe sysmalloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2ceed3]
 ins:mov eax, dword ptr [rip+0x2ceed3]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsp]
 ins:mov r9, qword ptr [rsp]
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included xor al, 0xff
 ins:xor al, 0xff
 reg:al
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, r9
 ins:mov rdx, r9
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, rcx
 ins:mov rdi, rcx
 reg:rdi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add rsp, 0x98
 ins:add rsp, 0x98
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _int_malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 NORMAL FLAG REG: inst test rbx, rbx
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2cddfb], 0x0
 ins:cmp dword ptr [rip+0x2cddfb], 0x0
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __malloc
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2cddfb], 0x0
 ins:cmp dword ptr [rip+0x2cddfb], 0x0
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included lock dec dword ptr [rbx]
 ins:lock dec dword ptr [rbx]
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included dec dword ptr [rbx]
 ins:dec dword ptr [rbx]
 reg:rflags
 Exe __malloc
 Exe __malloc
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe __malloc
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __malloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __malloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __malloc
 Exe __calloc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __calloc
 Exe __calloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe __calloc
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe __calloc
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe __calloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe __calloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe __calloc
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included movd xmm8, esi
 ins:movd xmm8, esi
 reg:xmm8
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included punpcklbw xmm8, xmm8
 ins:punpcklbw xmm8, xmm8
 reg:xmm8
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included punpcklwd xmm8, xmm8
 ins:punpcklwd xmm8, xmm8
 reg:xmm8
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included pshufd xmm8, xmm8, 0x0
 ins:pshufd xmm8, xmm8, 0x0
 reg:xmm8
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rdx, 0x40
 ins:cmp rdx, 0x40
 reg:rflags
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rdx, 0x10
 ins:cmp rdx, 0x10
 reg:rflags
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rdx, 0x20
 ins:cmp rdx, 0x20
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, 0x20
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdi+0x40]
 ins:lea rcx, ptr [rdi+0x40]
 reg:rcx
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included and rcx, 0xffffffffffffffc0
 ins:and rcx, 0xffffffffffffffc0
 reg:rcx
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included add rdx, rdi
 ins:add rdx, rdi
 reg:rdx
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included and rdx, 0xffffffffffffffc0
 ins:and rdx, 0xffffffffffffffc0
 reg:rdx
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rcx, rdx
 ins:cmp rcx, rdx
 reg:rflags
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included add rcx, 0x40
 ins:add rcx, 0x40
 reg:rcx
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included add rcx, 0x40
 ins:add rcx, 0x40
 reg:rcx
 Exe __memset_sse2
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe __memset_sse2
 Exe __memset_sse2
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+0x468]
 ins:lea rax, ptr [rax+0x468]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+0x488]
 ins:lea rdi, ptr [rbx+0x488]
 reg:rdi
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included and r15d, 0x3
 ins:and r15d, 0x3
 reg:r15d
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x470]
 ins:lea rax, ptr [rbx+0x470]
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x20
 ins:cmp rdx, 0x20
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, 0x20
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx+0x314]
 ins:movzx eax, byte ptr [rbx+0x314]
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included and eax, 0xfffffffc
 ins:and eax, 0xfffffffc
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included or eax, r15d
 ins:or eax, r15d
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x26bf6d], 0x1
 ins:test byte ptr [rip+0x26bf6d], 0x1
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rip+0x26bf6d], 0x1
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x358]
 ins:lea rax, ptr [rbx+0x358]
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+r14*8]
 ins:lea rax, ptr [r14+r14*8]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x7098a0]
 ins:mov rax, qword ptr [rax+0x7098a0]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included add rax, 0x2b8
 ins:add rax, 0x2b8
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x358]
 ins:lea rax, ptr [rbx+0x358]
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+r14*8]
 ins:lea rax, ptr [r14+r14*8]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x7098a0]
 ins:mov rax, qword ptr [rax+0x7098a0]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included add rax, 0x2b8
 ins:add rax, 0x2b8
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe _dl_new_object
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included add rbp, 0x2b8
 ins:add rbp, 0x2b8
 reg:rbp
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x2b8]
 ins:lea rax, ptr [rbx+0x2b8]
 reg:rax
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included movzx ebp, byte ptr [rax]
 ins:movzx ebp, byte ptr [rax]
 reg:ebp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included test bpl, bpl
 ins:test bpl, bpl
 reg:rflags
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 ins:mov rdi, qword ptr [rsp]
 reg:rdi
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _dl_new_object
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _dl_new_object
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _dl_new_object
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2b28b5]
 ins:mov rdi, qword ptr [rip+0x2b28b5]
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbx+0x350]
 ins:mov r9, qword ptr [rbx+0x350]
 reg:r9
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbx+0x348]
 ins:mov r8, qword ptr [rbx+0x348]
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included movzx esi, word ptr [rdi+0x38]
 ins:movzx esi, word ptr [rdi+0x38]
 reg:esi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, qword ptr [rdi+0x20]
 ins:add rax, qword ptr [rdi+0x20]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 NORMAL FLAG REG: inst test rsi, rsi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsi*8]
 ins:lea rdx, ptr [rsi*8]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included shl rsi, 0x6
 ins:shl rsi, 0x6
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rsi, rdx
 ins:sub rsi, rdx
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rax]
 ins:mov ecx, dword ptr [rax]
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x2
 ins:cmp ecx, 0x2
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x10]
 ins:mov rcx, qword ptr [rax+0x10]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x38
 ins:add rdx, 0x38
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax-0x10]
 ins:mov rcx, qword ptr [rax-0x10]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included shr rcx, 0x4
 ins:shr rcx, 0x4
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rsi
 ins:cmp rdx, rsi
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rsi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rbx]
 ins:sub rdi, qword ptr [rbx]
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, qword ptr [rbx+0x10]
 ins:add rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r8, rdi
 ins:add r8, rdi
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r9, rdi
 ins:add r9, rdi
 reg:r9
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x1
 ins:cmp ecx, 0x1
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x38
 ins:add rdx, 0x38
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rsi
 ins:cmp rdx, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rax]
 ins:mov ecx, dword ptr [rax]
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x2
 ins:cmp ecx, 0x2
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx], 0x0
 ins:cmp qword ptr [rbx], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbx], 0x0
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x10]
 ins:mov rcx, qword ptr [rax+0x10]
 reg:rcx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rcx, qword ptr [rax+0x28]
 ins:add rcx, qword ptr [rax+0x28]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rcx, r8
 ins:cmp rcx, r8
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, rcx
 ins:mov r8, rcx
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x4], 0x1
 ins:test byte ptr [rax+0x4], 0x1
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rcx, r9
 ins:cmp rcx, r9
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbx+0x348]
 ins:mov r8, qword ptr [rbx+0x348]
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9, rcx
 ins:mov r9, rcx
 reg:r9
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x38
 ins:add rdx, 0x38
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rsi
 ins:cmp rdx, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rax]
 ins:mov ecx, dword ptr [rax]
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x2
 ins:cmp ecx, 0x2
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x10]
 ins:mov rcx, qword ptr [rax+0x10]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x38
 ins:add rdx, 0x38
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax-0x10]
 ins:mov rcx, qword ptr [rax-0x10]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included shr rcx, 0x4
 ins:shr rcx, 0x4
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rsi
 ins:cmp rdx, rsi
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rsi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rbx]
 ins:sub rdi, qword ptr [rbx]
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, qword ptr [rbx+0x10]
 ins:add rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r8, rdi
 ins:add r8, rdi
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r9, rdi
 ins:add r9, rdi
 reg:r9
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 ins:mov rax, qword ptr [rdx]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x40]
 ins:lea rsi, ptr [rbx+0x40]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8d, 0x6fffffff
 ins:mov r8d, 0x6fffffff
 reg:r8d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r11d, 0x6ffffdff
 ins:mov r11d, 0x6ffffdff
 reg:r11d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r12d, 0x6ffffeff
 ins:mov r12d, 0x6ffffeff
 reg:r12d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r13, 0x37ffffa00
 ins:mov r13, 0x37ffffa00
 reg:r13
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rbp, 0x37ffff1a0
 ins:mov rbp, 0x37ffff1a0
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r10d, 0x31
 ins:mov r10d, 0x31
 reg:r10d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9d, 0x70000021
 ins:mov r9d, 0x70000021
 reg:r9d
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rax, 0x21
 ins:cmp rax, 0x21
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, r8
 ins:mov rcx, r8
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rcx, rax
 ins:sub rcx, rax
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rcx, 0xf
 ins:cmp rcx, 0xf
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea ecx, ptr [rax+rax*1]
 ins:lea ecx, ptr [rax+rax*1]
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sar ecx, 0x1
 ins:sar ecx, 0x1
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp ecx, 0xfffffffc
 ins:cmp ecx, 0xfffffffc
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x10
 ins:add rdx, 0x10
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 ins:mov rax, qword ptr [rdx]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rax, 0x21
 ins:cmp rax, 0x21
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, r8
 ins:mov rcx, r8
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rcx, rax
 ins:sub rcx, rax
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rcx, 0xf
 ins:cmp rcx, 0xf
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, r9
 ins:mov rcx, r9
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rcx, rax
 ins:sub rcx, rax
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x10
 ins:add rdx, 0x10
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 ins:mov rax, qword ptr [rdx]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rax, 0x21
 ins:cmp rax, 0x21
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, r8
 ins:mov rcx, r8
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sub rcx, rax
 ins:sub rcx, rax
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rcx, 0xf
 ins:cmp rcx, 0xf
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x60]
 ins:mov rax, qword ptr [rbx+0x60]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rsi, qword ptr [rax+0x8]
 ins:add rsi, qword ptr [rax+0x8]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax]
 ins:mov rdx, qword ptr [rax]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8d, 0x70
 ins:mov r8d, 0x70
 reg:r8d
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov eax, 0x60
 ins:mov eax, 0x60
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ecx, 0x40
 ins:mov ecx, 0x40
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9d, 0x30
 ins:mov r9d, 0x30
 reg:r9d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r10d, 0x20
 ins:mov r10d, 0x20
 reg:r10d
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r11d, 0x10
 ins:mov r11d, 0x10
 reg:r11d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edx, 0x50
 ins:mov edx, 0x50
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x58]
 ins:mov rsi, qword ptr [rbx+0x58]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, r9
 ins:mov rcx, r9
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9, r10
 ins:mov r9, r10
 reg:r9
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r10, r11
 ins:mov r10, r11
 reg:r10
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x68]
 ins:mov rsi, qword ptr [rbx+0x68]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsi]
 ins:mov rbp, qword ptr [rsi]
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea r11, ptr [r10+0x700f00]
 ins:lea r11, ptr [r10+0x700f00]
 reg:r11
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r10, rdi
 ins:mov r10, rdi
 reg:r10
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r10, qword ptr [rsi+0x8]
 ins:add r10, qword ptr [rsi+0x8]
 reg:r10
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x70]
 ins:mov rsi, qword ptr [rbx+0x70]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsi]
 ins:mov r11, qword ptr [rsi]
 reg:r11
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea r10, ptr [r9+0x700f00]
 ins:lea r10, ptr [r9+0x700f00]
 reg:r10
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r11, rdi
 ins:mov r11, rdi
 reg:r11
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add r11, qword ptr [rsi+0x8]
 ins:add r11, qword ptr [rsi+0x8]
 reg:r11
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x78]
 ins:mov rsi, qword ptr [rbx+0x78]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbx+0xf8]
 ins:mov rcx, qword ptr [rbx+0xf8]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rcx]
 ins:mov r9, qword ptr [rcx]
 reg:r9
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rsi, ptr [rdx+0x700f00]
 ins:lea rsi, ptr [rdx+0x700f00]
 reg:rsi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, qword ptr [rcx+0x8]
 ins:add rdx, qword ptr [rcx+0x8]
 reg:rdx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x1c8]
 ins:mov rdx, qword ptr [rbx+0x1c8]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdx]
 ins:mov rsi, qword ptr [rdx]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x700f00]
 ins:lea rcx, ptr [rax+0x700f00]
 reg:rcx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, qword ptr [rdx+0x8]
 ins:add rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x298]
 ins:mov rax, qword ptr [rbx+0x298]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x1c8]
 ins:mov rdx, qword ptr [rbx+0x1c8]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdx]
 ins:mov rsi, qword ptr [rdx]
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x700f00]
 ins:lea rcx, ptr [rax+0x700f00]
 reg:rcx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, qword ptr [rdx+0x8]
 ins:add rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x298]
 ins:mov rax, qword ptr [rbx+0x298]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdi, qword ptr [rax+0x8]
 ins:add rdi, qword ptr [rax+0x8]
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax]
 ins:mov rcx, qword ptr [rax]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+0x700f00]
 ins:lea rdx, ptr [r8+0x700f00]
 reg:rdx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x130]
 ins:mov rdx, qword ptr [rbx+0x130]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x130]
 ins:mov rdx, qword ptr [rbx+0x130]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 NORMAL FLAG REG: inst test al, 0x2
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test al, 0x4
 ins:test al, 0x4
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x170]
 ins:mov rax, qword ptr [rbx+0x170]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2b24e8], 0x40
 ins:test byte ptr [rip+0x2b24e8], 0x40
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rip+0x2b24e8], 0x40
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x8]
 ins:mov rax, qword ptr [rax+0x8]
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x128], 0x0
 ins:cmp qword ptr [rbx+0x128], 0x0
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x298]
 ins:mov rax, qword ptr [rdi+0x298]
 reg:rax
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x8]
 ins:mov rax, qword ptr [rax+0x8]
 reg:rax
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rax]
 ins:mov edx, dword ptr [rax]
 reg:edx
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rax+0x8]
 ins:mov esi, dword ptr [rax+0x8]
 reg:esi
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rax+0x4]
 ins:mov r8d, dword ptr [rax+0x4]
 reg:r8d
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included lea ecx, ptr [rsi-0x1]
 ins:lea ecx, ptr [rsi-0x1]
 reg:ecx
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included add esi, esi
 ins:add esi, esi
 reg:esi
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x10]
 ins:lea rcx, ptr [rax+0x10]
 reg:rcx
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax+0xc]
 ins:mov eax, dword ptr [rax+0xc]
 reg:eax
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx+rsi*4]
 ins:lea rax, ptr [rcx+rsi*4]
 reg:rax
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rdx*4]
 ins:lea rax, ptr [rax+rdx*4]
 reg:rax
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov rdx, r8
 ins:mov rdx, r8
 reg:rdx
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included shl rdx, 0x2
 ins:shl rdx, 0x2
 reg:rdx
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x60]
 ins:mov rax, qword ptr [rdi+0x60]
 reg:rax
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x8]
 ins:mov rax, qword ptr [rax+0x8]
 reg:rax
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rax]
 ins:mov edx, dword ptr [rax]
 reg:edx
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rdx*4]
 ins:lea rax, ptr [rax+rdx*4]
 reg:rax
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 Exe _dl_setup_hash
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x388]
 ins:mov rax, qword ptr [rbx+0x388]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbx+0x28]
 ins:lea rdx, ptr [rbx+0x28]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included or byte ptr [rbx+0x314], 0x4
 ins:or byte ptr [rbx+0x314], 0x4
 reg:rflags
 COMP2MEM: inst or byte ptr [rbx+0x314], 0x4
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0xb0]
 ins:mov rax, qword ptr [rbx+0xb0]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x68]
 ins:mov rdx, qword ptr [rbx+0x68]
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdx+0x8]
 ins:mov rbp, qword ptr [rdx+0x8]
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rbp, qword ptr [rax+0x8]
 ins:add rbp, qword ptr [rax+0x8]
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe _dl_non_dynamic_init
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, r14d
 ins:mov eax, r14d
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea r15, ptr [rbp+0x58]
 ins:lea r15, ptr [rbp+0x58]
 reg:r15
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr eax, 0x4
 ins:shr eax, 0x4
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r12, r9
 ins:mov r12, r9
 reg:r12
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x6
 ins:shr rax, 0x6
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x30
 ins:add eax, 0x30
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x9
 ins:shr rax, 0x9
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x5b
 ins:add eax, 0x5b
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0xc
 ins:shr rax, 0xc
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x6e
 ins:add eax, 0x6e
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0xf
 ins:shr rax, 0xf
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x77
 ins:add eax, 0x77
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x12
 ins:shr rax, 0x12
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, 0x7c
 ins:add eax, 0x7c
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x70]
 ins:lea rax, ptr [rsp+0x70]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub qword ptr [rsp], rax
 ins:sub qword ptr [rsp], rax
 reg:rflags
 COMP2MEM: inst sub qword ptr [rsp], rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13d, 0x2710
 ins:mov r13d, 0x2710
 reg:r13d
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi+0x1]
 ins:lea eax, ptr [rdi+0x1]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rdx*4+0x858]
 ins:mov esi, dword ptr [rbp+rdx*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi+0x2]
 ins:lea eax, ptr [rdi+0x2]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+rdx*4+0x858]
 ins:mov esi, dword ptr [rbp+rdx*4+0x858]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 ins:cmp edi, 0x1
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+0x864]
 ins:mov esi, dword ptr [rbp+0x864]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub rax, r14
 ins:sub rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbp, 0x701920
 ins:cmp rbp, 0x701920
 reg:rflags
 NORMAL FLAG REG: inst cmp rbp, 0x701920
 Exe _int_malloc
 INSTSELECTOR: instruction to be included setnz cl
 ins:setnz cl
 reg:cl
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rsi, ptr [rdx+r14*1]
 ins:lea rsi, ptr [rdx+r14*1]
 reg:rsi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included or r14, 0x1
 ins:or r14, 0x1
 reg:r14
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shl rcx, 0x2
 ins:shl rcx, 0x2
 reg:rcx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included or rax, 0x1
 ins:or rax, 0x1
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, r12
 ins:mov r9, r12
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included or r14, rcx
 ins:or r14, rcx
 reg:r14
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdx+0x10]
 ins:lea rcx, ptr [rdx+0x10]
 reg:rcx
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2cee75]
 ins:mov eax, dword ptr [rip+0x2cee75]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbx+0x38]
 ins:mov r13, qword ptr [rbx+0x38]
 reg:r13
 Exe _dl_non_dynamic_init
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b243e]
 ins:mov edx, dword ptr [rip+0x2b243e]
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov eax, 0x408f60
 ins:mov eax, 0x408f60
 reg:eax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov edi, 0x7022c0
 ins:mov edi, 0x7022c0
 reg:edi
 Exe _dl_add_to_namespace_list
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rdi+0x10]
 ins:mov esi, dword ptr [rdi+0x10]
 reg:esi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and eax, 0x17f
 ins:and eax, 0x17f
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov edx, esi
 ins:mov edx, esi
 reg:edx
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and edx, 0x7c
 ins:and edx, 0x7c
 reg:edx
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x30034d]
 ins:mov eax, dword ptr [rip+0x30034d]
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included cmp eax, 0x100
 ins:cmp eax, 0x100
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov edi, esi
 ins:mov edi, esi
 reg:edi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and edi, 0x7f
 ins:and edi, 0x7f
 reg:edi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 ins:cmp edi, 0x1
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, dword ptr fs:[0x2d0]
 ins:mov eax, dword ptr fs:[0x2d0]
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included cmp eax, dword ptr [r8+0x8]
 ins:cmp eax, dword ptr [r8+0x8]
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [r8], edi
 ins:lock cmpxchg dword ptr [r8], edi
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, dword ptr fs:[0x2d0]
 ins:mov eax, dword ptr fs:[0x2d0]
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included add dword ptr [r8+0xc], 0x1
 ins:add dword ptr [r8+0xc], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [r8+0xc], 0x1
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe pthread_mutex_lock
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+rbx*8]
 ins:lea rax, ptr [rbx+rbx*8]
 reg:rax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x7098a0]
 ins:mov rdx, qword ptr [rax+0x7098a0]
 reg:rdx
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+rbx*8]
 ins:lea rax, ptr [rbx+rbx*8]
 reg:rax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x7098a8], 0x1
 ins:add dword ptr [rax+0x7098a8], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rax+0x7098a8], 0x1
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x26c05e]
 ins:mov rax, qword ptr [rip+0x26c05e]
 reg:rax
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov eax, 0x40a130
 ins:mov eax, 0x40a130
 reg:eax
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_add_to_namespace_list
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included mov edi, 0x7022c0
 ins:mov edi, 0x7022c0
 reg:edi
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_add_to_namespace_list
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_add_to_namespace_list
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rdi+0x10]
 ins:mov esi, dword ptr [rdi+0x10]
 reg:esi
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov r8d, esi
 ins:mov r8d, esi
 reg:r8d
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and eax, 0x17f
 ins:and eax, 0x17f
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and r8d, 0x7c
 ins:and r8d, 0x7c
 reg:r8d
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0xc], 0x1
 ins:sub dword ptr [rdx+0xc], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rdx+0xc], 0x1
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdx]
 ins:lock dec dword ptr [rdx]
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included cmp eax, 0x100
 ins:cmp eax, 0x100
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and eax, 0x7f
 ins:and eax, 0x7f
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, dword ptr fs:[0x2d0]
 ins:mov eax, dword ptr fs:[0x2d0]
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included cmp dword ptr [rdi+0x8], eax
 ins:cmp dword ptr [rdi+0x8], eax
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov r8d, 0x1
 ins:mov r8d, 0x1
 reg:r8d
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included sub dword ptr [rdi+0x4], 0x1
 ins:sub dword ptr [rdi+0x4], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rdi+0x4], 0x1
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0xc], 0x1
 ins:sub dword ptr [rdx+0xc], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rdx+0xc], 0x1
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdx]
 ins:lock dec dword ptr [rdx]
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe pthread_mutex_unlock
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d3143
 ins:mov edi, 0x4d3143
 reg:edi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ebx, 0x4e4027
 ins:mov ebx, 0x4e4027
 reg:ebx
 Exe _dl_non_dynamic_init
 Exe strncmp
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe strncmp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov ecx, 0x700fb0
 ins:mov ecx, 0x700fb0
 reg:ecx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov edx, 0x700fb8
 ins:mov edx, 0x700fb8
 reg:edx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x26eabb]
 ins:mov rsi, qword ptr [rip+0x26eabb]
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x26eaf4]
 ins:mov rdi, qword ptr [rip+0x26eaf4]
 reg:rdi
 Exe _dl_init_paths
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included sub rsp, 0x78
 ins:sub rsp, 0x78
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2696a8]
 ins:mov rax, qword ptr [rip+0x2696a8]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included setnz bl
 ins:setnz bl
 reg:bl
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x269664]
 ins:mov rax, qword ptr [rip+0x269664]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included movzx r13d, bl
 ins:movzx r13d, bl
 reg:r13d
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r15, rax
 ins:mov r15, rax
 reg:r15
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and r15, rsi
 ins:and r15, rsi
 reg:r15
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rbx, r15
 ins:mov rbx, r15
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdx, ptr [r13+0x1]
 ins:lea rdx, ptr [r13+0x1]
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shr rbx, cl
 ins:shr rbx, cl
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rcx, rbx
 ins:mov rcx, rbx
 reg:rcx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and ecx, 0x1
 ins:and ecx, 0x1
 reg:ecx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmovnz r13, rdx
 ins:cmovnz r13, rdx
 reg:r13
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rdx, cl
 ins:shl rdx, cl
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included neg rdx
 ins:neg rdx
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rdx, r15
 ins:test rdx, r15
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x26a61d]
 ins:mov rax, qword ptr [rip+0x26a61d]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x26a61d]
 ins:mov rax, qword ptr [rip+0x26a61d]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x2a0]
 ins:mov rcx, qword ptr [rax+0x2a0]
 reg:rcx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rax+0x2b0]
 ins:movzx eax, word ptr [rax+0x2b0]
 reg:eax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included xor r10d, r10d
 ins:xor r10d, r10d
 reg:r10d
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r15, rcx
 ins:mov r15, rcx
 reg:r15
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r13, r10
 ins:mov r13, r10
 reg:r13
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp dword ptr [r15], 0x4
 ins:cmp dword ptr [r15], 0x4
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15+0x10]
 ins:mov rbx, qword ptr [r15+0x10]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r12, qword ptr [r15+0x28]
 ins:mov r12, qword ptr [r15+0x28]
 reg:r12
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rbx, qword ptr [rax]
 ins:add rbx, qword ptr [rax]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp r12, 0xc
 ins:cmp r12, 0xc
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, 0xc
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r14, rbx
 ins:mov r14, rbx
 reg:r14
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+0xc]
 ins:lea rdi, ptr [rbx+0xc]
 reg:rdi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add r13, 0x1
 ins:add r13, 0x1
 reg:r13
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add r15, 0x38
 ins:add r15, 0x38
 reg:r15
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x38], r13
 ins:cmp qword ptr [rbp-0x38], r13
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp dword ptr [r15], 0x4
 ins:cmp dword ptr [r15], 0x4
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15+0x10]
 ins:mov rbx, qword ptr [r15+0x10]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r12, qword ptr [r15+0x28]
 ins:mov r12, qword ptr [r15+0x28]
 reg:r12
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rbx, qword ptr [rax]
 ins:add rbx, qword ptr [rax]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp r12, 0xc
 ins:cmp r12, 0xc
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, 0xc
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r14, rbx
 ins:mov r14, rbx
 reg:r14
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+0xc]
 ins:lea rdi, ptr [rbx+0xc]
 reg:rdi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp dword ptr [r14+0x8], 0x2
 ins:cmp dword ptr [r14+0x8], 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [r14+0x8], 0x2
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r14]
 ins:mov edx, dword ptr [r14]
 reg:edx
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp edx, 0x4
 ins:cmp edx, 0x4
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov edx, 0x4
 ins:mov edx, 0x4
 reg:edx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov esi, 0x4e3a80
 ins:mov esi, 0x4e3a80
 reg:esi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r14+0x4]
 ins:mov eax, dword ptr [r14+0x4]
 reg:eax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rdx, 0x3
 ins:add rdx, 0x3
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, 0x3
 ins:add rax, 0x3
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffffc
 ins:and rdx, 0xfffffffffffffffc
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffffc
 ins:and rax, 0xfffffffffffffffc
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rax*1+0xc]
 ins:lea rax, ptr [rdx+rax*1+0xc]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add r14, rax
 ins:add r14, rax
 reg:r14
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+0xc]
 ins:lea rdi, ptr [r14+0xc]
 reg:rdi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp r12, rax
 ins:cmp r12, rax
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp dword ptr [r14+0x8], 0x2
 ins:cmp dword ptr [r14+0x8], 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [r14+0x8], 0x2
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r14]
 ins:mov edx, dword ptr [r14]
 reg:edx
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp edx, 0x4
 ins:cmp edx, 0x4
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbp-0x48]
 ins:mov r15, qword ptr [rbp-0x48]
 reg:r15
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp-0x70]
 ins:mov r13, qword ptr [rbp-0x70]
 reg:r13
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rbx, ptr [r13+0x1]
 ins:lea rbx, ptr [r13+0x1]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffff000
 ins:and rdx, 0xfffffffffffff000
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included sub rsi, rdx
 ins:sub rsi, rdx
 reg:rsi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp rsp, rdx
 ins:cmp rsp, rdx
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and eax, 0xfff
 ins:and eax, 0xfff
 reg:eax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x8]
 ins:lea rdx, ptr [rax-0x8]
 reg:rdx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included sub rsp, rax
 ins:sub rsp, rax
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rdx*1], 0x0
 ins:or qword ptr [rsp+rdx*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rdx*1], 0x0
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xf]
 ins:lea rax, ptr [rsp+0xf]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included xor r14d, r14d
 ins:xor r14d, r14d
 reg:r14d
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included and qword ptr [rbp-0x48], 0xfffffffffffffff0
 ins:and qword ptr [rbp-0x48], 0xfffffffffffffff0
 reg:rflags
 COMP2MEM: inst and qword ptr [rbp-0x48], 0xfffffffffffffff0
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x50], 0x0
 ins:cmp byte ptr [rbp-0x50], 0x0
 reg:rflags
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp-0x48]
 ins:add rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x58]
 ins:mov rsi, qword ptr [rbp-0x58]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x60]
 ins:mov rsi, qword ptr [rbp-0x60]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+0x1]
 ins:lea rax, ptr [r14+0x1]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp-0x48]
 ins:add rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp rbx, 0x1
 ins:cmp rbx, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x1
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r8, rbx
 ins:mov r8, rbx
 reg:r8
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax+0x8]
 ins:mov rsi, qword ptr [rax+0x8]
 reg:rsi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl r8, 0x4
 ins:shl r8, 0x4
 reg:r8
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp rbx, 0x2
 ins:cmp rbx, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x2
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+r8*1-0x10]
 ins:lea rax, ptr [rax+r8*1-0x10]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x8]
 ins:mov rax, qword ptr [rax+0x8]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+rax*1+0x2]
 ins:lea rsi, ptr [rsi+rax*1+0x2]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp-0x48]
 ins:add rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp rbx, 0x1
 ins:cmp rbx, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x1
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r8, rbx
 ins:mov r8, rbx
 reg:r8
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax+0x8]
 ins:mov rsi, qword ptr [rax+0x8]
 reg:rsi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl r8, 0x4
 ins:shl r8, 0x4
 reg:r8
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cmp rbx, 0x2
 ins:cmp rbx, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x2
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+r8*1-0x10]
 ins:lea rax, ptr [rax+r8*1-0x10]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x8]
 ins:mov rax, qword ptr [rax+0x8]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+rax*1+0x2]
 ins:lea rsi, ptr [rsi+rax*1+0x2]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r9d, 0x1
 ins:mov r9d, 0x1
 reg:r9d
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x78]
 ins:mov rdi, qword ptr [rbp-0x78]
 reg:rdi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov ecx, ebx
 ins:mov ecx, ebx
 reg:ecx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov eax, r9d
 ins:mov eax, r9d
 reg:eax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsi+rax*1]
 ins:lea rdi, ptr [rsi+rax*1]
 reg:rdi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rax+0x8]
 ins:mov r14, qword ptr [rax+0x8]
 reg:r14
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+0x21]
 ins:lea rdi, ptr [r14+0x21]
 reg:rdi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rbx, ptr [r14+0x1]
 ins:lea rbx, ptr [r14+0x1]
 reg:rbx
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp-0x78]
 ins:mov rbx, qword ptr [rbp-0x78]
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+0x20]
 ins:lea rax, ptr [rax+0x20]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included add rax, r13
 ins:add rax, r13
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rdi, ptr [r13+rax*1]
 ins:lea rdi, ptr [r13+rax*1]
 reg:rdi
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax]
 ins:mov rsi, qword ptr [rax]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe __mempcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x20
 ins:cmp rdx, 0x20
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe __mempcpy
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x68]
 ins:mov rsi, qword ptr [rbp-0x68]
 reg:rsi
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13+0x8]
 ins:mov rax, qword ptr [r13+0x8]
 reg:rax
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_important_hwcaps
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_important_hwcaps
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov edi, 0x18
 ins:mov edi, 0x18
 reg:edi
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x26627c]
 ins:mov rbx, qword ptr [rip+0x26627c]
 reg:rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdx, 0xcccccccccccccccd
 ins:mov rdx, 0xcccccccccccccccd
 reg:rdx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea r13, ptr [rbx*4+0x4f]
 ins:lea r13, ptr [rbx*4+0x4f]
 reg:r13
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mul rdx
 ins:mul rdx
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shr r13, 0x5
 ins:shr r13, 0x5
 reg:r13
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea r15, ptr [r13+r13*4]
 ins:lea r15, ptr [r13+r13*4]
 reg:r15
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdi, ptr [r15+r15*4]
 ins:lea rdi, ptr [r15+r15*4]
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shl rdi, 0x5
 ins:shl rdi, 0x5
 reg:rdi
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 NORMAL FLAG REG: inst test rbx, rbx
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax+0x28]
 ins:lea rsi, ptr [rax+0x28]
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and esi, 0xf
 ins:and esi, 0xf
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shr rsi, 0x2
 ins:shr rsi, 0x2
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included neg rsi
 ins:neg rsi
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and esi, 0x3
 ins:and esi, 0x3
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rsi, rbx
 ins:cmp rsi, rbx
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmovnbe rsi, rbx
 ins:cmovnbe rsi, rbx
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rbx, 0x6
 ins:cmp rbx, 0x6
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, 0x1
 ins:cmp rax, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x1
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, 0x2
 ins:cmp rax, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x2
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 ins:cmp rax, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x3
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov edx, 0x2
 ins:mov edx, 0x2
 reg:edx
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rbx, rax
 ins:cmp rbx, rax
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r9, rbx
 ins:mov r9, rbx
 reg:r9
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub r9, rax
 ins:sub r9, rax
 reg:r9
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r8, r9
 ins:mov r8, r9
 reg:r8
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shr r8, 0x2
 ins:shr r8, 0x2
 reg:r8
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdi, ptr [r8*4]
 ins:lea rdi, ptr [r8*4]
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rsi, ptr [rcx+rax*4+0x28]
 ins:lea rsi, ptr [rcx+rax*4+0x28]
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rsi, 0x10
 ins:add rsi, 0x10
 reg:rsi
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, r8
 ins:cmp rax, r8
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rax, ptr [r13+r13*4]
 ins:lea rax, ptr [r13+r13*4]
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdx, ptr [rcx+rax*8]
 ins:lea rdx, ptr [rcx+rax*8]
 reg:rdx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdx+0x28]
 ins:lea rcx, ptr [rdx+0x28]
 reg:rcx
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and ecx, 0xf
 ins:and ecx, 0xf
 reg:ecx
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shr rcx, 0x2
 ins:shr rcx, 0x2
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included neg rcx
 ins:neg rcx
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and ecx, 0x3
 ins:and ecx, 0x3
 reg:ecx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rcx, rbx
 ins:cmp rcx, rbx
 reg:rflags
 NORMAL FLAG REG: inst cmp rcx, rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmovnbe rcx, rbx
 ins:cmovnbe rcx, rbx
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rbx, 0x6
 ins:cmp rbx, 0x6
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, 0x1
 ins:cmp rax, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x1
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, 0x2
 ins:cmp rax, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x2
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov ecx, 0x2
 ins:mov ecx, 0x2
 reg:ecx
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rbx, rax
 ins:cmp rbx, rax
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov r9, rbx
 ins:mov r9, rbx
 reg:r9
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub r9, rax
 ins:sub r9, rax
 reg:r9
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdi, r9
 ins:mov rdi, r9
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included shr rdi, 0x2
 ins:shr rdi, 0x2
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea r8, ptr [rdi*4]
 ins:lea r8, ptr [rdi*4]
 reg:r8
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rsi, ptr [rdx+rax*4+0x28]
 ins:lea rsi, ptr [rdx+rax*4+0x28]
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rsi, 0x10
 ins:add rsi, 0x10
 reg:rsi
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rax, rdi
 ins:cmp rax, rdi
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 NORMAL FLAG REG: inst test r12, r12
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp byte ptr [r12], 0x0
 ins:cmp byte ptr [r12], 0x0
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rbx, rsp
 ins:mov rbx, rsp
 reg:rbx
 Exe _dl_init_paths
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm1, xmm1
 ins:pxor xmm1, xmm1
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm2, xmm2
 ins:pxor xmm2, xmm2
 reg:xmm2
 Exe strlen
 INSTSELECTOR: instruction to be included pxor xmm3, xmm3
 ins:pxor xmm3, xmm3
 reg:xmm3
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmmword ptr [rax+0x10]
 ins:pcmpeqb xmm0, xmmword ptr [rax+0x10]
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm1, xmmword ptr [rax+0x20]
 ins:pcmpeqb xmm1, xmmword ptr [rax+0x20]
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm1
 ins:pmovmskb edx, xmm1
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm2, xmmword ptr [rax+0x30]
 ins:pcmpeqb xmm2, xmmword ptr [rax+0x30]
 reg:xmm2
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm2
 ins:pmovmskb edx, xmm2
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmmword ptr [rax+0x40]
 ins:pcmpeqb xmm3, xmmword ptr [rax+0x40]
 reg:xmm3
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm3
 ins:pmovmskb edx, xmm3
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+0x40]
 ins:lea rax, ptr [rax+0x40]
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included sub rax, rdi
 ins:sub rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strlen
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmmword ptr [rax+0x10]
 ins:pcmpeqb xmm0, xmmword ptr [rax+0x10]
 reg:xmm0
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm1, xmmword ptr [rax+0x20]
 ins:pcmpeqb xmm1, xmmword ptr [rax+0x20]
 reg:xmm1
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm1
 ins:pmovmskb edx, xmm1
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe strlen
 INSTSELECTOR: instruction to be included pcmpeqb xmm2, xmmword ptr [rax+0x30]
 ins:pcmpeqb xmm2, xmmword ptr [rax+0x30]
 reg:xmm2
 Exe strlen
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm2
 ins:pmovmskb edx, xmm2
 reg:edx
 Exe strlen
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe strlen
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rax, 0x1f
 ins:add rax, 0x1f
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and rcx, 0xfffffffffffff000
 ins:and rcx, 0xfffffffffffff000
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub rbx, rcx
 ins:sub rbx, rcx
 reg:rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rcx, rbx
 ins:mov rcx, rbx
 reg:rcx
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp rsp, rcx
 ins:cmp rsp, rcx
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and eax, 0xfff
 ins:and eax, 0xfff
 reg:eax
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax-0x8]
 ins:lea rcx, ptr [rax-0x8]
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub rsp, rax
 ins:sub rsp, rax
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rcx*1], 0x0
 ins:or qword ptr [rsp+rcx*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rcx*1], 0x0
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0xf]
 ins:lea rdi, ptr [rsp+0xf]
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included and rdi, 0xfffffffffffffff0
 ins:and rdi, 0xfffffffffffffff0
 reg:rdi
 Exe _dl_init_paths
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included and ecx, 0x7
 ins:and ecx, 0x7
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdx, ptr [rcx+rdx*1-0x8]
 ins:lea rdx, ptr [rcx+rdx*1-0x8]
 reg:rdx
 Exe memcpy
 INSTSELECTOR: instruction to be included sub ecx, 0x8
 ins:sub ecx, 0x8
 reg:ecx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc ecx
 ins:inc ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x1]
 ins:lea rsi, ptr [rsi+0x1]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x1]
 ins:lea rdi, ptr [rdi+0x1]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc ecx
 ins:inc ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x1]
 ins:lea rsi, ptr [rsi+0x1]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x1]
 ins:lea rdi, ptr [rdi+0x1]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included shr ecx, 0x5
 ins:shr ecx, 0x5
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included dec ecx
 ins:dec ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x10]
 ins:mov r9, qword ptr [rsi+0x10]
 reg:r9
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x18]
 ins:mov r10, qword ptr [rsi+0x18]
 reg:r10
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x20]
 ins:lea rsi, ptr [rsi+0x20]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x20]
 ins:lea rdi, ptr [rdi+0x20]
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included dec ecx
 ins:dec ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x10]
 ins:mov r9, qword ptr [rsi+0x10]
 reg:r9
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x18]
 ins:mov r10, qword ptr [rsi+0x18]
 reg:r10
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x20]
 ins:lea rsi, ptr [rsi+0x20]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x20]
 ins:lea rdi, ptr [rdi+0x20]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0x1f
 ins:and edx, 0x1f
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x8]
 ins:mov rax, qword ptr [rsp-0x8]
 reg:rax
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe memcpy
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 ins:movzx esi, byte ptr [rax]
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub esi, 0x3a
 ins:sub esi, 0x3a
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea r8, ptr [rdx+0x1]
 ins:lea r8, ptr [rdx+0x1]
 reg:r8
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp sil, 0x1
 ins:cmp sil, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp sil, 0x1
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmovbe rdx, r8
 ins:cmovbe rdx, r8
 reg:rdx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rcx, 0x1
 ins:add rcx, 0x1
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rcx]
 ins:movzx esi, byte ptr [rcx]
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx*8+0x8]
 ins:lea rdi, ptr [rdx*8+0x8]
 reg:rdi
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included sub esi, 0x3a
 ins:sub esi, 0x3a
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea r8, ptr [rdx+0x1]
 ins:lea r8, ptr [rdx+0x1]
 reg:r8
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp sil, 0x1
 ins:cmp sil, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp sil, 0x1
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmovbe rdx, r8
 ins:cmovbe rdx, r8
 reg:rdx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included add rcx, 0x1
 ins:add rcx, 0x1
 reg:rcx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rcx]
 ins:movzx esi, byte ptr [rcx]
 reg:esi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx*8+0x8]
 ins:lea rdi, ptr [rdx*8+0x8]
 reg:rdi
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included xor r8d, r8d
 ins:xor r8d, r8d
 reg:r8d
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov ecx, 0x4d3143
 ins:mov ecx, 0x4d3143
 reg:ecx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov edx, 0x4e2ed3
 ins:mov edx, 0x4e2ed3
 reg:edx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe _dl_init_paths
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included sub rsp, 0x58
 ins:sub rsp, 0x58
 reg:rsp
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x48]
 ins:lea rdi, ptr [rsp+0x48]
 reg:rdi
 Exe fillin_rpath
 Exe strsep
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe strsep
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdi]
 ins:mov rbx, qword ptr [rdi]
 reg:rbx
 Exe strsep
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe strsep
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included cmp byte ptr [rsi+0x1], 0x0
 ins:cmp byte ptr [rsi+0x1], 0x0
 reg:rflags
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe strsep
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe strpbrk
 INSTSELECTOR: instruction to be included sub rsp, 0x100
 ins:sub rsp, 0x100
 reg:rsp
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov ecx, 0x20
 ins:mov ecx, 0x20
 reg:ecx
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe strpbrk
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe strpbrk
 INSTSELECTOR: instruction to be included cld 
 ins:cld 
 reg:rflags
 NORMAL FLAG REG: inst cld 
 Exe strpbrk
 INSTSELECTOR: instruction to be included rep stosq qword ptr [rdi]
 ins:rep stosq qword ptr [rdi]
 reg:rcx
 Exe strpbrk
 INSTSELECTOR: instruction to be included rep stosq qword ptr [rdi]
 ins:rep stosq qword ptr [rdi]
 reg:rdi
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax]
 ins:mov cl, byte ptr [rax]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included test cl, cl
 ins:test cl, cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x1]
 ins:mov cl, byte ptr [rax+0x1]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included test cl, 0xff
 ins:test cl, 0xff
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x2]
 ins:mov cl, byte ptr [rax+0x2]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included test cl, 0xff
 ins:test cl, 0xff
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx-0x4]
 ins:lea rax, ptr [rdx-0x4]
 reg:rax
 Exe strpbrk
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rax, 0x4
 ins:add rax, 0x4
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax]
 ins:mov cl, byte ptr [rax]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x1]
 ins:mov cl, byte ptr [rax+0x1]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x2]
 ins:mov cl, byte ptr [rax+0x2]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x3]
 ins:mov cl, byte ptr [rax+0x3]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rsp, 0x100
 ins:add rsp, 0x100
 reg:rsp
 Exe strpbrk
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe strpbrk
 INSTSELECTOR: instruction to be included or cl, cl
 ins:or cl, cl
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rax, 0x4
 ins:add rax, 0x4
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax]
 ins:mov cl, byte ptr [rax]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x1]
 ins:mov cl, byte ptr [rax+0x1]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included mov cl, byte ptr [rax+0x2]
 ins:mov cl, byte ptr [rax+0x2]
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+rcx*1], cl
 ins:cmp byte ptr [rsp+rcx*1], cl
 reg:rflags
 Exe strpbrk
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rsp, 0x100
 ins:add rsp, 0x100
 reg:rsp
 Exe strpbrk
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe strpbrk
 INSTSELECTOR: instruction to be included or cl, cl
 ins:or cl, cl
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe strpbrk
 Exe strsep
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe strsep
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe strsep
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe strsep
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14], 0x0
 ins:cmp byte ptr [r14], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14], 0x0
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x26f161]
 ins:mov rbx, qword ptr [rip+0x26f161]
 reg:rbx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x20]
 ins:mov rdi, qword ptr [rsp+0x20]
 reg:rdi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe fillin_rpath
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov esi, 0x24
 ins:mov esi, 0x24
 reg:esi
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe expand_dynamic_string_token
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pxor xmm2, xmm2
 ins:pxor xmm2, xmm2
 reg:xmm2
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included movd xmm1, esi
 ins:movd xmm1, esi
 reg:xmm1
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pshufb xmm1, xmm2
 ins:pshufb xmm1, xmm2
 reg:xmm1
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included and ecx, 0xf
 ins:and ecx, 0xf
 reg:ecx
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included and r8, 0xfffffffffffffff0
 ins:and r8, 0xfffffffffffffff0
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [r8]
 ins:movdqa xmm0, xmmword ptr [r8]
 reg:xmm0
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpeqb xmm2, xmm0
 ins:pcmpeqb xmm2, xmm0
 reg:xmm2
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm2
 ins:pmovmskb edx, xmm2
 reg:edx
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pmovmskb esi, xmm0
 ins:pmovmskb esi, xmm0
 reg:esi
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included sar edx, cl
 ins:sar edx, cl
 reg:edx
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included sar esi, cl
 ins:sar esi, cl
 reg:esi
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __strchr_sse42
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe expand_dynamic_string_token
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe expand_dynamic_string_token
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+0x1]
 ins:lea rbp, ptr [rax+0x1]
 reg:rbp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe expand_dynamic_string_token
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe expand_dynamic_string_token
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe expand_dynamic_string_token
 Exe memcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included shr ecx, 0x5
 ins:shr ecx, 0x5
 reg:ecx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included dec ecx
 ins:dec ecx
 reg:ecx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x10]
 ins:mov r9, qword ptr [rsi+0x10]
 reg:r9
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x18]
 ins:mov r10, qword ptr [rsi+0x18]
 reg:r10
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x20]
 ins:lea rsi, ptr [rsi+0x20]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x20]
 ins:lea rdi, ptr [rdi+0x20]
 reg:rdi
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0x1f
 ins:and edx, 0x1f
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x8]
 ins:mov rax, qword ptr [rsp-0x8]
 reg:rax
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe memcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe memcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe memcpy
 Exe memcpy
 Exe memcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe memcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe memcpy
 Exe memcpy
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rax, 0x1
 ins:cmp rax, 0x1
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14+rax*1-0x1], 0x2f
 ins:cmp byte ptr [r14+rax*1-0x1], 0x2f
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14+rax*1-0x1], 0x2f
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x1]
 ins:lea rdx, ptr [rax-0x1]
 reg:rdx
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+0x1]
 ins:lea r12, ptr [rdx+0x1]
 reg:r12
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x26f161]
 ins:mov rbx, qword ptr [rip+0x26f161]
 reg:rbx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r13, rbx
 ins:mov r13, rbx
 reg:r13
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp qword ptr [r13+0x20], r12
 ins:cmp qword ptr [r13+0x20], r12
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r13+0x18]
 ins:mov rsi, qword ptr [r13+0x18]
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r13, qword ptr [r13]
 ins:mov r13, qword ptr [r13]
 reg:r13
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp qword ptr [r13+0x20], r12
 ins:cmp qword ptr [r13+0x20], r12
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r13+0x18]
 ins:mov rsi, qword ptr [r13+0x18]
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], 0x0
 ins:cmp qword ptr [rsp+0x8], 0x0
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 ins:mov rdi, qword ptr [rsp+0x8]
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rip+0x266802]
 ins:mov r9, qword ptr [rip+0x266802]
 reg:r9
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [r9*4+0x28]
 ins:lea rdx, ptr [r9*4+0x28]
 reg:rdx
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+0x1]
 ins:lea rax, ptr [rdx+0x1]
 reg:rax
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+r12*1]
 ins:lea rdi, ptr [rax+r12*1]
 reg:rdi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add rdi, qword ptr [rsp+0x18]
 ins:add rdi, qword ptr [rsp+0x18]
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x30]
 ins:mov rdx, qword ptr [rsp+0x30]
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsp+0x38]
 ins:mov r9, qword ptr [rsp+0x38]
 reg:r9
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rdx*1]
 ins:lea rdi, ptr [rax+rdx*1]
 reg:rdi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and ecx, 0x7
 ins:and ecx, 0x7
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdx, ptr [rcx+rdx*1-0x8]
 ins:lea rdx, ptr [rcx+rdx*1-0x8]
 reg:rdx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included sub ecx, 0x8
 ins:sub ecx, 0x8
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included inc ecx
 ins:inc ecx
 reg:ecx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x1]
 ins:lea rsi, ptr [rsi+0x1]
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x1]
 ins:lea rdi, ptr [rdi+0x1]
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included cmp rdx, 0x400
 ins:cmp rdx, 0x400
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included shr ecx, 0x5
 ins:shr ecx, 0x5
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included dec ecx
 ins:dec ecx
 reg:ecx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x10]
 ins:mov r9, qword ptr [rsi+0x10]
 reg:r9
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x18]
 ins:mov r10, qword ptr [rsi+0x18]
 reg:r10
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x20]
 ins:lea rsi, ptr [rsi+0x20]
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x20]
 ins:lea rdi, ptr [rdi+0x20]
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0x1f
 ins:and edx, 0x1f
 reg:edx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x1
 ins:test dl, 0x1
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 ins:movzx ecx, byte ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included inc rsi
 ins:inc rsi
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included inc rdi
 ins:inc rdi
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rsi]
 ins:movzx ecx, word ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x2
 ins:add rsi, 0x2
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x2
 ins:add rdi, 0x2
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x8]
 ins:mov r8, qword ptr [rsi+0x8]
 reg:r8
 Exe __mempcpy
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included sub edx, 0x10
 ins:sub edx, 0x10
 reg:edx
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe __mempcpy
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r12, qword ptr [rip+0x26e5fc]
 ins:cmp r12, qword ptr [rip+0x26e5fc]
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, qword ptr [rip+0x26e5fc]
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsp+0x30]
 ins:mov r9, qword ptr [rsp+0x30]
 reg:r9
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14], 0x2f
 ins:cmp byte ptr [r14], 0x2f
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14], 0x2f
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add eax, eax
 ins:add eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [r13+0x28]
 ins:lea rdx, ptr [r13+0x28]
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, r9
 ins:mov rsi, r9
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0xf
 ins:and edx, 0xf
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included shr rdx, 0x2
 ins:shr rdx, 0x2
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included neg rdx
 ins:neg rdx
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0x3
 ins:and edx, 0x3
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rdx, r9
 ins:cmp rdx, r9
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, r9
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmovnbe rdx, r9
 ins:cmovnbe rdx, r9
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r9, 0x6
 ins:cmp r9, 0x6
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x1
 ins:cmp rsi, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x1
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x2
 ins:cmp rsi, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x2
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x3
 ins:cmp rsi, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x3
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov edx, 0x2
 ins:mov edx, 0x2
 reg:edx
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r9, rsi
 ins:cmp r9, rsi
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rcx, r9
 ins:mov rcx, r9
 reg:rcx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included sub rcx, rsi
 ins:sub rcx, rsi
 reg:rcx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r11, rcx
 ins:mov r11, rcx
 reg:r11
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included shr r11, 0x2
 ins:shr r11, 0x2
 reg:r11
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea r10, ptr [r11*4]
 ins:lea r10, ptr [r11*4]
 reg:r10
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [r13+rsi*4+0x28]
 ins:lea rdi, ptr [r13+rsi*4+0x28]
 reg:rdi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included movd xmm1, dword ptr [rsp+0x30]
 ins:movd xmm1, dword ptr [rsp+0x30]
 reg:xmm1
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pshufd xmm0, xmm1, 0x0
 ins:pshufd xmm0, xmm1, 0x0
 reg:xmm0
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add rsi, 0x1
 ins:add rsi, 0x1
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add rdi, 0x10
 ins:add rdi, 0x10
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, r11
 ins:cmp rsi, r11
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], 0x0
 ins:cmp qword ptr [rsp+0x8], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rsp+0x8], 0x0
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x40]
 ins:mov rax, qword ptr [rsp+0x40]
 reg:rax
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x28]
 ins:mov rcx, qword ptr [rsp+0x28]
 reg:rcx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 ins:mov rdx, qword ptr [rsp+0x18]
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x8]
 ins:mov rsi, qword ptr [rsp+0x8]
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add rcx, r12
 ins:add rcx, r12
 reg:rcx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [r13+rcx*1]
 ins:lea rdi, ptr [r13+rcx*1]
 reg:rdi
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add r15, 0x1
 ins:add r15, 0x1
 reg:r15
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 ins:mov rdi, qword ptr [rsp]
 reg:rdi
 Exe fillin_rpath
 Exe cfree
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2cbd09]
 ins:mov rax, qword ptr [rip+0x2cbd09]
 reg:rax
 Exe cfree
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe cfree
 Exe cfree
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe cfree
 Exe cfree
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi-0x8]
 ins:mov rax, qword ptr [rdi-0x8]
 reg:rax
 Exe cfree
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdi-0x10]
 ins:lea rcx, ptr [rdi-0x10]
 reg:rcx
 Exe cfree
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 Exe cfree
 Exe cfree
 INSTSELECTOR: instruction to be included test al, 0x4
 ins:test al, 0x4
 reg:rflags
 NORMAL FLAG REG: inst test al, 0x4
 Exe cfree
 INSTSELECTOR: instruction to be included mov edi, 0x701920
 ins:mov edi, 0x701920
 reg:edi
 Exe cfree
 Exe cfree
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe cfree
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffc000000
 ins:and rax, 0xfffffffffc000000
 reg:rax
 Exe cfree
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax]
 ins:mov rdi, qword ptr [rax]
 reg:rdi
 Exe cfree
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe cfree
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe cfree
 Exe cfree
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe cfree
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe cfree
 Exe _int_free
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included mov r13d, edx
 ins:mov r13d, edx
 reg:r13d
 Exe _int_free
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe _int_free
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe _int_free
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi+0x8]
 ins:mov rax, qword ptr [rsi+0x8]
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe _int_free
 INSTSELECTOR: instruction to be included and r12, 0xfffffffffffffff8
 ins:and r12, 0xfffffffffffffff8
 reg:r12
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe _int_free
 INSTSELECTOR: instruction to be included neg rdx
 ins:neg rdx
 reg:rdx
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp rsi, rdx
 ins:cmp rsi, rdx
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test sil, 0xf
 ins:test sil, 0xf
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp r12, 0x1f
 ins:cmp r12, 0x1f
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test al, 0x8
 ins:test al, 0x8
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp r12, qword ptr [rip+0x2d092c]
 ins:cmp r12, qword ptr [rip+0x2d092c]
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsi+r12*1]
 ins:lea rdx, ptr [rsi+r12*1]
 reg:rdx
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp rax, 0x10
 ins:cmp rax, 0x10
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rdi+0x880]
 ins:cmp rax, qword ptr [rdi+0x880]
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x2d08ed]
 ins:mov esi, dword ptr [rip+0x2d08ed]
 reg:esi
 Exe _int_free
 INSTSELECTOR: instruction to be included lea r9, ptr [rbx+0x10]
 ins:lea r9, ptr [rbx+0x10]
 reg:r9
 Exe _int_free
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included and dword ptr [rbp+0x4], 0xfffffffe
 ins:and dword ptr [rbp+0x4], 0xfffffffe
 reg:rflags
 COMP2MEM: inst and dword ptr [rbp+0x4], 0xfffffffe
 Exe _int_free
 INSTSELECTOR: instruction to be included shr r12d, 0x4
 ins:shr r12d, 0x4
 reg:r12d
 Exe _int_free
 INSTSELECTOR: instruction to be included sub r12d, 0x2
 ins:sub r12d, 0x2
 reg:r12d
 Exe _int_free
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe _int_free
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp+rax*8+0x8]
 ins:mov r8, qword ptr [rbp+rax*8+0x8]
 reg:r8
 Exe _int_free
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+rax*8+0x8]
 ins:lea rsi, ptr [rbp+rax*8+0x8]
 reg:rsi
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp rbx, r8
 ins:cmp rbx, r8
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 NORMAL FLAG REG: inst test r13d, r13d
 Exe _int_free
 INSTSELECTOR: instruction to be included mov edx, 0xffffffff
 ins:mov edx, 0xffffffff
 reg:edx
 Exe _int_free
 INSTSELECTOR: instruction to be included setnz cl
 ins:setnz cl
 reg:cl
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test cl, cl
 ins:test cl, cl
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r8+0x8]
 ins:mov eax, dword ptr [r8+0x8]
 reg:eax
 Exe _int_free
 INSTSELECTOR: instruction to be included shr eax, 0x4
 ins:shr eax, 0x4
 reg:eax
 Exe _int_free
 INSTSELECTOR: instruction to be included lea edx, ptr [rax-0x2]
 ins:lea edx, ptr [rax-0x2]
 reg:edx
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rax, r8
 ins:mov rax, r8
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe _int_free
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included mov rax, r8
 ins:mov rax, r8
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included lock cmpxchg qword ptr [rsi], rbx
 ins:lock cmpxchg qword ptr [rsi], rbx
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp r8, rax
 ins:cmp r8, rax
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included cmpxchg qword ptr [rsi], rbx
 ins:cmpxchg qword ptr [rsi], rbx
 reg:rax
 Exe _int_free
 INSTSELECTOR: instruction to be included cmp r8, rax
 ins:cmp r8, rax
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included test cl, cl
 ins:test cl, cl
 reg:rflags
 Exe _int_free
 Exe _int_free
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _int_free
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _int_free
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _int_free
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x48]
 ins:lea rdi, ptr [rsp+0x48]
 reg:rdi
 Exe fillin_rpath
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included add r8, 0x10
 ins:add r8, 0x10
 reg:r8
 Exe __strchr_sse42
 INSTSELECTOR: instruction to be included pcmpistri xmm1, xmmword ptr [r8], 0x2
 ins:pcmpistri xmm1, xmmword ptr [r8], 0x2
 reg:ecx
 Exe __strchr_sse42
 Exe __strchr_sse42
 Exe strlen
 INSTSELECTOR: instruction to be included sub rax, rdi
 ins:sub rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strlen
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rax*1+0x30]
 ins:lea rax, ptr [rdx+rax*1+0x30]
 reg:rax
 Exe strlen
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+0x1]
 ins:lea rbp, ptr [rax+0x1]
 reg:rbp
 Exe expand_dynamic_string_token
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe expand_dynamic_string_token
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rcx+0x10]
 ins:mov rdi, qword ptr [rcx+0x10]
 reg:rdi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lock cmpxchg qword ptr [rsi+0x8], rdi
 ins:lock cmpxchg qword ptr [rsi+0x8], rdi
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp rcx, rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmpxchg qword ptr [rsi+0x8], rdi
 ins:cmpxchg qword ptr [rsi+0x8], rdi
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp rcx, rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r13+0x8]
 ins:mov eax, dword ptr [r13+0x8]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr eax, 0x4
 ins:shr eax, 0x4
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub eax, 0x2
 ins:sub eax, 0x2
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r8d, eax
 ins:cmp r8d, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, 0x4d1728
 ins:mov esi, 0x4d1728
 reg:esi
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2cf774]
 ins:mov eax, dword ptr [rip+0x2cf774]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add r13, 0x10
 ins:add r13, 0x10
 reg:r13
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add rsp, 0x98
 ins:add rsp, 0x98
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _int_malloc
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _int_malloc
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi]
 ins:mov ecx, dword ptr [rsi]
 reg:ecx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included test dl, 0x8
 ins:test dl, 0x8
 reg:rflags
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi]
 ins:mov rcx, qword ptr [rsi]
 reg:rcx
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rsi, 0x8
 ins:add rsi, 0x8
 reg:rsi
 Exe __mempcpy
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe __mempcpy
 Exe __mempcpy
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe __mempcpy
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14], 0x2f
 ins:cmp byte ptr [r14], 0x2f
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14], 0x2f
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add eax, eax
 ins:add eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [r13+0x28]
 ins:lea rdx, ptr [r13+0x28]
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, r9
 ins:mov rsi, r9
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0xf
 ins:and edx, 0xf
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included shr rdx, 0x2
 ins:shr rdx, 0x2
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included neg rdx
 ins:neg rdx
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0x3
 ins:and edx, 0x3
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rdx, r9
 ins:cmp rdx, r9
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, r9
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmovnbe rdx, r9
 ins:cmovnbe rdx, r9
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r9, 0x6
 ins:cmp r9, 0x6
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x1
 ins:cmp rsi, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x1
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x2
 ins:cmp rsi, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x2
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x3
 ins:cmp rsi, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x3
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rsi, 0x4
 ins:cmp rsi, 0x4
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, 0x4
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe fillin_rpath
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp rdx, 0x4f
 ins:cmp rdx, 0x4f
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp rdx, 0x1
 ins:cmp rdx, 0x1
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included add rsi, rdx
 ins:add rsi, rdx
 reg:rsi
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included add rdi, rdx
 ins:add rdi, rdx
 reg:rdi
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included lea r11, ptr [rip+0x8db93]
 ins:lea r11, ptr [rip+0x8db93]
 reg:r11
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movsxd rcx, dword ptr [r11+rdx*4]
 ins:movsxd rcx, dword ptr [r11+rdx*4]
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included add rcx, r11
 ins:add rcx, r11
 reg:rcx
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm2, xmmword ptr [rdi-0x24]
 ins:movdqu xmm2, xmmword ptr [rdi-0x24]
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm1, xmmword ptr [rsi-0x24]
 ins:movdqu xmm1, xmmword ptr [rsi-0x24]
 reg:xmm1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov dl, 0xdc
 ins:mov dl, 0xdc
 reg:dl
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included pxor xmm2, xmm1
 ins:pxor xmm2, xmm1
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included ptest xmm0, xmm2
 ins:ptest xmm0, xmm2
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm2, xmmword ptr [rdi-0x14]
 ins:movdqu xmm2, xmmword ptr [rdi-0x14]
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm1, xmmword ptr [rsi-0x14]
 ins:movdqu xmm1, xmmword ptr [rsi-0x14]
 reg:xmm1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov dl, 0xec
 ins:mov dl, 0xec
 reg:dl
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included pxor xmm2, xmm1
 ins:pxor xmm2, xmm1
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included ptest xmm0, xmm2
 ins:ptest xmm0, xmm2
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsi-0x4]
 ins:mov ecx, dword ptr [rsi-0x4]
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi-0x4]
 ins:mov eax, dword ptr [rdi-0x4]
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ecx, eax
 ins:cmp ecx, eax
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movsx rdx, dl
 ins:movsx rdx, dl
 reg:rdx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi+rdx*1]
 ins:mov rcx, qword ptr [rsi+rdx*1]
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+rdx*1]
 ins:mov rax, qword ptr [rdi+rdx*1]
 reg:rax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi+rdx*1+0x8]
 ins:mov rcx, qword ptr [rsi+rdx*1+0x8]
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+rdx*1+0x8]
 ins:mov rax, qword ptr [rdi+rdx*1+0x8]
 reg:rax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ecx, eax
 ins:cmp ecx, eax
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr rcx, 0x20
 ins:shr rcx, 0x20
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ax, cx
 ins:cmp ax, cx
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ecx, eax
 ins:cmp ecx, eax
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr rcx, 0x20
 ins:shr rcx, 0x20
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ax, cx
 ins:cmp ax, cx
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr ecx, 0x10
 ins:shr ecx, 0x10
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr eax, 0x10
 ins:shr eax, 0x10
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp al, cl
 ins:cmp al, cl
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp ax, cx
 ins:cmp ax, cx
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr ecx, 0x10
 ins:shr ecx, 0x10
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included shr eax, 0x10
 ins:shr eax, 0x10
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp al, cl
 ins:cmp al, cl
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and eax, 0xffff
 ins:and eax, 0xffff
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and ecx, 0xffff
 ins:and ecx, 0xffff
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp al, cl
 ins:cmp al, cl
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and eax, 0xffff
 ins:and eax, 0xffff
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and ecx, 0xffff
 ins:and ecx, 0xffff
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe __memcmp_sse4_1
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp], r13
 ins:cmp qword ptr [rbp], r13
 reg:rflags
 Exe fillin_rpath
 Exe strlen
 INSTSELECTOR: instruction to be included sub rax, rdi
 ins:sub rax, rdi
 reg:rax
 Exe strlen
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strlen
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rax*1+0x10]
 ins:lea rax, ptr [rdx+rax*1+0x10]
 reg:rax
 Exe strlen
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rax, 0x1
 ins:cmp rax, 0x1
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14+rax*1-0x1], 0x2f
 ins:cmp byte ptr [r14+rax*1-0x1], 0x2f
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14+rax*1-0x1], 0x2f
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x1]
 ins:lea rdx, ptr [rax-0x1]
 reg:rdx
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r12, qword ptr [rip+0x26e5fc]
 ins:cmp r12, qword ptr [rip+0x26e5fc]
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, qword ptr [rip+0x26e5fc]
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsp+0x30]
 ins:mov r9, qword ptr [rsp+0x30]
 reg:r9
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp byte ptr [r14], 0x2f
 ins:cmp byte ptr [r14], 0x2f
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r14], 0x2f
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add eax, eax
 ins:add eax, eax
 reg:eax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included lea rdx, ptr [r13+0x28]
 ins:lea rdx, ptr [r13+0x28]
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rsi, r9
 ins:mov rsi, r9
 reg:rsi
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0xf
 ins:and edx, 0xf
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included shr rdx, 0x2
 ins:shr rdx, 0x2
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included neg rdx
 ins:neg rdx
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included and edx, 0x3
 ins:and edx, 0x3
 reg:edx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp rdx, r9
 ins:cmp rdx, r9
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, r9
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmovnbe rdx, r9
 ins:cmovnbe rdx, r9
 reg:rdx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included cmp r9, 0x6
 ins:cmp r9, 0x6
 reg:rflags
 Exe fillin_rpath
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included inc rax
 ins:inc rax
 reg:rax
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rsp, 0x100
 ins:add rsp, 0x100
 reg:rsp
 Exe strpbrk
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe strpbrk
 INSTSELECTOR: instruction to be included or cl, cl
 ins:or cl, cl
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe strpbrk
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm2, xmmword ptr [rdi-0x2b]
 ins:movdqu xmm2, xmmword ptr [rdi-0x2b]
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm1, xmmword ptr [rsi-0x2b]
 ins:movdqu xmm1, xmmword ptr [rsi-0x2b]
 reg:xmm1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov dl, 0xd5
 ins:mov dl, 0xd5
 reg:dl
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included pxor xmm2, xmm1
 ins:pxor xmm2, xmm1
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included ptest xmm0, xmm2
 ins:ptest xmm0, xmm2
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm2, xmmword ptr [rdi-0x1b]
 ins:movdqu xmm2, xmmword ptr [rdi-0x1b]
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included movdqu xmm1, xmmword ptr [rsi-0x1b]
 ins:movdqu xmm1, xmmword ptr [rsi-0x1b]
 reg:xmm1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov dl, 0xe5
 ins:mov dl, 0xe5
 reg:dl
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included pxor xmm2, xmm1
 ins:pxor xmm2, xmm1
 reg:xmm2
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included ptest xmm0, xmm2
 ins:ptest xmm0, xmm2
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi-0xb]
 ins:mov rax, qword ptr [rdi-0xb]
 reg:rax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsi-0xb]
 ins:mov rcx, qword ptr [rsi-0xb]
 reg:rcx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe __memcmp_sse4_1
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and eax, 0xff
 ins:and eax, 0xff
 reg:eax
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included and ecx, 0xff
 ins:and ecx, 0xff
 reg:ecx
 Exe __memcmp_sse4_1
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe __memcmp_sse4_1
 Exe strpbrk
 INSTSELECTOR: instruction to be included add rsp, 0x100
 ins:add rsp, 0x100
 reg:rsp
 Exe strpbrk
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe strpbrk
 INSTSELECTOR: instruction to be included or cl, cl
 ins:or cl, cl
 reg:cl
 Exe strpbrk
 INSTSELECTOR: instruction to be included cmovz rax, rdx
 ins:cmovz rax, rdx
 reg:rax
 Exe strpbrk
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe strsep
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov r13, rbx
 ins:mov r13, rbx
 reg:r13
 Exe fillin_rpath
 Exe cfree
 Exe strsep
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe strsep
 Exe strsep
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe strsep
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe strsep
 Exe fillin_rpath
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included add rsp, 0x58
 ins:add rsp, 0x58
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe fillin_rpath
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe fillin_rpath
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x265eb6]
 ins:mov rdi, qword ptr [rip+0x265eb6]
 reg:rdi
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included cmp qword ptr [rdi], 0x0
 ins:cmp qword ptr [rdi], 0x0
 reg:rflags
 Exe _dl_init_paths
 Exe _dl_init_paths
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _dl_init_paths
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _dl_init_paths
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2b24a8]
 ins:mov rax, qword ptr [rip+0x2b24a8]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d3153
 ins:mov edi, 0x4d3153
 reg:edi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d315f
 ins:mov edi, 0x4d315f
 reg:edi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmovz rax, rbx
 ins:cmovz rax, rbx
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x0
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d316b
 ins:mov edi, 0x4d316b
 reg:edi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmovz rax, rbx
 ins:cmovz rax, rbx
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x0
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d317b
 ins:mov edi, 0x4d317b
 reg:edi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmovnz rbx, rax
 ins:cmovnz rbx, rax
 reg:rbx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x0
 ins:cmp byte ptr [rbx], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rbx], 0x0
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe getenv
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x29ff1b]
 ins:mov rbp, qword ptr [rip+0x29ff1b]
 reg:rbp
 Exe getenv
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe getenv
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 ins:movzx eax, byte ptr [rbx]
 reg:eax
 Exe getenv
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe getenv
 Exe getenv
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx+0x1], 0x0
 ins:cmp byte ptr [rbx+0x1], 0x0
 reg:rflags
 Exe getenv
 Exe strncmp
 INSTSELECTOR: instruction to be included and rsi, 0xfffffffffffffff0
 ins:and rsi, 0xfffffffffffffff0
 reg:rsi
 Exe strncmp
 INSTSELECTOR: instruction to be included and rdi, 0xfffffffffffffff0
 ins:and rdi, 0xfffffffffffffff0
 reg:rdi
 Exe strncmp
 INSTSELECTOR: instruction to be included mov edx, 0xffff
 ins:mov edx, 0xffff
 reg:edx
 Exe strncmp
 INSTSELECTOR: instruction to be included xor r8d, r8d
 ins:xor r8d, r8d
 reg:r8d
 Exe strncmp
 INSTSELECTOR: instruction to be included and ecx, 0xf
 ins:and ecx, 0xf
 reg:ecx
 Exe strncmp
 INSTSELECTOR: instruction to be included and eax, 0xf
 ins:and eax, 0xf
 reg:eax
 Exe strncmp
 INSTSELECTOR: instruction to be included cmp ecx, eax
 ins:cmp ecx, eax
 reg:rflags
 Exe strncmp
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included mov r8d, edx
 ins:mov r8d, edx
 reg:r8d
 Exe strncmp
 INSTSELECTOR: instruction to be included xchg ecx, eax
 ins:xchg ecx, eax
 reg:eax
 Exe strncmp
 INSTSELECTOR: instruction to be included xchg rdi, rsi
 ins:xchg rdi, rsi
 reg:rsi
 Exe strncmp
 INSTSELECTOR: instruction to be included lea r9, ptr [rax+0xf]
 ins:lea r9, ptr [rax+0xf]
 reg:r9
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r9, rcx
 ins:sub r9, rcx
 reg:r9
 Exe strncmp
 INSTSELECTOR: instruction to be included lea r10, ptr [rip+0x61397]
 ins:lea r10, ptr [rip+0x61397]
 reg:r10
 Exe strncmp
 INSTSELECTOR: instruction to be included movsxd r9, dword ptr [r10+r9*4]
 ins:movsxd r9, dword ptr [r10+r9*4]
 reg:r9
 Exe strncmp
 INSTSELECTOR: instruction to be included lea r10, ptr [r10+r9*1]
 ins:lea r10, ptr [r10+r9*1]
 reg:r10
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm2, xmmword ptr [rdi]
 ins:movdqa xmm2, xmmword ptr [rdi]
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm1, xmmword ptr [rsi]
 ins:movdqa xmm1, xmmword ptr [rsi]
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included pslldq xmm2, 0x2
 ins:pslldq xmm2, 0x2
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm2, xmm1
 ins:pcmpeqb xmm2, xmm1
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included psubb xmm2, xmm0
 ins:psubb xmm2, xmm0
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included pmovmskb r9d, xmm2
 ins:pmovmskb r9d, xmm2
 reg:r9d
 Exe strncmp
 INSTSELECTOR: instruction to be included shr edx, cl
 ins:shr edx, cl
 reg:edx
 Exe strncmp
 INSTSELECTOR: instruction to be included shr r9d, cl
 ins:shr r9d, cl
 reg:r9d
 Exe strncmp
 INSTSELECTOR: instruction to be included sub edx, r9d
 ins:sub edx, r9d
 reg:edx
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm3, xmmword ptr [rdi]
 ins:movdqa xmm3, xmmword ptr [rdi]
 reg:xmm3
 Exe strncmp
 INSTSELECTOR: instruction to be included lea r9, ptr [rcx+r11*1-0x10]
 ins:lea r9, ptr [rcx+r11*1-0x10]
 reg:r9
 Exe strncmp
 INSTSELECTOR: instruction to be included cmp r11, r9
 ins:cmp r11, r9
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included mov r11, r9
 ins:mov r11, r9
 reg:r11
 Exe strncmp
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included mov rcx, 0x10
 ins:mov rcx, 0x10
 reg:rcx
 Exe strncmp
 INSTSELECTOR: instruction to be included mov r9d, 0xe
 ins:mov r9d, 0xe
 reg:r9d
 Exe strncmp
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0xe]
 ins:lea r10, ptr [rdi+0xe]
 reg:r10
 Exe strncmp
 INSTSELECTOR: instruction to be included and r10, 0xfff
 ins:and r10, 0xfff
 reg:r10
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r10, 0x1000
 ins:sub r10, 0x1000
 reg:r10
 Exe strncmp
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included add r10, 0x10
 ins:add r10, 0x10
 reg:r10
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm1, xmmword ptr [rsi+rcx*1]
 ins:movdqa xmm1, xmmword ptr [rsi+rcx*1]
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm2, xmmword ptr [rdi+rcx*1]
 ins:movdqa xmm2, xmmword ptr [rdi+rcx*1]
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included movdqa xmm4, xmm2
 ins:movdqa xmm4, xmm2
 reg:xmm4
 Exe strncmp
 INSTSELECTOR: instruction to be included psrldq xmm3, 0xe
 ins:psrldq xmm3, 0xe
 reg:xmm3
 Exe strncmp
 INSTSELECTOR: instruction to be included pslldq xmm2, 0x2
 ins:pslldq xmm2, 0x2
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included por xmm2, xmm3
 ins:por xmm2, xmm3
 reg:xmm2
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strncmp
 INSTSELECTOR: instruction to be included pcmpeqb xmm1, xmm2
 ins:pcmpeqb xmm1, xmm2
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included psubb xmm1, xmm0
 ins:psubb xmm1, xmm0
 reg:xmm1
 Exe strncmp
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm1
 ins:pmovmskb edx, xmm1
 reg:edx
 Exe strncmp
 INSTSELECTOR: instruction to be included sub edx, 0xffff
 ins:sub edx, 0xffff
 reg:edx
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r11, 0x10
 ins:sub r11, 0x10
 reg:r11
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included lea rax, ptr [r9+rcx*1-0x10]
 ins:lea rax, ptr [r9+rcx*1-0x10]
 reg:rax
 Exe strncmp
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+rax*1]
 ins:lea rdi, ptr [rdi+rax*1]
 reg:rdi
 Exe strncmp
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+rcx*1]
 ins:lea rsi, ptr [rsi+rcx*1]
 reg:rsi
 Exe strncmp
 INSTSELECTOR: instruction to be included test r8d, r8d
 ins:test r8d, r8d
 reg:rflags
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included xchg rdi, rsi
 ins:xchg rdi, rsi
 reg:rdi
 Exe strncmp
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included bsf rdx, rdx
 ins:bsf rdx, rdx
 reg:rdx
 Exe strncmp
 INSTSELECTOR: instruction to be included sub r11, rdx
 ins:sub r11, rdx
 reg:r11
 Exe strncmp
 Exe strncmp
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi+rdx*1]
 ins:movzx ecx, byte ptr [rsi+rdx*1]
 reg:ecx
 Exe strncmp
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdi+rdx*1]
 ins:movzx eax, byte ptr [rdi+rdx*1]
 reg:eax
 Exe strncmp
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe strncmp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2a99b1], 0x1
 ins:cmp dword ptr [rip+0x2a99b1], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rip+0x2a99b1], 0x1
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included sbb eax, eax
 ins:sbb eax, eax
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included not eax
 ins:not eax
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included and eax, 0x9
 ins:and eax, 0x9
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x4d2fd8
 ins:add rax, 0x4d2fd8
 reg:rax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x265ed0]
 ins:mov rbx, qword ptr [rip+0x265ed0]
 reg:rbx
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x52
 ins:cmp byte ptr [rdi], 0x52
 reg:rflags
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x52
 ins:cmp byte ptr [rdi], 0x52
 reg:rflags
 Exe _dl_process_tunable_env_entries
 Exe _dl_process_tunable_env_entries
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _dl_process_tunable_env_entries
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2a9b34]
 ins:mov eax, dword ptr [rip+0x2a9b34]
 reg:eax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov ebx, 0x4d3000
 ins:mov ebx, 0x4d3000
 reg:ebx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2b2356]
 ins:mov rax, qword ptr [rip+0x2b2356]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included sub rsp, 0x90
 ins:sub rsp, 0x90
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp ebx, 0x756e6547
 ins:cmp ebx, 0x756e6547
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, 0x756e6547
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp ecx, 0x6c65746e
 ins:cmp ecx, 0x6c65746e
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp edx, 0x49656e69
 ins:cmp edx, 0x49656e69
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x2b1cc2]
 ins:mov esi, dword ptr [rip+0x2b1cc2]
 reg:esi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included shr r13d, 0x8
 ins:shr r13d, 0x8
 reg:r13d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included shr r14d, 0x4
 ins:shr r14d, 0x4
 reg:r14d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included shr edx, 0xc
 ins:shr edx, 0xc
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and r13d, 0xf
 ins:and r13d, 0xf
 reg:r13d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov edi, esi
 ins:mov edi, esi
 reg:edi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or edi, 0x8
 ins:or edi, 0x8
 reg:edi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and r14d, 0xf
 ins:and r14d, 0xf
 reg:r14d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and edx, 0xf0
 ins:and edx, 0xf0
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r13d, 0xf
 ins:cmp r13d, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xf
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r13d, 0x6
 ins:cmp r13d, 0x6
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0x6
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r15d, 0x1
 ins:mov r15d, 0x1
 reg:r15d
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add r14d, edx
 ins:add r14d, edx
 reg:r14d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea edx, ptr [r14-0x1a]
 ins:lea edx, ptr [r14-0x1a]
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp edx, 0x43
 ins:cmp edx, 0x43
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and ecx, 0x10000000
 ins:and ecx, 0x10000000
 reg:ecx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or esi, 0x3b
 ins:or esi, 0x3b
 reg:esi
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r14d, 0x3f
 ins:cmp r14d, 0x3f
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r14d, 0x3c
 ins:cmp r14d, 0x3c
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea eax, ptr [r14-0x45]
 ins:lea eax, ptr [r14-0x45]
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r15d, 0x1
 ins:mov r15d, 0x1
 reg:r15d
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b1efe], 0x6
 ins:cmp dword ptr [rip+0x2b1efe], 0x6
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, 0x7
 ins:mov eax, 0x7
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x2b1ee1]
 ins:mov esi, dword ptr [rip+0x2b1ee1]
 reg:esi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test esi, 0x8000000
 ins:test esi, 0x8000000
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xgetbv 
 ins:xgetbv 
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and edx, 0x6
 ins:and edx, 0x6
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp edx, 0x6
 ins:cmp edx, 0x6
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b1eaf], 0xc
 ins:cmp dword ptr [rip+0x2b1eaf], 0xc
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test esi, 0x10000000
 ins:test esi, 0x10000000
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or dword ptr [rip+0x2b1d21], 0x40
 ins:or dword ptr [rip+0x2b1d21], 0x40
 reg:rflags
 COMP2MEM: inst or dword ptr [rip+0x2b1d21], 0x40
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b1cef]
 ins:mov edx, dword ptr [rip+0x2b1cef]
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test dl, 0x20
 ins:test dl, 0x20
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or dword ptr [rip+0x2b1d0c], 0xc00
 ins:or dword ptr [rip+0x2b1d0c], 0xc00
 reg:rflags
 COMP2MEM: inst or dword ptr [rip+0x2b1d0c], 0xc00
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and eax, 0xe0
 ins:and eax, 0xe0
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp eax, 0xe0
 ins:cmp eax, 0xe0
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test edx, 0x10000
 ins:test edx, 0x10000
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and edx, 0x20000
 ins:and edx, 0x20000
 reg:edx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b1be0]
 ins:mov eax, dword ptr [rip+0x2b1be0]
 reg:eax
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or ah, 0x10
 ins:or ah, 0x10
 reg:ah
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or ah, 0x30
 ins:or ah, 0x30
 reg:ah
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and esi, 0x1000
 ins:and esi, 0x1000
 reg:esi
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or dword ptr [rip+0x2b1cea], 0x80
 ins:or dword ptr [rip+0x2b1cea], 0x80
 reg:rflags
 COMP2MEM: inst or dword ptr [rip+0x2b1cea], 0x80
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2b1ccd], 0x1
 ins:test byte ptr [rip+0x2b1ccd], 0x1
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or dword ptr [rip+0x2b1cd3], 0x100
 ins:or dword ptr [rip+0x2b1cd3], 0x100
 reg:rflags
 COMP2MEM: inst or dword ptr [rip+0x2b1cd3], 0x100
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b1eaf], 0xc
 ins:cmp dword ptr [rip+0x2b1eaf], 0xc
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov esi, 0xd
 ins:mov esi, 0xd
 reg:esi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add ebx, 0x7f
 ins:add ebx, 0x7f
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and ebx, 0xffffffc0
 ins:and ebx, 0xffffffc0
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp-0x78]
 ins:lea rax, ptr [rsp-0x78]
 reg:rax
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r8d, 0x3
 ins:mov r8d, 0x3
 reg:r8d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov edi, 0x2
 ins:mov edi, 0x2
 reg:edi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov r10d, 0xee
 ins:mov r10d, 0xee
 reg:r10d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea r9, ptr [rsp+0x10]
 ins:lea r9, ptr [rsp+0x10]
 reg:r9
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0xc]
 ins:lea rbp, ptr [rsp+0xc]
 reg:rbp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea r11, ptr [rax+0x4]
 ins:lea r11, ptr [rax+0x4]
 reg:r11
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x8]
 ins:lea r12, ptr [rax+0x8]
 reg:r12
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included bt r10d, edi
 ins:bt r10d, edi
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, 0xd
 ins:mov eax, 0xd
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp edi, 0x2
 ins:cmp edi, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp edi, 0x2
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp+rsi*1]
 ins:mov eax, dword ptr [rbp+rsi*1]
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add eax, dword ptr [r11+rsi*1]
 ins:add eax, dword ptr [r11+rsi*1]
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and ecx, 0x2
 ins:and ecx, 0x2
 reg:ecx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add eax, 0x3f
 ins:add eax, 0x3f
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and eax, 0xffffffc0
 ins:and eax, 0xffffffc0
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r8d, 0x20
 ins:cmp r8d, 0x20
 reg:rflags
 NORMAL FLAG REG: inst cmp r8d, 0x20
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add r8d, 0x1
 ins:add r8d, 0x1
 reg:r8d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add edi, 0x1
 ins:add edi, 0x1
 reg:edi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included bt r10d, edi
 ins:bt r10d, edi
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included cmp r8d, 0x20
 ins:cmp r8d, 0x20
 reg:rflags
 NORMAL FLAG REG: inst cmp r8d, 0x20
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add r8d, 0x1
 ins:add r8d, 0x1
 reg:r8d
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add rsi, 0x4
 ins:add rsi, 0x4
 reg:rsi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add edi, 0x1
 ins:add edi, 0x1
 reg:edi
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included bt r10d, edi
 ins:bt r10d, edi
 reg:rflags
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x84]
 ins:mov eax, dword ptr [rsp+0x84]
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add eax, dword ptr [rsp+0x4]
 ins:add eax, dword ptr [rsp+0x4]
 reg:eax
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included or dword ptr [rip+0x2b1e01], 0x40000
 ins:or dword ptr [rip+0x2b1e01], 0x40000
 reg:rflags
 COMP2MEM: inst or dword ptr [rip+0x2b1e01], 0x40000
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add eax, 0x7f
 ins:add eax, 0x7f
 reg:eax
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included and eax, 0xffffffc0
 ins:and eax, 0xffffffc0
 reg:eax
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included add rsp, 0x90
 ins:add rsp, 0x90
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe init_cpu_features.constprop.1
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe init_cpu_features.constprop.1
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov edi, 0x4d31ab
 ins:mov edi, 0x4d31ab
 reg:edi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov r13d, 0x10
 ins:mov r13d, 0x10
 reg:r13d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2b22da]
 ins:mov rdi, qword ptr [rip+0x2b22da]
 reg:rdi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2b22e2]
 ins:mov rax, qword ptr [rip+0x2b22e2]
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x2b2316]
 ins:mov rcx, qword ptr [rip+0x2b2316]
 reg:rcx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], 0x6474e551
 ins:cmp dword ptr [rax], 0x6474e551
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rax, 0x38
 ins:add rax, 0x38
 reg:rax
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp dword ptr [rax-0x38], 0x6474e551
 ins:cmp dword ptr [rax-0x38], 0x6474e551
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsi+0x4]
 ins:mov eax, dword ptr [rsi+0x4]
 reg:eax
 Exe _dl_non_dynamic_init
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _dl_non_dynamic_init
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _dl_non_dynamic_init
 Exe __init_misc
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __init_misc
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __init_misc
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe __init_misc
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe __init_misc
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe __init_misc
 Exe __init_misc
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsi]
 ins:mov rbp, qword ptr [rsi]
 reg:rbp
 Exe __init_misc
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe __init_misc
 Exe __init_misc
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 ins:mov esi, 0x2f
 reg:esi
 Exe __init_misc
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe __init_misc
 Exe strrchr
 INSTSELECTOR: instruction to be included movd xmm1, esi
 ins:movd xmm1, esi
 reg:xmm1
 Exe strrchr
 INSTSELECTOR: instruction to be included mov rcx, rdi
 ins:mov rcx, rdi
 reg:rcx
 Exe strrchr
 INSTSELECTOR: instruction to be included punpcklbw xmm1, xmm1
 ins:punpcklbw xmm1, xmm1
 reg:xmm1
 Exe strrchr
 INSTSELECTOR: instruction to be included and rdi, 0xfffffffffffffff0
 ins:and rdi, 0xfffffffffffffff0
 reg:rdi
 Exe strrchr
 INSTSELECTOR: instruction to be included pxor xmm2, xmm2
 ins:pxor xmm2, xmm2
 reg:xmm2
 Exe strrchr
 INSTSELECTOR: instruction to be included punpcklbw xmm1, xmm1
 ins:punpcklbw xmm1, xmm1
 reg:xmm1
 Exe strrchr
 INSTSELECTOR: instruction to be included or esi, 0xffffffff
 ins:or esi, 0xffffffff
 reg:esi
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included pshufd xmm1, xmm1, 0x0
 ins:pshufd xmm1, xmm1, 0x0
 reg:xmm1
 Exe strrchr
 INSTSELECTOR: instruction to be included sub rcx, rdi
 ins:sub rcx, rdi
 reg:rcx
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included shl esi, cl
 ins:shl esi, cl
 reg:esi
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strrchr
 INSTSELECTOR: instruction to be included and edx, esi
 ins:and edx, esi
 reg:edx
 Exe strrchr
 INSTSELECTOR: instruction to be included and ecx, esi
 ins:and ecx, esi
 reg:ecx
 Exe strrchr
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe strrchr
 INSTSELECTOR: instruction to be included mov esi, edx
 ins:mov esi, edx
 reg:esi
 Exe strrchr
 INSTSELECTOR: instruction to be included or esi, ecx
 ins:or esi, ecx
 reg:esi
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strrchr
 INSTSELECTOR: instruction to be included mov esi, edx
 ins:mov esi, edx
 reg:esi
 Exe strrchr
 INSTSELECTOR: instruction to be included or esi, ecx
 ins:or esi, ecx
 reg:esi
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included bsf r9d, ecx
 ins:bsf r9d, ecx
 reg:r9d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov r8d, 0xffffffff
 ins:mov r8d, 0xffffffff
 reg:r8d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov ecx, 0x1f
 ins:mov ecx, 0x1f
 reg:ecx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included bsf r9d, ecx
 ins:bsf r9d, ecx
 reg:r9d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov r8d, 0xffffffff
 ins:mov r8d, 0xffffffff
 reg:r8d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov ecx, 0x1f
 ins:mov ecx, 0x1f
 reg:ecx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included bsr edx, edx
 ins:bsr edx, edx
 reg:edx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strrchr
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strrchr
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strrchr
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strrchr
 INSTSELECTOR: instruction to be included mov esi, edx
 ins:mov esi, edx
 reg:esi
 Exe strrchr
 INSTSELECTOR: instruction to be included or esi, ecx
 ins:or esi, ecx
 reg:esi
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included bsf r9d, ecx
 ins:bsf r9d, ecx
 reg:r9d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov r8d, 0xffffffff
 ins:mov r8d, 0xffffffff
 reg:r8d
 Exe strrchr
 INSTSELECTOR: instruction to be included mov ecx, 0x1f
 ins:mov ecx, 0x1f
 reg:ecx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included bsr edx, edx
 ins:bsr edx, edx
 reg:edx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included sub ecx, r9d
 ins:sub ecx, r9d
 reg:ecx
 Exe strrchr
 INSTSELECTOR: instruction to be included shr r8d, cl
 ins:shr r8d, cl
 reg:r8d
 Exe strrchr
 INSTSELECTOR: instruction to be included and edx, r8d
 ins:and edx, r8d
 reg:edx
 Exe strrchr
 INSTSELECTOR: instruction to be included bsr edx, edx
 ins:bsr edx, edx
 reg:edx
 Exe strrchr
 Exe strrchr
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strrchr
 Exe __init_misc
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe __init_misc
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __init_misc
 INSTSELECTOR: instruction to be included cmovz rdx, rbp
 ins:cmovz rdx, rbp
 reg:rdx
 Exe __init_misc
 Exe __init_misc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe __init_misc
 Exe __init_misc
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe __init_misc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __init_misc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __init_misc
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffff88
 ins:mov rax, 0xffffffffffffff88
 reg:rax
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[rax]
 ins:mov rax, qword ptr fs:[rax]
 reg:rax
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax]
 ins:mov rdx, qword ptr [rax]
 reg:rdx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rdx+0x40]
 ins:mov rcx, qword ptr [rdx+0x40]
 reg:rcx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rdx, 0xffffffffffffffc8
 ins:mov rdx, 0xffffffffffffffc8
 reg:rdx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included add rcx, 0x100
 ins:add rcx, 0x100
 reg:rcx
 Exe __ctype_init
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax]
 ins:mov rdx, qword ptr [rax]
 reg:rdx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rdx+0x48]
 ins:mov rcx, qword ptr [rdx+0x48]
 reg:rcx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rdx, 0xffffffffffffffb8
 ins:mov rdx, 0xffffffffffffffb8
 reg:rdx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included add rcx, 0x200
 ins:add rcx, 0x200
 reg:rcx
 Exe __ctype_init
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x58]
 ins:mov rdx, qword ptr [rax+0x58]
 reg:rdx
 Exe __ctype_init
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffc0
 ins:mov rax, 0xffffffffffffffc0
 reg:rax
 Exe __ctype_init
 INSTSELECTOR: instruction to be included add rdx, 0x200
 ins:add rdx, 0x200
 reg:rdx
 Exe __ctype_init
 Exe __ctype_init
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe generic_start_main
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included mov edi, 0x701158
 ins:mov edi, 0x701158
 reg:edi
 Exe __cxa_atexit
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2de211], 0x0
 ins:cmp dword ptr [rip+0x2de211], 0x0
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [rip+0x2dc2cf], esi
 ins:lock cmpxchg dword ptr [rip+0x2dc2cf], esi
 reg:eax
 Exe __new_exitfn
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rip+0x2dc2c0], esi
 ins:cmpxchg dword ptr [rip+0x2dc2c0], esi
 reg:eax
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov r8, rbp
 ins:mov r8, rbp
 reg:r8
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+0x8]
 ins:mov rax, qword ptr [r8+0x8]
 reg:rax
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8]
 ins:mov rax, qword ptr [r8]
 reg:rax
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included lea rsi, ptr [r8+0x10]
 ins:lea rsi, ptr [r8+0x10]
 reg:rsi
 Exe __new_exitfn
 Exe __new_exitfn
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included add qword ptr [rip+0x2de0ff], 0x1
 ins:add qword ptr [rip+0x2de0ff], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rip+0x2de0ff], 0x1
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2de140], 0x0
 ins:cmp dword ptr [rip+0x2de140], 0x0
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included lock dec dword ptr [rip+0x2dc1ff]
 ins:lock dec dword ptr [rip+0x2dc1ff]
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included dec dword ptr [rip+0x2dc1f1]
 ins:dec dword ptr [rip+0x2dc1f1]
 reg:rflags
 Exe __new_exitfn
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __new_exitfn
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __new_exitfn
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __cxa_atexit
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __cxa_atexit
 Exe __cxa_atexit
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x30]
 ins:xor rdi, qword ptr fs:[0x30]
 reg:rdi
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included rol rdi, 0x11
 ins:rol rdi, 0x11
 reg:rdi
 Exe __cxa_atexit
 Exe __cxa_atexit
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __cxa_atexit
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __cxa_atexit
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2d6a53]
 ins:mov eax, dword ptr [rip+0x2d6a53]
 reg:eax
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2dd63f]
 ins:mov rdx, qword ptr [rip+0x2dd63f]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0xc]
 ins:mov edi, dword ptr [rsp+0xc]
 reg:edi
 Exe generic_start_main
 Exe elision_init
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x2f19d2]
 ins:mov ecx, dword ptr [rip+0x2f19d2]
 reg:ecx
 Exe elision_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe elision_init
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2f928e]
 ins:mov edx, dword ptr [rip+0x2f928e]
 reg:edx
 Exe elision_init
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe elision_init
 Exe elision_init
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rip+0x2fa1c7]
 ins:movzx ecx, byte ptr [rip+0x2fa1c7]
 reg:ecx
 Exe elision_init
 INSTSELECTOR: instruction to be included and dh, 0x8
 ins:and dh, 0x8
 reg:dh
 Exe elision_init
 INSTSELECTOR: instruction to be included cmovnz eax, ecx
 ins:cmovnz eax, ecx
 reg:eax
 Exe elision_init
 Exe elision_init
 Exe elision_init
 Exe __register_frame_info
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe __register_frame_info
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe __register_frame_info
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rdi]
 ins:mov r8d, dword ptr [rdi]
 reg:r8d
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included test r8d, r8d
 ins:test r8d, r8d
 reg:rflags
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2d7513], 0x0
 ins:cmp qword ptr [rip+0x2d7513], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0x2d7513], 0x0
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included mov eax, 0x7f8
 ins:mov eax, 0x7f8
 reg:eax
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2dd03a]
 ins:lea rdi, ptr [rip+0x2dd03a]
 reg:rdi
 Exe __register_frame_info_bases
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rdi+0x10]
 ins:mov esi, dword ptr [rdi+0x10]
 reg:esi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and eax, 0x17f
 ins:and eax, 0x17f
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov edx, esi
 ins:mov edx, esi
 reg:edx
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and edx, 0x7c
 ins:and edx, 0x7c
 reg:edx
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x30034d]
 ins:mov eax, dword ptr [rip+0x30034d]
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [r8], edi
 ins:lock cmpxchg dword ptr [r8], edi
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included mov eax, dword ptr fs:[0x2d0]
 ins:mov eax, dword ptr fs:[0x2d0]
 reg:eax
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included add dword ptr [r8+0xc], 0x1
 ins:add dword ptr [r8+0xc], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [r8+0xc], 0x1
 Exe pthread_mutex_lock
 Exe pthread_mutex_lock
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe pthread_mutex_lock
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2dd05e]
 ins:mov rax, qword ptr [rip+0x2dd05e]
 reg:rax
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2dd020]
 ins:lea rdi, ptr [rip+0x2dd020]
 reg:rdi
 Exe __register_frame_info_bases
 Exe __register_frame_info_bases
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __register_frame_info_bases
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rdi+0x10]
 ins:mov esi, dword ptr [rdi+0x10]
 reg:esi
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov r8d, esi
 ins:mov r8d, esi
 reg:r8d
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and eax, 0x17f
 ins:and eax, 0x17f
 reg:eax
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and r8d, 0x7c
 ins:and r8d, 0x7c
 reg:r8d
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0xc], 0x1
 ins:sub dword ptr [rdx+0xc], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rdx+0xc], 0x1
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included and esi, 0x80
 ins:and esi, 0x80
 reg:esi
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdx]
 ins:lock dec dword ptr [rdx]
 reg:rflags
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 Exe pthread_mutex_unlock
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe pthread_mutex_unlock
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included mov eax, 0x7027e8
 ins:mov eax, 0x7027e8
 reg:eax
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included sub rax, 0x7027e8
 ins:sub rax, 0x7027e8
 reg:rax
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included sar rax, 0x3
 ins:sar rax, 0x3
 reg:rax
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included shr rdx, 0x3f
 ins:shr rdx, 0x3f
 reg:rdx
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe register_tm_clones
 Exe register_tm_clones
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe register_tm_clones
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x3067f0]
 ins:mov eax, dword ptr [rip+0x3067f0]
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 ins:cmp eax, 0x2
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov edi, 0xbc
 ins:mov edi, 0xbc
 reg:edi
 Exe init_cacheinfo
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov r15d, 0x1
 ins:mov r15d, 0x1
 reg:r15d
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov r12d, 0x1
 ins:mov r12d, 0x1
 reg:r12d
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov eax, 0x2
 ins:mov eax, 0x2
 reg:eax
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ecx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 ins:cmp r12d, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp r12d, 0x1
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov r14d, edx
 ins:mov r14d, edx
 reg:r14d
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov r13d, ecx
 ins:mov r13d, ecx
 reg:r13d
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included movzx r15d, al
 ins:movzx r15d, al
 reg:r15d
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included xor al, al
 ins:xor al, al
 reg:al
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x10]
 ins:lea rdx, ptr [rsp+0x10]
 reg:rdx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe handle_intel.isra.0
 Exe intel_check_word
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 ins:sub rsp, 0x10
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe intel_check_word
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdi-0xb9]
 ins:lea ecx, ptr [rdi-0xb9]
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov edx, 0x55555556
 ins:mov edx, 0x55555556
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sar ecx, 0x1f
 ins:sar ecx, 0x1f
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included imul edx
 ins:imul edx
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub edx, ecx
 ins:sub edx, ecx
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe intel_check_word
 INSTSELECTOR: instruction to be included lea r14d, ptr [rdx+rdx*2]
 ins:lea r14d, ptr [rdx+rdx*2]
 reg:r14d
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included movzx eax, bl
 ins:movzx eax, bl
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x40
 ins:cmp eax, 0x40
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 ins:cmp r14d, 0x9
 reg:rflags
 NORMAL FLAG REG: inst cmp r14d, 0x9
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add rsp, 0x10
 ins:add rsp, 0x10
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0xff
 ins:cmp eax, 0xff
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x49
 ins:cmp eax, 0x49
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x49
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 ins:cmp r14d, 0x9
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov r8d, 0x44da70
 ins:mov r8d, 0x44da70
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov ecx, 0x8
 ins:mov ecx, 0x8
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov edx, 0x44
 ins:mov edx, 0x44
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov esi, 0x4d25c0
 ins:mov esi, 0x4d25c0
 reg:esi
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe intel_check_word
 Exe intel_check_word
 Exe bsearch
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe bsearch
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included mov r14, rdx
 ins:mov r14, rdx
 reg:r14
 Exe bsearch
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included mov r13, rcx
 ins:mov r13, rcx
 reg:r13
 Exe bsearch
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included mov r12, r8
 ins:mov r12, r8
 reg:r12
 Exe bsearch
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe bsearch
 Exe bsearch
 Exe bsearch
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included lea rbx, ptr [r14+r15*1]
 ins:lea rbx, ptr [r14+r15*1]
 reg:rbx
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 ins:mov rdi, qword ptr [rsp]
 reg:rdi
 Exe bsearch
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 ins:shr rbx, 0x1
 reg:rbx
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included imul rbp, r13
 ins:imul rbp, r13
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included add rbp, qword ptr [rsp+0x8]
 ins:add rbp, qword ptr [rsp+0x8]
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe bsearch
 Exe intel_02_known_compare
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rsi]
 ins:movzx eax, byte ptr [rsi]
 reg:eax
 Exe intel_02_known_compare
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], al
 ins:cmp byte ptr [rdi], al
 reg:rflags
 Exe intel_02_known_compare
 Exe intel_02_known_compare
 INSTSELECTOR: instruction to be included sbb eax, eax
 ins:sbb eax, eax
 reg:eax
 Exe intel_02_known_compare
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe intel_02_known_compare
 Exe bsearch
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included mov r14, rbx
 ins:mov r14, rbx
 reg:r14
 Exe bsearch
 INSTSELECTOR: instruction to be included cmp r15, r14
 ins:cmp r15, r14
 reg:rflags
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe bsearch
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe bsearch
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rax+0x3]
 ins:movzx edx, byte ptr [rax+0x3]
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included movzx ecx, dl
 ins:movzx ecx, dl
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp ecx, r14d
 ins:cmp ecx, r14d
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp dl, 0x6
 ins:cmp dl, 0x6
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr ebx, 0x8
 ins:shr ebx, 0x8
 reg:ebx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included movzx eax, bl
 ins:movzx eax, bl
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x40
 ins:cmp eax, 0x40
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 ins:cmp r14d, 0x9
 reg:rflags
 NORMAL FLAG REG: inst cmp r14d, 0x9
 Exe intel_check_word
 Exe intel_check_word
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included lea r15, ptr [rbx+0x1]
 ins:lea r15, ptr [rbx+0x1]
 reg:r15
 Exe bsearch
 INSTSELECTOR: instruction to be included cmp r15, r14
 ins:cmp r15, r14
 reg:rflags
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included lea rbx, ptr [r14+r15*1]
 ins:lea rbx, ptr [r14+r15*1]
 reg:rbx
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 ins:mov rdi, qword ptr [rsp]
 reg:rdi
 Exe bsearch
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 ins:shr rbx, 0x1
 reg:rbx
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included imul rbp, r13
 ins:imul rbp, r13
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included add rbp, qword ptr [rsp+0x8]
 ins:add rbp, qword ptr [rsp+0x8]
 reg:rbp
 Exe bsearch
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe bsearch
 Exe bsearch
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe bsearch
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe bsearch
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe bsearch
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe bsearch
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add rsp, 0x10
 ins:add rsp, 0x10
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe intel_check_word
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x10]
 ins:lea rdx, ptr [rsp+0x10]
 reg:rdx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov esi, ebx
 ins:mov esi, ebx
 reg:esi
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe handle_intel.isra.0
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov al, 0x4
 ins:mov al, 0x4
 reg:al
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xchg r8d, ebx
 ins:xchg r8d, ebx
 reg:ebx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xchg r8d, ebx
 ins:xchg r8d, ebx
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and edx, 0x1f
 ins:and edx, 0x1f
 reg:edx
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test r14d, r14d
 ins:test r14d, r14d
 reg:rflags
 NORMAL FLAG REG: inst test r14d, r14d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov edi, 0x4
 ins:mov edi, 0x4
 reg:edi
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x3
 ins:cmp r14d, 0x3
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and eax, 0x7
 ins:and eax, 0x7
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp edx, 0x1
 ins:cmp edx, 0x1
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub ebp, 0xb9
 ins:sub ebp, 0xb9
 reg:ebp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub ebp, r14d
 ins:sub ebp, r14d
 reg:ebp
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr eax, 0x16
 ins:shr eax, 0x16
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add ecx, 0x1
 ins:add ecx, 0x1
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr r8d, 0xc
 ins:shr r8d, 0xc
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add edx, 0x1
 ins:add edx, 0x1
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and r8d, 0x3ff
 ins:and r8d, 0x3ff
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included imul eax, edx
 ins:imul eax, edx
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add r8d, 0x1
 ins:add r8d, 0x1
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included imul eax, ecx
 ins:imul eax, ecx
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included imul eax, r8d
 ins:imul eax, r8d
 reg:eax
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add rsp, 0x10
 ins:add rsp, 0x10
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe intel_check_word
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe intel_check_word
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x10]
 ins:lea rdx, ptr [rsp+0x10]
 reg:rdx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov esi, r13d
 ins:mov esi, r13d
 reg:esi
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe handle_intel.isra.0
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe handle_intel.isra.0
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe handle_intel.isra.0
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov edi, 0xc2
 ins:mov edi, 0xc2
 reg:edi
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe init_cacheinfo
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x6
 ins:cmp r14d, 0x6
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0xc
 ins:cmp r14d, 0xc
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 ins:cmp r14d, 0x9
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and eax, 0x7
 ins:and eax, 0x7
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add esi, 0x1
 ins:add esi, 0x1
 reg:esi
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov eax, edi
 ins:mov eax, edi
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xchg r8d, ebx
 ins:xchg r8d, ebx
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:edx
 Exe intel_check_word
 INSTSELECTOR: instruction to be included xchg r8d, ebx
 ins:xchg r8d, ebx
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included test al, 0x1f
 ins:test al, 0x1f
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and eax, 0x7
 ins:and eax, 0x7
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub ebp, 0xb9
 ins:sub ebp, 0xb9
 reg:ebp
 Exe intel_check_word
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included sub ebp, r14d
 ins:sub ebp, r14d
 reg:ebp
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included and eax, 0xfff
 ins:and eax, 0xfff
 reg:eax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe intel_check_word
 INSTSELECTOR: instruction to be included cmp ebp, 0x1
 ins:cmp ebp, 0x1
 reg:rflags
 Exe intel_check_word
 Exe intel_check_word
 INSTSELECTOR: instruction to be included shr r8d, 0x16
 ins:shr r8d, 0x16
 reg:r8d
 Exe intel_check_word
 INSTSELECTOR: instruction to be included lea eax, ptr [r8+0x1]
 ins:lea eax, ptr [r8+0x1]
 reg:eax
 Exe intel_check_word
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r8d, 0x3
 ins:mov r8d, 0x3
 reg:r8d
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rip+0x3066a7]
 ins:mov r10d, dword ptr [rip+0x3066a7]
 reg:r10d
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cmp r10d, 0x3
 ins:cmp r10d, 0x3
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r11d, dword ptr [rip+0x3066ce]
 ins:mov r11d, dword ptr [rip+0x3066ce]
 reg:r11d
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x3066cb]
 ins:mov r13d, dword ptr [rip+0x3066cb]
 reg:r13d
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r9d, 0x4
 ins:mov r9d, 0x4
 reg:r9d
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included lea edi, ptr [rcx+0x1]
 ins:lea edi, ptr [rcx+0x1]
 reg:edi
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov eax, r9d
 ins:mov eax, r9d
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test al, 0x1f
 ins:test al, 0x1f
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x30666c]
 ins:movzx eax, byte ptr [rip+0x30666c]
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included and edx, 0x7
 ins:and edx, 0x7
 reg:edx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cmp edx, r8d
 ins:cmp edx, r8d
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included lea edi, ptr [rcx+0x1]
 ins:lea edi, ptr [rcx+0x1]
 reg:edi
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov eax, r9d
 ins:mov eax, r9d
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cpuid 
 ins:cpuid 
 reg:ebx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included shr eax, 0xe
 ins:shr eax, 0xe
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included and esi, 0x3ff
 ins:and esi, 0x3ff
 reg:esi
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cmp r10d, 0xa
 ins:cmp r10d, 0xa
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov r9d, 0xb
 ins:mov r9d, 0xb
 reg:r9d
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included idiv rcx
 ins:idiv rcx
 reg:rdx
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included and r12b, 0x0
 ins:and r12b, 0x0
 reg:r12b
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included and bpl, 0x0
 ins:and bpl, 0x0
 reg:bpl
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe init_cacheinfo
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe init_cacheinfo
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe init_cacheinfo
 Exe generic_start_main
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe generic_start_main
 Exe _setjmp
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _setjmp
 Exe __sigsetjmp
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x30]
 ins:xor rax, qword ptr fs:[0x30]
 reg:rax
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included rol rax, 0x11
 ins:rol rax, 0x11
 reg:rax
 Exe __sigsetjmp
 Exe __sigsetjmp
 Exe __sigsetjmp
 Exe __sigsetjmp
 Exe __sigsetjmp
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x8]
 ins:lea rdx, ptr [rsp+0x8]
 reg:rdx
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included xor rdx, qword ptr fs:[0x30]
 ins:xor rdx, qword ptr fs:[0x30]
 reg:rdx
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included rol rdx, 0x11
 ins:rol rdx, 0x11
 reg:rdx
 Exe __sigsetjmp
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sigsetjmp
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x30]
 ins:xor rax, qword ptr fs:[0x30]
 reg:rax
 Exe __sigsetjmp
 INSTSELECTOR: instruction to be included rol rax, 0x11
 ins:rol rax, 0x11
 reg:rax
 Exe __sigsetjmp
 Exe __sigsetjmp
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __sigjmp_save
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included lea rdx, ptr [rdi+0x48]
 ins:lea rdx, ptr [rdi+0x48]
 reg:rdx
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe __sigjmp_save
 Exe __sigjmp_save
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __sigjmp_save
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __sigjmp_save
 Exe generic_start_main
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x300]
 ins:mov rax, qword ptr fs:[0x300]
 reg:rax
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x2f8]
 ins:mov rax, qword ptr fs:[0x2f8]
 reg:rax
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe generic_start_main
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2dd5f4]
 ins:mov rdx, qword ptr [rip+0x2dd5f4]
 reg:rdx
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x10]
 ins:mov rsi, qword ptr [rsp+0x10]
 reg:rsi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0xc]
 ins:mov edi, dword ptr [rsp+0xc]
 reg:edi
 Exe generic_start_main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe generic_start_main
 Exe main
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe main
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe main
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe main
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 ins:sub rsp, 0x98
 reg:rsp
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x80]
 ins:lea rax, ptr [rbp-0x80]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe gettimeofday
 INSTSELECTOR: instruction to be included mov eax, 0x60
 ins:mov eax, 0x60
 reg:eax
 Exe gettimeofday
 Exe gettimeofday
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff000
 ins:cmp rax, 0xfffffffffffff000
 reg:rflags
 Exe gettimeofday
 Exe gettimeofday
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x78]
 ins:mov rdx, qword ptr [rbp-0x78]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x80]
 ins:mov rax, qword ptr [rbp-0x80]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x90]
 ins:mov rcx, qword ptr [rbp-0x90]
 reg:rcx
 Exe main
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x84]
 ins:mov eax, dword ptr [rbp-0x84]
 reg:eax
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x4cd08e
 ins:mov edx, 0x4cd08e
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe main
 Exe getopt
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe getopt
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b2026]
 ins:mov eax, dword ptr [rip+0x2b2026]
 reg:eax
 Exe getopt
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe getopt
 Exe getopt
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b2008]
 ins:mov eax, dword ptr [rip+0x2b2008]
 reg:eax
 Exe getopt
 Exe getopt
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov ebx, edi
 ins:mov ebx, edi
 reg:ebx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rip+0x2b91bb]
 ins:mov r15d, dword ptr [rip+0x2b91bb]
 reg:r15d
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b91ab]
 ins:mov eax, dword ptr [rip+0x2b91ab]
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r14, rdx
 ins:mov r14, rdx
 reg:r14
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r12d, ecx
 ins:mov r12d, ecx
 reg:r12d
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edi, 0x4d2908
 ins:mov edi, 0x4d2908
 reg:edi
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b9092]
 ins:mov edx, dword ptr [rip+0x2b9092]
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r14]
 ins:movzx eax, byte ptr [r14]
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp al, 0x2b
 ins:cmp al, 0x2b
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp al, 0x2d
 ins:cmp al, 0x2d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edi, 0x4d2908
 ins:mov edi, 0x4d2908
 reg:edi
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included or eax, r12d
 ins:or eax, r12d
 reg:eax
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [r14]
 ins:movzx edx, byte ptr [r14]
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp dl, 0x2d
 ins:cmp dl, 0x2d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp dl, 0x2b
 ins:cmp dl, 0x2b
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r14]
 ins:movzx eax, byte ptr [r14]
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rip+0x2b9134]
 ins:mov r13, qword ptr [rip+0x2b9134]
 reg:r13
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x3a
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmovz r15d, eax
 ins:cmovz r15d, eax
 reg:r15d
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2b907e]
 ins:mov eax, dword ptr [rip+0x2b907e]
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rip+0x2b9043]
 ins:mov r8d, dword ptr [rip+0x2b9043]
 reg:r8d
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp eax, r8d
 ins:cmp eax, r8d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b905e]
 ins:mov edx, dword ptr [rip+0x2b905e]
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp r8d, edx
 ins:cmp r8d, edx
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b9040], 0x1
 ins:cmp dword ptr [rip+0x2b9040], 0x1
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b905e]
 ins:mov edx, dword ptr [rip+0x2b905e]
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp r8d, edx
 ins:cmp r8d, edx
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b9040], 0x1
 ins:cmp dword ptr [rip+0x2b9040], 0x1
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp ebx, r8d
 ins:cmp ebx, r8d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2b9040], 0x1
 ins:cmp dword ptr [rip+0x2b9040], 0x1
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp ebx, r8d
 ins:cmp ebx, r8d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movsxd rdx, r8d
 ins:movsxd rdx, r8d
 reg:rdx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+rdx*8]
 ins:mov r13, qword ptr [rbp+rdx*8]
 reg:r13
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x2d
 ins:cmp byte ptr [r13], 0x2d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp eax, edx
 ins:cmp eax, edx
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp r8d, eax
 ins:cmp r8d, eax
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov esi, 0x707b60
 ins:mov esi, 0x707b60
 reg:esi
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp r8d, eax
 ins:cmp r8d, eax
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp ebx, r8d
 ins:cmp ebx, r8d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movsxd rax, r8d
 ins:movsxd rax, r8d
 reg:rax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+rax*8]
 ins:lea rcx, ptr [rbp+rax*8]
 reg:rcx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r8d, eax
 ins:mov r8d, eax
 reg:r8d
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp ebx, r8d
 ins:cmp ebx, r8d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included movsxd rdx, r8d
 ins:movsxd rdx, r8d
 reg:rdx
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+rdx*8]
 ins:mov r13, qword ptr [rbp+rdx*8]
 reg:r13
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x2d
 ins:cmp byte ptr [r13], 0x2d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp byte ptr [r13+0x1], 0x2d
 ins:cmp byte ptr [r13+0x1], 0x2d
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b8f7a]
 ins:mov edx, dword ptr [rip+0x2b8f7a]
 reg:edx
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included cmp eax, edx
 ins:cmp eax, edx
 reg:rflags
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r12d, 0xffffffff
 ins:mov r12d, 0xffffffff
 reg:r12d
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov r12d, 0xffffffff
 ins:mov r12d, 0xffffffff
 reg:r12d
 Exe _getopt_internal_r.constprop.2
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _getopt_internal_r.constprop.2
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _getopt_internal_r.constprop.2
 Exe getopt
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b7907]
 ins:mov edx, dword ptr [rip+0x2b7907]
 reg:edx
 Exe getopt
 Exe getopt
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2b790a]
 ins:mov rdx, qword ptr [rip+0x2b790a]
 reg:rdx
 Exe getopt
 Exe getopt
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2b78f5]
 ins:mov edx, dword ptr [rip+0x2b78f5]
 reg:edx
 Exe getopt
 Exe getopt
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe getopt
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x40], 0xffffffffffffffff
 ins:cmp qword ptr [rbp-0x40], 0xffffffffffffffff
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe9d8]
 ins:mov rax, qword ptr [rip+0x2fe9d8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe main
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe9bd]
 ins:mov rax, qword ptr [rip+0x2fe9bd]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included shr rdx, 0x3f
 ins:shr rdx, 0x3f
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe main
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306b05]
 ins:mov rax, qword ptr [rip+0x306b05]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fe986]
 ins:mov rbx, qword ptr [rip+0x2fe986]
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30698b]
 ins:mov rax, qword ptr [rip+0x30698b]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd0a0
 ins:mov edi, 0x4cd0a0
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe973]
 ins:mov rax, qword ptr [rip+0x2fe973]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe main
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306ab8]
 ins:mov rax, qword ptr [rip+0x306ab8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, 0xf
 ins:cmp rax, 0xf
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x10
 ins:mov esi, 0x10
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd0d0
 ins:mov edi, 0x4cd0d0
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306a54]
 ins:mov rax, qword ptr [rip+0x306a54]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, 0x10
 ins:cmp rax, 0x10
 reg:rflags
 Exe main
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3068c0]
 ins:mov rdx, qword ptr [rip+0x3068c0]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306a19]
 ins:mov rax, qword ptr [rip+0x306a19]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, 0xfff
 ins:cmp rax, 0xfff
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3068ba]
 ins:mov rax, qword ptr [rip+0x3068ba]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306898]
 ins:mov rax, qword ptr [rip+0x306898]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shr rax, 0xc
 ins:shr rax, 0xc
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0xc
 ins:shl rax, 0xc
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x306891]
 ins:mov rdx, qword ptr [rip+0x306891]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rcx, rdx
 ins:mov rcx, rdx
 reg:rcx
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30686f]
 ins:mov rdx, qword ptr [rip+0x30686f]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included imul rdx, rcx
 ins:imul rdx, rcx
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included shl rdx, 0x4
 ins:shl rdx, 0x4
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0xc
 ins:shl rax, 0xc
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30684e]
 ins:mov rdx, qword ptr [rip+0x30684e]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included shl rbx, 0x4
 ins:shl rbx, 0x4
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x0
 ins:mov edx, 0x0
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included div rbx
 ins:div rbx
 reg:rdx
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0xc
 ins:shl rax, 0xc
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30684e]
 ins:mov rdx, qword ptr [rip+0x30684e]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included shl rbx, 0x4
 ins:shl rbx, 0x4
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x0
 ins:mov edx, 0x0
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included div rbx
 ins:div rbx
 reg:rax
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xc0
 ins:mov edi, 0xc0
 reg:edi
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3068e1]
 ins:mov rdx, qword ptr [rip+0x3068e1]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306792]
 ins:mov rax, qword ptr [rip+0x306792]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rdx, rax
 ins:imul rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306777]
 ins:mov rax, qword ptr [rip+0x306777]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10, r14
 ins:mov r10, r14
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r10, 0xc
 ins:shr r10, 0xc
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r10, 0xa
 ins:cmp r10, 0xa
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10, r14
 ins:mov r10, r14
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r10, 0xf
 ins:shr r10, 0xf
 reg:r10
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r10, 0x4
 ins:cmp r10, 0x4
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add r10d, 0x77
 ins:add r10d, 0x77
 reg:r10d
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r10d, 0x7e
 ins:mov r10d, 0x7e
 reg:r10d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x12
 ins:shr rax, 0x12
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x7c]
 ins:lea edx, ptr [rax+0x7c]
 reg:edx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rax, 0x2
 ins:cmp rax, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0x2
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmovbe r10d, edx
 ins:cmovbe r10d, edx
 reg:r10d
 Exe _int_malloc
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or dword ptr [rdi+0x4], 0x1
 ins:or dword ptr [rdi+0x4], 0x1
 reg:rflags
 COMP2MEM: inst or dword ptr [rdi+0x4], 0x1
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+0x50]
 ins:lea rax, ptr [rdi+0x50]
 reg:rax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea r9, ptr [rdi+0x58]
 ins:lea r9, ptr [rdi+0x58]
 reg:r9
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x8]
 ins:lea r10, ptr [rdi+0x8]
 reg:r10
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 ins:lea rax, ptr [rsp+0x40]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included sub qword ptr [rsp+0x10], rax
 ins:sub qword ptr [rsp+0x10], rax
 reg:rflags
 COMP2MEM: inst sub qword ptr [rsp+0x10], rax
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xchg qword ptr [r10], rbx
 ins:xchg qword ptr [r10], rbx
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add r10, 0x8
 ins:add r10, 0x8
 reg:r10
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rax, ptr [r10-0x8]
 ins:lea rax, ptr [r10-0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 ins:cmp qword ptr [rsp+0x8], rax
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add rsp, 0x68
 ins:add rsp, 0x68
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included xchg qword ptr [r10], rbx
 ins:xchg qword ptr [r10], rbx
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0x10]
 ins:mov r15, qword ptr [rbx+0x10]
 reg:r15
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r12, 0xfffffffffffffffa
 ins:and r12, 0xfffffffffffffffa
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+r12*1]
 ins:lea rbp, ptr [rbx+r12*1]
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 ins:mov r13, qword ptr [rbp+0x8]
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r13, 0xfffffffffffffff8
 ins:and r13, 0xfffffffffffffff8
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included sub rbx, rax
 ins:sub rbx, rax
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add r12, rax
 ins:add r12, rax
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbx+rax*1]
 ins:cmp rax, qword ptr [rbx+rax*1]
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x10]
 ins:mov rax, qword ptr [rbx+0x10]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x18]
 ins:mov rdx, qword ptr [rbx+0x18]
 reg:rdx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp rbx, qword ptr [rax+0x18]
 ins:cmp rbx, qword ptr [rax+0x18]
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp qword ptr [r14+0x58], rbp
 ins:cmp qword ptr [r14+0x58], rbp
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test byte ptr [rbp+r13*1+0x8], 0x1
 ins:test byte ptr [rbp+r13*1+0x8], 0x1
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and qword ptr [rbp+0x8], 0xfffffffffffffffe
 ins:and qword ptr [rbp+0x8], 0xfffffffffffffffe
 reg:rflags
 COMP2MEM: inst and qword ptr [rbp+0x8], 0xfffffffffffffffe
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x68]
 ins:mov rax, qword ptr [r14+0x68]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp r12, 0x3ff
 ins:cmp r12, 0x3ff
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, 0x3ff
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or rdx, 0x1
 ins:or rdx, 0x1
 reg:rdx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 NORMAL FLAG REG: inst test r15, r15
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rbx, r15
 ins:mov rbx, r15
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0x10]
 ins:mov r15, qword ptr [rbx+0x10]
 reg:r15
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r12, 0xfffffffffffffffa
 ins:and r12, 0xfffffffffffffffa
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+r12*1]
 ins:lea rbp, ptr [rbx+r12*1]
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 ins:mov r13, qword ptr [rbp+0x8]
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r13, 0xfffffffffffffff8
 ins:and r13, 0xfffffffffffffff8
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included or rdx, 0x1
 ins:or rdx, 0x1
 reg:rdx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 NORMAL FLAG REG: inst test r15, r15
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rbx, r15
 ins:mov rbx, r15
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0x10]
 ins:mov r15, qword ptr [rbx+0x10]
 reg:r15
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r12, 0xfffffffffffffffa
 ins:and r12, 0xfffffffffffffffa
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+r12*1]
 ins:lea rbp, ptr [rbx+r12*1]
 reg:rbp
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 ins:mov r13, qword ptr [rbp+0x8]
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and r13, 0xfffffffffffffff8
 ins:and r13, 0xfffffffffffffff8
 reg:r13
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe malloc_consolidate
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included sub rbx, rax
 ins:sub rbx, rax
 reg:rbx
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included add r12, rax
 ins:add r12, rax
 reg:r12
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe malloc_consolidate
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbx+rax*1]
 ins:cmp rax, qword ptr [rbx+rax*1]
 reg:rflags
 Exe malloc_consolidate
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff8
 ins:and rdx, 0xfffffffffffffff8
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, 0x3ff
 ins:cmp r14, 0x3ff
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r9, r15
 ins:cmp r9, r15
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, rdx
 ins:cmp r14, rdx
 reg:rflags
 NORMAL FLAG REG: inst cmp r14, rdx
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, rdx
 ins:cmp r14, rdx
 reg:rflags
 NORMAL FLAG REG: inst cmp r14, rdx
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rdx, 0x3ff
 ins:cmp rdx, 0x3ff
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr rax, 0x6
 ins:shr rax, 0x6
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rax, 0x30
 ins:cmp rax, 0x30
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r8d, 0x1
 ins:mov r8d, 0x1
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr ecx, 0x4
 ins:shr ecx, 0x4
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rcx+rcx*1-0x2]
 ins:lea eax, ptr [rcx+rcx*1-0x2]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9d, ecx
 ins:mov r9d, ecx
 reg:r9d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shl r8d, cl
 ins:shl r8d, cl
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sar r9d, 0x5
 ins:sar r9d, 0x5
 reg:r9d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp+rax*8+0x58]
 ins:lea rdi, ptr [rbp+rax*8+0x58]
 reg:rdi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x10]
 ins:mov rsi, qword ptr [rdi+0x10]
 reg:rsi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included movsxd r9, r9d
 ins:movsxd r9, r9d
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included or dword ptr [rbp+r9*4+0x858], r8d
 ins:or dword ptr [rbp+r9*4+0x858], r8d
 reg:rflags
 COMP2MEM: inst or dword ptr [rbp+r9*4+0x858], r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub r13d, 0x1
 ins:sub r13d, 0x1
 reg:r13d
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp+0x70]
 ins:mov rbx, qword ptr [rbp+0x70]
 reg:rbx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbx, r15
 ins:cmp rbx, r15
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x8]
 ins:mov rdx, qword ptr [rbx+0x8]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbx+0x18]
 ins:mov r9, qword ptr [rbx+0x18]
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rdx, 0x10
 ins:cmp rdx, 0x10
 reg:rflags
 Exe _int_malloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2c9c76]
 ins:mov eax, dword ptr [rip+0x2c9c76]
 reg:eax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2c9c6c], eax
 ins:cmp dword ptr [rip+0x2c9c6c], eax
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea r12, ptr [r14+rbp*1+0x7]
 ins:lea r12, ptr [r14+rbp*1+0x7]
 reg:r12
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included not rax
 ins:not rax
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included and r12, rax
 ins:and r12, rax
 reg:r12
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rbp, r12
 ins:cmp rbp, r12
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe sysmalloc
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov r8d, 0xffffffff
 ins:mov r8d, 0xffffffff
 reg:r8d
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov ecx, 0x22
 ins:mov ecx, 0x22
 reg:ecx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov edx, 0x3
 ins:mov edx, 0x3
 reg:edx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe sysmalloc
 Exe __mmap
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe __mmap
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r13, r9
 ins:mov r13, r9
 reg:r13
 Exe __mmap
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r12d, ecx
 ins:mov r12d, ecx
 reg:r12d
 Exe __mmap
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe __mmap
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r14, r8d
 ins:movsxd r14, r8d
 reg:r14
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r15, edx
 ins:movsxd r15, edx
 reg:r15
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r9, r13
 ins:mov r9, r13
 reg:r9
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r8, r14
 ins:mov r8, r14
 reg:r8
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r10, r12d
 ins:movsxd r10, r12d
 reg:r10
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __mmap
 INSTSELECTOR: instruction to be included mov eax, 0x9
 ins:mov eax, 0x9
 reg:eax
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included test dl, 0x4
 ins:test dl, 0x4
 reg:rflags
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2b6c7e], 0x1
 ins:test byte ptr [rip+0x2b6c7e], 0x1
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rip+0x2b6c7e], 0x1
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r14, r8d
 ins:movsxd r14, r8d
 reg:r14
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r15, edx
 ins:movsxd r15, edx
 reg:r15
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r10d, ecx
 ins:mov r10d, ecx
 reg:r10d
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r8, r14
 ins:mov r8, r14
 reg:r8
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe __mmap
 INSTSELECTOR: instruction to be included or r10d, 0x40
 ins:or r10d, 0x40
 reg:r10d
 Exe __mmap
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe __mmap
 INSTSELECTOR: instruction to be included mov eax, 0x9
 ins:mov eax, 0x9
 reg:eax
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r10, r10d
 ins:movsxd r10, r10d
 reg:r10
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r14, r8d
 ins:movsxd r14, r8d
 reg:r14
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r15, edx
 ins:movsxd r15, edx
 reg:r15
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r9, r13
 ins:mov r9, r13
 reg:r9
 Exe __mmap
 INSTSELECTOR: instruction to be included mov r8, r14
 ins:mov r8, r14
 reg:r8
 Exe __mmap
 INSTSELECTOR: instruction to be included movsxd r10, r12d
 ins:movsxd r10, r12d
 reg:r10
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe __mmap
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __mmap
 INSTSELECTOR: instruction to be included mov eax, 0x9
 ins:mov eax, 0x9
 reg:eax
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff000
 ins:cmp rax, 0xfffffffffffff000
 reg:rflags
 Exe __mmap
 Exe __mmap
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __mmap
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe __mmap
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe __mmap
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe __mmap
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp rax, 0xffffffffffffffff
 ins:cmp rax, 0xffffffffffffffff
 reg:rflags
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x2c9a2b]
 ins:mov edi, dword ptr [rip+0x2c9a2b]
 reg:edi
 Exe sysmalloc
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included or rdx, 0x2
 ins:or rdx, 0x2
 reg:rdx
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included lea edx, ptr [rdi+0x1]
 ins:lea edx, ptr [rdi+0x1]
 reg:edx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp edx, dword ptr [rip+0x2c9a1f]
 ins:cmp edx, dword ptr [rip+0x2c9a1f]
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, dword ptr [rip+0x2c9a1f]
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r12, qword ptr [rip+0x2c9a14]
 ins:add r12, qword ptr [rip+0x2c9a14]
 reg:r12
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp r12, qword ptr [rip+0x2c9a15]
 ins:cmp r12, qword ptr [rip+0x2c9a15]
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, qword ptr [rip+0x2c9a15]
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add r12, qword ptr [rip+0x2c9a14]
 ins:add r12, qword ptr [rip+0x2c9a14]
 reg:r12
 Exe sysmalloc
 INSTSELECTOR: instruction to be included cmp r12, qword ptr [rip+0x2c9a15]
 ins:cmp r12, qword ptr [rip+0x2c9a15]
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, qword ptr [rip+0x2c9a15]
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe sysmalloc
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe sysmalloc
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe sysmalloc
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3068ac]
 ins:mov rdx, qword ptr [rip+0x3068ac]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30675d]
 ins:mov rax, qword ptr [rip+0x30675d]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rdx, rax
 ins:imul rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306742]
 ins:mov rax, qword ptr [rip+0x306742]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306877]
 ins:mov rax, qword ptr [rip+0x306877]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add r10d, 0x6e
 ins:add r10d, 0x6e
 reg:r10d
 Exe _int_malloc
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30685d]
 ins:mov rdx, qword ptr [rip+0x30685d]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30670e]
 ins:mov rax, qword ptr [rip+0x30670e]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included imul rdx, rax
 ins:imul rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3066f3]
 ins:mov rax, qword ptr [rip+0x3066f3]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x3066f0]
 ins:mov rbx, qword ptr [rip+0x3066f0]
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe6a9]
 ins:mov rax, qword ptr [rip+0x2fe6a9]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x3
 ins:shl rax, 0x3
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r14d, 0x20
 ins:mov r14d, 0x20
 reg:r14d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, r9
 ins:cmp r14, r9
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffb0
 ins:mov rax, 0xffffffffffffffb0
 reg:rax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r14, qword ptr [rip+0x2cf85f]
 ins:cmp r14, qword ptr [rip+0x2cf85f]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r8d, r14d
 ins:mov r8d, r14d
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included shr r8d, 0x4
 ins:shr r8d, 0x4
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub r8d, 0x2
 ins:sub r8d, 0x2
 reg:r8d
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov eax, r8d
 ins:mov eax, r8d
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+rax*8+0x8]
 ins:mov rcx, qword ptr [rbp+rax*8+0x8]
 reg:rcx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+rax*8]
 ins:lea rsi, ptr [rbp+rax*8]
 reg:rsi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsi+0x8]
 ins:lea rdx, ptr [rsi+0x8]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rcx+0x10]
 ins:mov rdi, qword ptr [rcx+0x10]
 reg:rdi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, rcx
 ins:mov rax, rcx
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp dword ptr fs:[0x18], 0x0
 ins:cmp dword ptr fs:[0x18], 0x0
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lock cmpxchg qword ptr [rsi+0x8], rdi
 ins:lock cmpxchg qword ptr [rsi+0x8], rdi
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp rcx, rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, eax
 ins:test esi, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdx+0x18]
 ins:mov r13, qword ptr [rdx+0x18]
 reg:r13
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r13, rdx
 ins:cmp r13, rdx
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add rdx, 0x10
 ins:add rdx, 0x10
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included add eax, eax
 ins:add eax, eax
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included not ecx
 ins:not ecx
 reg:ecx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and esi, ecx
 ins:and esi, ecx
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13+0x8]
 ins:mov rax, qword ptr [r13+0x8]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov r9, r12
 ins:mov r9, r12
 reg:r9
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea r12, ptr [r13+rax*1]
 ins:lea r12, ptr [r13+rax*1]
 reg:r12
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included sub rbx, r14
 ins:sub rbx, r14
 reg:rbx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [r12]
 ins:cmp rax, qword ptr [r12]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13+0x10]
 ins:mov rax, qword ptr [r13+0x10]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r13+0x18]
 ins:mov rdx, qword ptr [r13+0x18]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r13, qword ptr [rax+0x18]
 ins:cmp r13, qword ptr [rax+0x18]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp r13, qword ptr [rdx+0x10]
 ins:cmp r13, qword ptr [rdx+0x10]
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp qword ptr [r13+0x8], 0x3ff
 ins:cmp qword ptr [r13+0x8], 0x3ff
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [r13+0x8], 0x3ff
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r13+0x20]
 ins:mov rdx, qword ptr [r13+0x20]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f
 ins:cmp rbx, 0x1f
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f
 ins:cmp rbx, 0x1f
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included or qword ptr [r12+0x8], 0x1
 ins:or qword ptr [r12+0x8], 0x1
 reg:rflags
 COMP2MEM: inst or qword ptr [r12+0x8], 0x1
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rbp, 0x701920
 ins:cmp rbp, 0x701920
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x3066cf]
 ins:mov rbx, qword ptr [rip+0x3066cf]
 reg:rbx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe688]
 ins:mov rax, qword ptr [rip+0x2fe688]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included shl rax, 0x3
 ins:shl rax, 0x3
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, esi
 ins:cmp eax, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi+0x1]
 ins:lea eax, ptr [rdi+0x1]
 reg:eax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 ins:cmp edi, 0x1
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp+0x864]
 ins:mov esi, dword ptr [rbp+0x864]
 reg:esi
 Exe _int_malloc
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe _int_malloc
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp+0x58]
 ins:mov rdx, qword ptr [rbp+0x58]
 reg:rdx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included lea rcx, ptr [r14+0x20]
 ins:lea rcx, ptr [r14+0x20]
 reg:rcx
 Exe _int_malloc
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff8
 ins:and rax, 0xfffffffffffffff8
 reg:rax
 Exe _int_malloc
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 Exe _int_malloc
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3066ae]
 ins:mov rax, qword ptr [rip+0x3066ae]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd188
 ins:mov edi, 0x4cd188
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306676]
 ins:mov rax, qword ptr [rip+0x306676]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd1b0
 ins:mov edi, 0x4cd1b0
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306686]
 ins:mov rax, qword ptr [rip+0x306686]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd1d0
 ins:mov edi, 0x4cd1d0
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306646]
 ins:mov rax, qword ptr [rip+0x306646]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd1f8
 ins:mov edi, 0x4cd1f8
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30663e]
 ins:mov rax, qword ptr [rip+0x30663e]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd220
 ins:mov edi, 0x4cd220
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3065f6]
 ins:mov rax, qword ptr [rip+0x3065f6]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3065ef]
 ins:mov rdx, qword ptr [rip+0x3065ef]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306602]
 ins:mov rax, qword ptr [rip+0x306602]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3065fb]
 ins:mov rdx, qword ptr [rip+0x3065fb]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3065d6]
 ins:mov rax, qword ptr [rip+0x3065d6]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3065cf]
 ins:mov rdx, qword ptr [rip+0x3065cf]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x1000
 ins:add rax, 0x1000
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe main
 Exe putchar
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe putchar
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2d3ff8]
 ins:mov rbx, qword ptr [rip+0x2d3ff8]
 reg:rbx
 Exe putchar
 INSTSELECTOR: instruction to be included mov r8d, edi
 ins:mov r8d, edi
 reg:r8d
 Exe putchar
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe putchar
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe putchar
 INSTSELECTOR: instruction to be included and eax, 0x8000
 ins:and eax, 0x8000
 reg:eax
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x88]
 ins:mov rdx, qword ptr [rbx+0x88]
 reg:rdx
 Exe putchar
 INSTSELECTOR: instruction to be included mov r9, qword ptr fs:[0x10]
 ins:mov r9, qword ptr fs:[0x10]
 reg:r9
 Exe putchar
 INSTSELECTOR: instruction to be included cmp r9, qword ptr [rdx+0x8]
 ins:cmp r9, qword ptr [rdx+0x8]
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe putchar
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2dbf1b], 0x0
 ins:cmp dword ptr [rip+0x2dbf1b], 0x0
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rdx], esi
 ins:cmpxchg dword ptr [rdx], esi
 reg:eax
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x88]
 ins:mov rax, qword ptr [rbx+0x88]
 reg:rax
 Exe putchar
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x88]
 ins:mov rdx, qword ptr [rbx+0x88]
 reg:rdx
 Exe putchar
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2d3f97]
 ins:mov rdi, qword ptr [rip+0x2d3f97]
 reg:rdi
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included add dword ptr [rdx+0x4], 0x1
 ins:add dword ptr [rdx+0x4], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rdx+0x4], 0x1
 Exe putchar
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x28]
 ins:mov rdx, qword ptr [rdi+0x28]
 reg:rdx
 Exe putchar
 INSTSELECTOR: instruction to be included cmp rdx, qword ptr [rdi+0x30]
 ins:cmp rdx, qword ptr [rdi+0x30]
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+0x1]
 ins:lea rax, ptr [rdx+0x1]
 reg:rax
 Exe putchar
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included movzx edx, r8b
 ins:movzx edx, r8b
 reg:edx
 Exe putchar
 INSTSELECTOR: instruction to be included test dword ptr [rbx], 0x8000
 ins:test dword ptr [rbx], 0x8000
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included movzx esi, r8b
 ins:movzx esi, r8b
 reg:esi
 Exe putchar
 Exe __overflow
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __overflow
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 ins:sub rsp, 0x10
 reg:rsp
 Exe __overflow
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0xc0]
 ins:mov eax, dword ptr [rdi+0xc0]
 reg:eax
 Exe __overflow
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __overflow
 Exe __overflow
 Exe __overflow
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdi+0xd8]
 ins:mov rbx, qword ptr [rdi+0xd8]
 reg:rbx
 Exe __overflow
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe __overflow
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe __overflow
 INSTSELECTOR: instruction to be included mov rdx, rbx
 ins:mov rdx, rbx
 reg:rdx
 Exe __overflow
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe __overflow
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe __overflow
 Exe __overflow
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x18]
 ins:mov rax, qword ptr [rbx+0x18]
 reg:rax
 Exe __overflow
 INSTSELECTOR: instruction to be included add rsp, 0x10
 ins:add rsp, 0x10
 reg:rsp
 Exe __overflow
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdi]
 ins:mov edi, dword ptr [rdi]
 reg:edi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test dil, 0x8
 ins:test dil, 0x8
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test edi, 0x800
 ins:test edi, 0x800
 reg:rflags
 NORMAL FLAG REG: inst test edi, 0x800
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x20]
 ins:mov rsi, qword ptr [rbx+0x20]
 reg:rsi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x20], 0x0
 ins:cmp qword ptr [rbx+0x20], 0x0
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x8]
 ins:mov rsi, qword ptr [rbx+0x8]
 reg:rsi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test edi, 0x100
 ins:test edi, 0x100
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x40]
 ins:mov rax, qword ptr [rbx+0x40]
 reg:rax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_file_overflow
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included cmp qword ptr [rdi+0x38], 0x0
 ins:cmp qword ptr [rdi+0x38], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rdi+0x38], 0x0
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi]
 ins:mov eax, dword ptr [rdi]
 reg:eax
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0xd8]
 ins:mov rbp, qword ptr [rbx+0xd8]
 reg:rbp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_doallocbuf
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included sub rsp, 0x90
 ins:sub rsp, 0x90
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0x70]
 ins:mov eax, dword ptr [rdi+0x70]
 reg:eax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0xd8]
 ins:mov rbp, qword ptr [rdi+0xd8]
 reg:rbp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_file_doallocate
 Exe _IO_file_stat
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe _IO_file_stat
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rdi+0x70]
 ins:mov esi, dword ptr [rdi+0x70]
 reg:esi
 Exe _IO_file_stat
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe _IO_file_stat
 Exe __fxstat64
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 ins:cmp edi, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp edi, 0x1
 Exe __fxstat64
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe __fxstat64
 Exe __fxstat64
 INSTSELECTOR: instruction to be included movsxd rdi, eax
 ins:movsxd rdi, eax
 reg:rdi
 Exe __fxstat64
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe __fxstat64
 INSTSELECTOR: instruction to be included mov eax, 0x5
 ins:mov eax, 0x5
 reg:eax
 Exe __fxstat64
 Exe __fxstat64
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff000
 ins:cmp rax, 0xfffffffffffff000
 reg:rflags
 Exe __fxstat64
 Exe __fxstat64
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x18]
 ins:mov eax, dword ptr [rsp+0x18]
 reg:eax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included and eax, 0xf000
 ins:and eax, 0xf000
 reg:eax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included cmp eax, 0x2000
 ins:cmp eax, 0x2000
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsp+0x38]
 ins:mov rbp, qword ptr [rsp+0x38]
 reg:rbp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x1]
 ins:lea rax, ptr [rbp-0x1]
 reg:rax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included cmp rax, 0x1ffe
 ins:cmp rax, 0x1ffe
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+0xfff]
 ins:lea rsi, ptr [rbp+0xfff]
 reg:rsi
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included and rsi, 0xfffffffffffff000
 ins:and rsi, 0xfffffffffffff000
 reg:rsi
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov r8d, 0xffffffff
 ins:mov r8d, 0xffffffff
 reg:r8d
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov ecx, 0x22
 ins:mov ecx, 0x22
 reg:ecx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov edx, 0x3
 ins:mov edx, 0x3
 reg:edx
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included cmp rax, 0xffffffffffffffff
 ins:cmp rax, 0xffffffffffffffff
 reg:rflags
 Exe _IO_file_doallocate
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+rbp*1]
 ins:lea rdx, ptr [rax+rbp*1]
 reg:rdx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_file_doallocate
 Exe _IO_setb
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_setb
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x38]
 ins:mov rdi, qword ptr [rdi+0x38]
 reg:rdi
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_setb
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe _IO_setb
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _IO_setb
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe _IO_setb
 INSTSELECTOR: instruction to be included and edx, 0xfffffffe
 ins:and edx, 0xfffffffe
 reg:edx
 Exe _IO_setb
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included cmovz edx, eax
 ins:cmovz edx, eax
 reg:edx
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_setb
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe _IO_setb
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe _IO_setb
 INSTSELECTOR: instruction to be included and edx, 0xfffffffe
 ins:and edx, 0xfffffffe
 reg:edx
 Exe _IO_setb
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included cmovz edx, eax
 ins:cmovz edx, eax
 reg:edx
 Exe _IO_setb
 Exe _IO_setb
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_setb
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_setb
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included add rsp, 0x90
 ins:add rsp, 0x90
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_file_doallocate
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_file_doallocate
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x38]
 ins:mov rdi, qword ptr [rbx+0x38]
 reg:rdi
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x84]
 ins:lea r12, ptr [rbx+0x84]
 reg:r12
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x83]
 ins:lea rbp, ptr [rbx+0x83]
 reg:rbp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe _IO_doallocbuf
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_doallocbuf
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_doallocbuf
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x38]
 ins:mov rsi, qword ptr [rbx+0x38]
 reg:rsi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbx]
 ins:mov edi, dword ptr [rbx]
 reg:edi
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test edi, 0x100
 ins:test edi, 0x100
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x40]
 ins:mov rax, qword ptr [rbx+0x40]
 reg:rax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbx+0xc0]
 ins:mov ecx, dword ptr [rbx+0xc0]
 reg:ecx
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov eax, edi
 ins:mov eax, edi
 reg:eax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included or ah, 0x8
 ins:or ah, 0x8
 reg:ah
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included and edi, 0x202
 ins:and edi, 0x202
 reg:edi
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp ebp, 0xffffffff
 ins:cmp ebp, 0xffffffff
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x40], rdx
 ins:cmp qword ptr [rbx+0x40], rdx
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+0x1]
 ins:lea rax, ptr [rdx+0x1]
 reg:rax
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test ah, 0x2
 ins:test ah, 0x2
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp ebp, 0xa
 ins:cmp ebp, 0xa
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included movzx eax, bpl
 ins:movzx eax, bpl
 reg:eax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included movzx eax, bpl
 ins:movzx eax, bpl
 reg:eax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_file_overflow
 Exe putchar
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included test dword ptr [rbx], 0x8000
 ins:test dword ptr [rbx], 0x8000
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x88]
 ins:mov rsi, qword ptr [rbx+0x88]
 reg:rsi
 Exe putchar
 INSTSELECTOR: instruction to be included sub dword ptr [rsi+0x4], 0x1
 ins:sub dword ptr [rsi+0x4], 0x1
 reg:rflags
 Exe putchar
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2dbeaa], 0x0
 ins:cmp dword ptr [rip+0x2dbeaa], 0x0
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included dec dword ptr [rsi]
 ins:dec dword ptr [rsi]
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe putchar
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe putchar
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd244
 ins:mov edi, 0x4cd244
 reg:edi
 Exe main
 Exe _IO_puts
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe _IO_puts
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2d4317]
 ins:mov rbx, qword ptr [rip+0x2d4317]
 reg:rbx
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_puts
 INSTSELECTOR: instruction to be included and eax, 0x8000
 ins:and eax, 0x8000
 reg:eax
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbx+0x88]
 ins:mov r8, qword ptr [rbx+0x88]
 reg:r8
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdx, qword ptr fs:[0x10]
 ins:mov rdx, qword ptr fs:[0x10]
 reg:rdx
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp rdx, qword ptr [r8+0x8]
 ins:cmp rdx, qword ptr [r8+0x8]
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2dc23a], 0x0
 ins:cmp dword ptr [rip+0x2dc23a], 0x0
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [r8], esi
 ins:cmpxchg dword ptr [r8], esi
 reg:eax
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x88]
 ins:mov rax, qword ptr [rbx+0x88]
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbx+0x88]
 ins:mov r8, qword ptr [rbx+0x88]
 reg:r8
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2d42b4]
 ins:mov rdi, qword ptr [rip+0x2d42b4]
 reg:rdi
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included add dword ptr [r8+0x4], 0x1
 ins:add dword ptr [r8+0x4], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [r8+0x4], 0x1
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0xc0]
 ins:mov eax, dword ptr [rdi+0xc0]
 reg:eax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0xd8]
 ins:mov r13, qword ptr [rdi+0xd8]
 reg:r13
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r8d, 0x4ebfa8
 ins:mov r8d, 0x4ebfa8
 reg:r8d
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub r8, 0x4eb780
 ins:sub r8, 0x4eb780
 reg:r8
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp r8, rax
 ins:cmp r8, rax
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov ebp, 0xffffffff
 ins:mov ebp, 0xffffffff
 reg:ebp
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0xd8]
 ins:mov r13, qword ptr [rdi+0xd8]
 reg:r13
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov r8d, 0x4ebfa8
 ins:mov r8d, 0x4ebfa8
 reg:r8d
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub r8, 0x4eb780
 ins:sub r8, 0x4eb780
 reg:r8
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp r8, rax
 ins:cmp r8, rax
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe _IO_puts
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi]
 ins:mov eax, dword ptr [rdi]
 reg:eax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r13, rsi
 ins:mov r13, rsi
 reg:r13
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included and eax, 0xa00
 ins:and eax, 0xa00
 reg:eax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmp eax, 0xa00
 ins:cmp eax, 0xa00
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x30]
 ins:mov rdx, qword ptr [rdi+0x30]
 reg:rdx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x28]
 ins:mov rdi, qword ptr [rdi+0x28]
 reg:rdi
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmp rdx, rdi
 ins:cmp rdx, rdi
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rdx, rdi
 ins:sub rdx, rdi
 reg:rdx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included xor r14d, r14d
 ins:xor r14d, r14d
 reg:r14d
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r12, rbp
 ins:mov r12, rbp
 reg:r12
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmp rdx, rbp
 ins:cmp rdx, rbp
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rbp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmovnbe rdx, rbp
 ins:cmovnbe rdx, rbp
 reg:rdx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r12, rdx
 ins:mov r12, rdx
 reg:r12
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included add r13, r12
 ins:add r13, r12
 reg:r13
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+r12*1]
 ins:lea rax, ptr [r14+r12*1]
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0xd8]
 ins:mov r15, qword ptr [rbx+0xd8]
 reg:r15
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r14d, 0x4ebfa8
 ins:mov r14d, 0x4ebfa8
 reg:r14d
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub r14, 0x4eb780
 ins:sub r14, 0x4eb780
 reg:r14
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmp r14, rax
 ins:cmp r14, rax
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 ins:mov esi, 0xffffffff
 reg:esi
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _IO_new_file_xsputn
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp rbp, rax
 ins:cmp rbp, rax
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2d4253]
 ins:mov rdi, qword ptr [rip+0x2d4253]
 reg:rdi
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x28]
 ins:mov rax, qword ptr [rdi+0x28]
 reg:rax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rdi+0x30]
 ins:cmp rax, qword ptr [rdi+0x30]
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_puts
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov eax, 0x7fffffff
 ins:mov eax, 0x7fffffff
 reg:eax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp rbp, 0x7fffffff
 ins:cmp rbp, 0x7fffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp rbp, 0x7fffffff
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmovnbe rbp, rax
 ins:cmovnbe rbp, rax
 reg:rbp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included test dword ptr [rbx], 0x8000
 ins:test dword ptr [rbx], 0x8000
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x88]
 ins:mov rdx, qword ptr [rbx+0x88]
 reg:rdx
 Exe _IO_puts
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0x4], 0x1
 ins:sub dword ptr [rdx+0x4], 0x1
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2dc15a], 0x0
 ins:cmp dword ptr [rip+0x2dc15a], 0x0
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdx]
 ins:lock dec dword ptr [rdx]
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included dec dword ptr [rdx]
 ins:dec dword ptr [rdx]
 reg:rflags
 Exe _IO_puts
 Exe _IO_puts
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included mov eax, ebp
 ins:mov eax, ebp
 reg:eax
 Exe _IO_puts
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_puts
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_puts
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_puts
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30656e]
 ins:mov rax, qword ptr [rip+0x30656e]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd260
 ins:mov edi, 0x4cd260
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe __printf
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe __printf
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 NORMAL FLAG REG: inst test al, al
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe __printf
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x8]
 ins:lea rdx, ptr [rsp+0x8]
 reg:rdx
 Exe __printf
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2d4c8e]
 ins:mov rdi, qword ptr [rip+0x2d4c8e]
 reg:rdi
 Exe __printf
 Exe __printf
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe __printf
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x8]
 ins:lea rdx, ptr [rsp+0x8]
 reg:rdx
 Exe __printf
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2d4c8e]
 ins:mov rdi, qword ptr [rip+0x2d4c8e]
 reg:rdi
 Exe __printf
 Exe __printf
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe __printf
 Exe __printf
 Exe __printf
 Exe __printf
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r15, rdx
 ins:mov r15, rdx
 reg:r15
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r14, rdi
 ins:mov r14, rdi
 reg:r14
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rsp, 0x5a8
 ins:sub rsp, 0x5a8
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffb0
 ins:mov rax, 0xffffffffffffffb0
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr fs:[rax]
 ins:mov eax, dword ptr fs:[rax]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0xc0]
 ins:mov eax, dword ptr [rdi+0xc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r14]
 ins:mov r12d, dword ptr [r14]
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12b, 0x8
 ins:test r12b, 0x8
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0xffffffff
 ins:mov eax, 0xffffffff
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r14]
 ins:mov r12d, dword ptr [r14]
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12b, 0x8
 ins:test r12b, 0x8
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12b, 0x2
 ins:test r12b, 0x2
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15]
 ins:mov rax, qword ptr [r15]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x25
 ins:mov esi, 0x25
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15+0x8]
 ins:mov rax, qword ptr [r15+0x8]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15+0x10]
 ins:mov rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe strchrnul
 INSTSELECTOR: instruction to be included movd xmm1, esi
 ins:movd xmm1, esi
 reg:xmm1
 Exe strchrnul
 INSTSELECTOR: instruction to be included mov rcx, rdi
 ins:mov rcx, rdi
 reg:rcx
 Exe strchrnul
 INSTSELECTOR: instruction to be included punpcklbw xmm1, xmm1
 ins:punpcklbw xmm1, xmm1
 reg:xmm1
 Exe strchrnul
 INSTSELECTOR: instruction to be included and rdi, 0xfffffffffffffff0
 ins:and rdi, 0xfffffffffffffff0
 reg:rdi
 Exe strchrnul
 INSTSELECTOR: instruction to be included pxor xmm2, xmm2
 ins:pxor xmm2, xmm2
 reg:xmm2
 Exe strchrnul
 INSTSELECTOR: instruction to be included punpcklbw xmm1, xmm1
 ins:punpcklbw xmm1, xmm1
 reg:xmm1
 Exe strchrnul
 INSTSELECTOR: instruction to be included or esi, 0xffffffff
 ins:or esi, 0xffffffff
 reg:esi
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included pshufd xmm1, xmm1, 0x0
 ins:pshufd xmm1, xmm1, 0x0
 reg:xmm1
 Exe strchrnul
 INSTSELECTOR: instruction to be included sub rcx, rdi
 ins:sub rcx, rdi
 reg:rcx
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included shl esi, cl
 ins:shl esi, cl
 reg:esi
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strchrnul
 INSTSELECTOR: instruction to be included or ecx, edx
 ins:or ecx, edx
 reg:ecx
 Exe strchrnul
 INSTSELECTOR: instruction to be included and ecx, esi
 ins:and ecx, esi
 reg:ecx
 Exe strchrnul
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strchrnul
 INSTSELECTOR: instruction to be included or ecx, edx
 ins:or ecx, edx
 reg:ecx
 Exe strchrnul
 Exe strchrnul
 INSTSELECTOR: instruction to be included bsf edx, ecx
 ins:bsf edx, ecx
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strchrnul
 Exe strchrnul
 INSTSELECTOR: instruction to be included bsf edx, ecx
 ins:bsf edx, ecx
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strchrnul
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12d, 0x8000
 ins:test r12d, 0x8000
 reg:rflags
 NORMAL FLAG REG: inst test r12d, 0x8000
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0x40d050
 ins:mov eax, 0x40d050
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x440]
 ins:lea rdi, ptr [rbp-0x440]
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x40e560
 ins:mov esi, 0x40e560
 reg:esi
 Exe _IO_vfprintf_internal
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x2f8]
 ins:mov rax, qword ptr fs:[0x2f8]
 reg:rax
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included mov edx, dword ptr fs:[0x308]
 ins:mov edx, dword ptr fs:[0x308]
 reg:edx
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included and eax, 0x2
 ins:and eax, 0x2
 reg:eax
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _pthread_cleanup_push_defer
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 Exe _pthread_cleanup_push_defer
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r14]
 ins:mov r12d, dword ptr [r14]
 reg:r12d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and r12d, 0x8000
 ins:and r12d, 0x8000
 reg:r12d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r14+0x88]
 ins:mov rdx, qword ptr [r14+0x88]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r10, qword ptr fs:[0x10]
 ins:mov r10, qword ptr fs:[0x10]
 reg:r10
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r10, qword ptr [rdx+0x8]
 ins:cmp r10, qword ptr [rdx+0x8]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2a0e94], 0x0
 ins:cmp dword ptr [rip+0x2a0e94], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rdx], esi
 ins:cmpxchg dword ptr [rdx], esi
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x88]
 ins:mov rax, qword ptr [r14+0x88]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r14+0x88]
 ins:mov rdx, qword ptr [r14+0x88]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add dword ptr [rdx+0x4], 0x1
 ins:add dword ptr [rdx+0x4], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rdx+0x4], 0x1
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r13, qword ptr [r14+0xd8]
 ins:mov r13, qword ptr [r14+0xd8]
 reg:r13
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub qword ptr [rbp-0x4c8], 0x4eb780
 ins:sub qword ptr [rbp-0x4c8], 0x4eb780
 reg:rflags
 COMP2MEM: inst sub qword ptr [rbp-0x4c8], 0x4eb780
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x4c8], rax
 ins:cmp qword ptr [rbp-0x4c8], rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbp-0x4e0]
 ins:mov r12, qword ptr [rbp-0x4e0]
 reg:r12
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub r12, rbx
 ins:sub r12, rbx
 reg:r12
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r12, rax
 ins:cmp r12, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp r12, rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x4e8]
 ins:mov rdi, qword ptr [rbp-0x4e8]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r12, 0x7fffffff
 ins:cmp r12, 0x7fffffff
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2a0f74], 0x0
 ins:cmp qword ptr [rip+0x2a0f74], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2a0f6e], 0x0
 ins:cmp qword ptr [rip+0x2a0f6e], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x2a1080], 0x0
 ins:cmp qword ptr [rip+0x2a1080], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea r13, ptr [rbp-0x38]
 ins:lea r13, ptr [rbp-0x38]
 reg:r13
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x1]
 ins:movzx eax, byte ptr [rax+0x1]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, 0x469990
 ins:mov edx, 0x469990
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x5a
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x4e0fc0]
 ins:movzx eax, byte ptr [rax+0x4e0fc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax*8+0x4e0ec0]
 ins:mov rdx, qword ptr [rax*8+0x4e0ec0]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x1]
 ins:movzx eax, byte ptr [rax+0x1]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x4e0fc0]
 ins:movzx eax, byte ptr [rax+0x4e0fc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax*8+0x4e09c0]
 ins:mov rdx, qword ptr [rax*8+0x4e09c0]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x528], 0x0
 ins:cmp dword ptr [rbp-0x528], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x528], 0x0
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x30
 ins:cmp edx, 0x30
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x8
 ins:add edx, 0x8
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r10d, r10d
 ins:xor r10d, r10d
 reg:r10d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x538], 0x0
 ins:cmp dword ptr [rbp-0x538], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x558], 0x0
 ins:cmp qword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x508], 0x58
 ins:cmp byte ptr [rbp-0x508], 0x58
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rbp-0x508], 0x58
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbp-0x54c]
 ins:mov edx, dword ptr [rbp-0x54c]
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x558]
 ins:mov rdi, qword ptr [rbp-0x558]
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included setz cl
 ins:setz cl
 reg:cl
 Exe _IO_vfprintf_internal
 Exe _itoa_word
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov r8d, 0x4e0820
 ins:mov r8d, 0x4e0820
 reg:r8d
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov eax, 0x4e07e0
 ins:mov eax, 0x4e07e0
 reg:eax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included cmovz r8, rax
 ins:cmovz r8, rax
 reg:r8
 Exe _itoa_word
 INSTSELECTOR: instruction to be included cmp edx, 0xa
 ins:cmp edx, 0xa
 reg:rflags
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included cmp edx, 0x10
 ins:cmp edx, 0x10
 reg:rflags
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included cmp edx, 0x8
 ins:cmp edx, 0x8
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0x8
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rcx, 0xcccccccccccccccd
 ins:mov rcx, 0xcccccccccccccccd
 reg:rcx
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included sub rsi, 0x1
 ins:sub rsi, 0x1
 reg:rsi
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mul rcx
 ins:mul rcx
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included shr rdx, 0x3
 ins:shr rdx, 0x3
 reg:rdx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rdx*4]
 ins:lea rax, ptr [rdx+rdx*4]
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included sub rdi, rax
 ins:sub rdi, rax
 reg:rdi
 Exe _itoa_word
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r8+rdi*1]
 ins:movzx eax, byte ptr [r8+rdi*1]
 reg:eax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe _itoa_word
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included sub rsi, 0x1
 ins:sub rsi, 0x1
 reg:rsi
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mul rcx
 ins:mul rcx
 reg:rdx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included shr rdx, 0x3
 ins:shr rdx, 0x3
 reg:rdx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+rdx*4]
 ins:lea rax, ptr [rdx+rdx*4]
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included sub rdi, rax
 ins:sub rdi, rax
 reg:rdi
 Exe _itoa_word
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _itoa_word
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r8+rdi*1]
 ins:movzx eax, byte ptr [r8+rdi*1]
 reg:eax
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe _itoa_word
 Exe _itoa_word
 Exe _itoa_word
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe _itoa_word
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x510], 0x0
 ins:cmp qword ptr [rbp-0x510], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbp-0x510], 0x0
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x550]
 ins:mov r10d, dword ptr [rbp-0x550]
 reg:r10d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x54c], 0xa
 ins:cmp dword ptr [rbp-0x54c], 0xa
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp-0x538]
 ins:movsxd rax, dword ptr [rbp-0x538]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, qword ptr [rbp-0x528]
 ins:sub rdx, qword ptr [rbp-0x528]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x568], 0x0
 ins:cmp dword ptr [rbp-0x568], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x518]
 ins:mov rcx, qword ptr [rbp-0x518]
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x510]
 ins:mov rdx, qword ptr [rbp-0x510]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x54c], 0xa
 ins:cmp dword ptr [rbp-0x54c], 0xa
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp-0x538]
 ins:movsxd rax, dword ptr [rbp-0x538]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, qword ptr [rbp-0x528]
 ins:sub rdx, qword ptr [rbp-0x528]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x558], 0x0
 ins:cmp qword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x56c], 0x0
 ins:cmp dword ptr [rbp-0x56c], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x528]
 ins:mov rdi, qword ptr [rbp-0x528]
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp-0x538]
 ins:movsxd rax, dword ptr [rbp-0x538]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, qword ptr [rbp-0x528]
 ins:sub rdx, qword ptr [rbp-0x528]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x558], 0x0
 ins:cmp qword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x548], 0x0
 ins:cmp dword ptr [rbp-0x548], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x528]
 ins:mov rcx, qword ptr [rbp-0x528]
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rcx, r13
 ins:sub rcx, r13
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmovns rax, rcx
 ins:cmovns rax, rcx
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x520], 0x0
 ins:cmp dword ptr [rbp-0x520], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x520], 0x0
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x530]
 ins:mov ecx, dword ptr [rbp-0x530]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add ecx, dword ptr [rbp-0x568]
 ins:add ecx, dword ptr [rbp-0x568]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub ecx, dword ptr [rbp-0x538]
 ins:sub ecx, dword ptr [rbp-0x538]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x558], 0x0
 ins:cmp qword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x548], 0x0
 ins:cmp dword ptr [rbp-0x548], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x540]
 ins:mov eax, dword ptr [rbp-0x540]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, r10d
 ins:or eax, r10d
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, dword ptr [rbp-0x544]
 ins:or eax, dword ptr [rbp-0x544]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x1
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included adc ecx, 0xffffffff
 ins:adc ecx, 0xffffffff
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x4fa], 0x20
 ins:cmp byte ptr [rbp-0x4fa], 0x20
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x28]
 ins:mov rax, qword ptr [r14+0x28]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [r14+0x30]
 ins:cmp rax, qword ptr [r14+0x30]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd r11, ecx
 ins:movsxd r11, ecx
 reg:r11
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x20
 ins:mov esi, 0x20
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r11
 ins:mov rdx, r11
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x28]
 ins:mov rax, qword ptr [r14+0x28]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [r14+0x30]
 ins:cmp rax, qword ptr [r14+0x30]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x4d0], 0x7fffffff
 ins:cmp dword ptr [rbp-0x4d0], 0x7fffffff
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x544], 0x0
 ins:cmp dword ptr [rbp-0x544], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x28]
 ins:mov rax, qword ptr [r14+0x28]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [r14+0x30]
 ins:cmp rax, qword ptr [r14+0x30]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x540], 0x0
 ins:cmp dword ptr [rbp-0x540], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0x28]
 ins:mov rax, qword ptr [r14+0x28]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [r14+0x30]
 ins:cmp rax, qword ptr [r14+0x30]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x558], 0x0
 ins:cmp qword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x548], 0x0
 ins:cmp dword ptr [rbp-0x548], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x54c], 0x10
 ins:cmp dword ptr [rbp-0x54c], 0x10
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add ecx, dword ptr [rbp-0x550]
 ins:add ecx, dword ptr [rbp-0x550]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd r10, ecx
 ins:movsxd r10, ecx
 reg:r10
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x30
 ins:mov esi, 0x30
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r10
 ins:mov rdx, r10
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14+0xd8]
 ins:mov rax, qword ptr [r14+0xd8]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x4c8], rdx
 ins:cmp qword ptr [rbp-0x4c8], rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x528]
 ins:mov rsi, qword ptr [rbp-0x528]
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub r13, rsi
 ins:sub r13, rsi
 reg:r13
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x4d0]
 ins:mov ecx, dword ptr [rbp-0x4d0]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0x7fffffff
 ins:mov eax, 0x7fffffff
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add ecx, r13d
 ins:add ecx, r13d
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffb0
 ins:mov rax, 0xffffffffffffffb0
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x25
 ins:mov esi, 0x25
 reg:esi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x1]
 ins:lea r12, ptr [rax+0x1]
 reg:r12
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r13, qword ptr [r14+0xd8]
 ins:mov r13, qword ptr [r14+0xd8]
 reg:r13
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x4d0]
 ins:mov ecx, dword ptr [rbp-0x4d0]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x4c8], rdx
 ins:cmp qword ptr [rbp-0x4c8], rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included add r13, r12
 ins:add r13, r12
 reg:r13
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+r12*1]
 ins:lea rax, ptr [r14+r12*1]
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0xd8]
 ins:mov r15, qword ptr [rbx+0xd8]
 reg:r15
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov r14d, 0x4ebfa8
 ins:mov r14d, 0x4ebfa8
 reg:r14d
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub r14, 0x4eb780
 ins:sub r14, 0x4eb780
 reg:r14
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included cmp r14, rax
 ins:cmp r14, rax
 reg:rflags
 Exe _IO_new_file_xsputn
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 ins:mov esi, 0xffffffff
 reg:esi
 Exe _IO_new_file_xsputn
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_new_file_xsputn
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x4c0]
 ins:mov rdx, qword ptr [rbp-0x4c0]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x4d0]
 ins:mov ecx, dword ptr [rbp-0x4d0]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rsi, r12
 ins:sub rsi, r12
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x4f9], 0x0
 ins:cmp byte ptr [rbp-0x4f9], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x4f0]
 ins:mov rdi, qword ptr [rbp-0x4f0]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x7fffffff
 ins:mov esi, 0x7fffffff
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub esi, ecx
 ins:sub esi, ecx
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd rsi, esi
 ins:movsxd rsi, esi
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add eax, ecx
 ins:add eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx], 0x0
 ins:cmp byte ptr [rdx], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rdx], 0x0
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add dword ptr [rbp-0x500], 0x1
 ins:add dword ptr [rbp-0x500], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rbp-0x500], 0x1
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x4f9], 0x0
 ins:cmp byte ptr [rbp-0x4f9], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x4f0]
 ins:mov rdi, qword ptr [rbp-0x4f0]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x4e8]
 ins:mov rdi, qword ptr [rbp-0x4e8]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test dword ptr [r14], 0x8000
 ins:test dword ptr [r14], 0x8000
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r14+0x88]
 ins:mov rdx, qword ptr [r14+0x88]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0x4], 0x1
 ins:sub dword ptr [rdx+0x4], 0x1
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x4d4]
 ins:mov eax, dword ptr [rbp-0x4d4]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2a0d69], 0x0
 ins:cmp dword ptr [rip+0x2a0d69], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdx]
 ins:lock dec dword ptr [rdx]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included dec dword ptr [rdx]
 ins:dec dword ptr [rdx]
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x4d4]
 ins:mov eax, dword ptr [rbp-0x4d4]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x440]
 ins:lea rdi, ptr [rbp-0x440]
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _IO_vfprintf_internal
 Exe __pthread_cleanup_pop_restore
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x18]
 ins:mov rax, qword ptr [rdi+0x18]
 reg:rax
 Exe __pthread_cleanup_pop_restore
 Exe __pthread_cleanup_pop_restore
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rdi+0x10]
 ins:mov edx, dword ptr [rdi+0x10]
 reg:edx
 Exe __pthread_cleanup_pop_restore
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe __pthread_cleanup_pop_restore
 Exe __pthread_cleanup_pop_restore
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe __pthread_cleanup_pop_restore
 Exe __pthread_cleanup_pop_restore
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x4d0]
 ins:mov eax, dword ptr [rbp-0x4d0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_vfprintf_internal
 Exe __printf
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 ins:add rsp, 0xd8
 reg:rsp
 Exe __printf
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe535]
 ins:mov rax, qword ptr [rip+0x2fe535]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd278
 ins:mov edi, 0x4cd278
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x2fe534]
 ins:mov rdx, qword ptr [rip+0x2fe534]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe525]
 ins:mov rax, qword ptr [rip+0x2fe525]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe519]
 ins:mov rax, qword ptr [rip+0x2fe519]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd28b
 ins:mov edi, 0x4cd28b
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe4ed]
 ins:mov rax, qword ptr [rip+0x2fe4ed]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd28b
 ins:mov edi, 0x4cd28b
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r13, qword ptr [r14+0xd8]
 ins:mov r13, qword ptr [r14+0xd8]
 reg:r13
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x4d0]
 ins:mov ecx, dword ptr [rbp-0x4d0]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x4c8], rdx
 ins:cmp qword ptr [rbp-0x4c8], rdx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe4dc]
 ins:mov rax, qword ptr [rip+0x2fe4dc]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe main
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe main
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe main
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd2cb
 ins:mov edi, 0x4cd2cb
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x528], 0x0
 ins:cmp dword ptr [rbp-0x528], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x528], 0x0
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x30
 ins:cmp edx, 0x30
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x8
 ins:add edx, 0x8
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x550], 0x0
 ins:cmp dword ptr [rbp-0x550], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x30
 ins:cmp edx, 0x30
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x8
 ins:add edx, 0x8
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx rax, byte ptr [rax]
 ins:movsx rax, byte ptr [rax]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x558], 0x0
 ins:cmp dword ptr [rbp-0x558], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x30
 ins:cmp edx, 0x30
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x8
 ins:add edx, 0x8
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rax]
 ins:movsxd rax, dword ptr [rax]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included neg rax
 ins:neg rax
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r10d, 0x1
 ins:mov r10d, 0x1
 reg:r10d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x1000
 ins:mov esi, 0x1000
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd2e1
 ins:mov edi, 0x4cd2e1
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe main
 Exe putchar
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x88]
 ins:mov rsi, qword ptr [rbx+0x88]
 reg:rsi
 Exe putchar
 INSTSELECTOR: instruction to be included sub dword ptr [rsi+0x4], 0x1
 ins:sub dword ptr [rsi+0x4], 0x1
 reg:rflags
 Exe putchar
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2dbeaa], 0x0
 ins:cmp dword ptr [rip+0x2dbeaa], 0x0
 reg:rflags
 Exe putchar
 Exe putchar
 INSTSELECTOR: instruction to be included lock dec dword ptr [rsi]
 ins:lock dec dword ptr [rsi]
 reg:rflags
 Exe putchar
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3064bb]
 ins:mov rax, qword ptr [rip+0x3064bb]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov eax, 0x4cda9c
 ins:mov eax, 0x4cda9c
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 NORMAL FLAG REG: inst test rsi, rsi
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmovz rsi, rax
 ins:cmovz rsi, rax
 reg:rsi
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsi]
 ins:mov edx, dword ptr [rsi]
 reg:edx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and eax, 0x30000000
 ins:and eax, 0x30000000
 reg:eax
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmp eax, 0x10000000
 ins:cmp eax, 0x10000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and edx, 0x40000000
 ins:and edx, 0x40000000
 reg:edx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov eax, 0x5f
 ins:mov eax, 0x5f
 reg:eax
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsi]
 ins:mov eax, dword ptr [rsi]
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and eax, 0xf000fff
 ins:and eax, 0xf000fff
 reg:eax
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsi]
 ins:mov edx, dword ptr [rsi]
 reg:edx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included test edx, 0x40000000
 ins:test edx, 0x40000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included or eax, 0x10
 ins:or eax, 0x10
 reg:eax
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsi]
 ins:mov edx, dword ptr [rsi]
 reg:edx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and ecx, 0x30000000
 ins:and ecx, 0x30000000
 reg:ecx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x10000000
 ins:cmp ecx, 0x10000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x20000000
 ins:cmp ecx, 0x20000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and ecx, 0x30000000
 ins:and ecx, 0x30000000
 reg:ecx
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x10000000
 ins:cmp ecx, 0x10000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included cmp ecx, 0x20000000
 ins:cmp ecx, 0x20000000
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included or eax, 0x40
 ins:or eax, 0x40
 reg:eax
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsi]
 ins:mov eax, dword ptr [rsi]
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and eax, 0xfff000
 ins:and eax, 0xfff000
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included sar eax, 0xc
 ins:sar eax, 0xc
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included and edx, 0xc0000000
 ins:and edx, 0xc0000000
 reg:edx
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included or dword ptr [rdi+0x10], 0x80
 ins:or dword ptr [rdi+0x10], 0x80
 reg:rflags
 COMP2MEM: inst or dword ptr [rdi+0x10], 0x80
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe pthread_mutex_init
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe pthread_mutex_init
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x58], 0x0
 ins:cmp qword ptr [rbp-0x58], 0x0
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd2f8
 ins:mov edi, 0x4cd2f8
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306482]
 ins:mov rax, qword ptr [rip+0x306482]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 NORMAL FLAG REG: inst test rsi, rsi
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsi]
 ins:mov eax, dword ptr [rsi]
 reg:eax
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included sar eax, 0x1
 ins:sar eax, 0x1
 reg:eax
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsi]
 ins:mov eax, dword ptr [rsi]
 reg:eax
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included shl rax, 0x3f
 ins:shl rax, 0x3f
 reg:rax
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included sar rax, 0x3f
 ins:sar rax, 0x3f
 reg:rax
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 Exe __pthread_cond_init
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_cond_init
 Exe main
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x58], 0x0
 ins:cmp qword ptr [rbp-0x58], 0x0
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd2f8
 ins:mov edi, 0x4cd2f8
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306436]
 ins:mov rax, qword ptr [rip+0x306436]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306424]
 ins:mov rax, qword ptr [rip+0x306424]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306412]
 ins:mov rax, qword ptr [rip+0x306412]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3063fa]
 ins:mov rax, qword ptr [rip+0x3063fa]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3063d4]
 ins:mov rax, qword ptr [rip+0x3063d4]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe InitX
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe InitX
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov edi, 0x0
 ins:mov edi, 0x0
 reg:edi
 Exe InitX
 Exe srand48
 INSTSELECTOR: instruction to be included mov esi, 0x709750
 ins:mov esi, 0x709750
 reg:esi
 Exe srand48
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov edi, edi
 ins:mov edi, edi
 reg:edi
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov edx, 0xb
 ins:mov edx, 0xb
 reg:edx
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe srand48_r
 Exe srand48_r
 Exe srand48_r
 INSTSELECTOR: instruction to be included sar rax, 0x10
 ins:sar rax, 0x10
 reg:rax
 Exe srand48_r
 Exe srand48_r
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov eax, 0x330e
 ins:mov eax, 0x330e
 reg:eax
 Exe srand48_r
 Exe srand48_r
 INSTSELECTOR: instruction to be included mov rax, 0x5deece66d
 ins:mov rax, 0x5deece66d
 reg:rax
 Exe srand48_r
 Exe srand48_r
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe srand48_r
 Exe InitX
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305169]
 ins:mov rax, qword ptr [rip+0x305169]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x20], rax
 ins:cmp qword ptr [rbp-0x20], rax
 reg:rflags
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3051fb]
 ins:mov rdx, qword ptr [rip+0x3051fb]
 reg:rdx
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3050ac]
 ins:mov rax, qword ptr [rip+0x3050ac]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x20]
 ins:imul rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitX
 Exe InitX
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30517b]
 ins:mov rax, qword ptr [rip+0x30517b]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x18], rax
 ins:cmp qword ptr [rbp-0x18], rax
 reg:rflags
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305169]
 ins:mov rax, qword ptr [rip+0x305169]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x20], rax
 ins:cmp qword ptr [rbp-0x20], rax
 reg:rflags
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x28]
 ins:mov rdx, qword ptr [rbp-0x28]
 reg:rdx
 Exe InitX
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitX
 Exe drand48
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe drand48
 INSTSELECTOR: instruction to be included mov esi, 0x709750
 ins:mov esi, 0x709750
 reg:esi
 Exe drand48
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x8]
 ins:lea rdx, ptr [rsp+0x8]
 reg:rdx
 Exe drand48
 INSTSELECTOR: instruction to be included mov rdi, rsi
 ins:mov rdi, rsi
 reg:rdi
 Exe drand48
 Exe __erand48_r
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __erand48_r
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe __erand48_r
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __erand48_r
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe __erand48_r
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included cmp word ptr [rsi+0xe], 0x0
 ins:cmp word ptr [rsi+0xe], 0x0
 reg:rflags
 Exe __drand48_iterate
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x4]
 ins:movzx eax, word ptr [rdi+0x4]
 reg:eax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rdi]
 ins:movzx edx, word ptr [rdi]
 reg:edx
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included shl rax, 0x20
 ins:shl rax, 0x20
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included or rax, rdx
 ins:or rax, rdx
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rdi+0x2]
 ins:movzx edx, word ptr [rdi+0x2]
 reg:edx
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included shl edx, 0x10
 ins:shl edx, 0x10
 reg:edx
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included or rax, rdx
 ins:or rax, rdx
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rsi+0xc]
 ins:movzx edx, word ptr [rsi+0xc]
 reg:edx
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rsi+0x10]
 ins:imul rax, qword ptr [rsi+0x10]
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __drand48_iterate
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included shr rdx, 0x10
 ins:shr rdx, 0x10
 reg:rdx
 Exe __drand48_iterate
 Exe __drand48_iterate
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __drand48_iterate
 Exe __drand48_iterate
 Exe __erand48_r
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __erand48_r
 Exe __erand48_r
 INSTSELECTOR: instruction to be included movzx esi, word ptr [rbx+0x2]
 ins:movzx esi, word ptr [rbx+0x2]
 reg:esi
 Exe __erand48_r
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rbx+0x4]
 ins:movzx ecx, word ptr [rbx+0x4]
 reg:ecx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included shl esi, 0x14
 ins:shl esi, 0x14
 reg:esi
 Exe __erand48_r
 INSTSELECTOR: instruction to be included shr ax, 0xc
 ins:shr ax, 0xc
 reg:ax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included movzx eax, ax
 ins:movzx eax, ax
 reg:eax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included or eax, ecx
 ins:or eax, ecx
 reg:eax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rbx]
 ins:movzx ecx, word ptr [rbx]
 reg:ecx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included mov rax, 0x3ff0000000000000
 ins:mov rax, 0x3ff0000000000000
 reg:rax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included shl rdx, 0x20
 ins:shl rdx, 0x20
 reg:rdx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included or rax, rdx
 ins:or rax, rdx
 reg:rax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included or ecx, esi
 ins:or ecx, esi
 reg:ecx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included or rax, rcx
 ins:or rax, rcx
 reg:rax
 Exe __erand48_r
 Exe __erand48_r
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __erand48_r
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x8]
 ins:movsd xmm0, qword ptr [rsp+0x8]
 reg:xmm0
 Exe __erand48_r
 INSTSELECTOR: instruction to be included subsd xmm0, qword ptr [rip+0xa23a6]
 ins:subsd xmm0, qword ptr [rip+0xa23a6]
 reg:xmm0
 Exe __erand48_r
 Exe __erand48_r
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe __erand48_r
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __erand48_r
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __erand48_r
 Exe drand48
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x8]
 ins:movsd xmm0, qword ptr [rsp+0x8]
 reg:xmm0
 Exe drand48
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe drand48
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x28]
 ins:mov rdx, qword ptr [rbp-0x28]
 reg:rdx
 Exe InitX
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitX
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30517b]
 ins:mov rax, qword ptr [rip+0x30517b]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x18], rax
 ins:cmp qword ptr [rbp-0x18], rax
 reg:rflags
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe InitX
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305169]
 ins:mov rax, qword ptr [rip+0x305169]
 reg:rax
 Exe InitX
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x20], rax
 ins:cmp qword ptr [rbp-0x20], rax
 reg:rflags
 Exe InitX
 Exe InitX
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitX
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitX
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ffb45]
 ins:mov rax, qword ptr [rip+0x2ffb45]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3063b9]
 ins:mov rax, qword ptr [rip+0x3063b9]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ffb1c]
 ins:mov rax, qword ptr [rip+0x2ffb1c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd31a
 ins:mov edi, 0x4cd31a
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x306375]
 ins:mov rdx, qword ptr [rip+0x306375]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306356]
 ins:mov rax, qword ptr [rip+0x306356]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe InitU
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe InitU
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe InitU
 Exe InitU
 Exe InitU
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe InitU
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe InitU
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe InitU
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe InitU
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe InitU
 Exe InitU
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe InitU
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe InitU
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3050fa]
 ins:mov rax, qword ptr [rip+0x3050fa]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe InitU
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitU
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x20]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe InitU
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc96ac]
 ins:movsd xmm1, qword ptr [rip+0xc96ac]
 reg:xmm1
 Exe InitU
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe InitU
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe InitU
 Exe __cos_avx
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __cos_avx
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included sub rsp, 0x50
 ins:sub rsp, 0x50
 reg:rsp
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rsp+0x30]
 ins:mov ebx, dword ptr [rsp+0x30]
 reg:ebx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included and ah, 0x9f
 ins:and ah, 0x9f
 reg:ah
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, eax
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaccdc]
 ins:vmovsd xmm0, qword ptr [rip+0xaccdc]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included sar rax, 0x20
 ins:sar rax, 0x20
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included and eax, 0x7fffffff
 ins:and eax, 0x7fffffff
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3e3fffff
 ins:cmp eax, 0x3e3fffff
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3feb5fff
 ins:cmp eax, 0x3feb5fff
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test bpl, bpl
 ins:test bpl, bpl
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included add rsp, 0x50
 ins:add rsp, 0x50
 reg:rsp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __cos_avx
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe __cos_avx
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitU
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x20]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe InitU
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc965e]
 ins:movsd xmm1, qword ptr [rip+0xc965e]
 reg:xmm1
 Exe InitU
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe InitU
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe InitU
 Exe __sin_avx
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included sub rsp, 0x70
 ins:sub rsp, 0x70
 reg:rsp
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rsp+0x50]
 ins:mov ebx, dword ptr [rsp+0x50]
 reg:ebx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and ah, 0x9f
 ins:and ah, 0x9f
 reg:ah
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, eax
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rcx, rdx
 ins:mov rcx, rdx
 reg:rcx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included sar rcx, 0x20
 ins:sar rcx, 0x20
 reg:rcx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and eax, 0x7fffffff
 ins:and eax, 0x7fffffff
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3e4fffff
 ins:cmp eax, 0x3e4fffff
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3fcfffff
 ins:cmp eax, 0x3fcfffff
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test bpl, bpl
 ins:test bpl, bpl
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add rsp, 0x70
 ins:add rsp, 0x70
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __sin_avx
 Exe InitU
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc9645]
 ins:movsd xmm1, qword ptr [rip+0xc9645]
 reg:xmm1
 Exe InitU
 INSTSELECTOR: instruction to be included xorpd xmm0, xmm1
 ins:xorpd xmm0, xmm1
 reg:xmm0
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe InitU
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe InitU
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe InitU
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe InitU
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe InitU
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe InitU
 Exe InitU
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitU
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x400368fc
 ins:cmp eax, 0x400368fc
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaca03]
 ins:vmovsd xmm1, qword ptr [rip+0xaca03]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac993]
 ins:vmovsd xmm4, qword ptr [rip+0xac993]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac9df]
 ins:vmovsd xmm0, qword ptr [rip+0xac9df]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm0
 ins:vmovapd xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm1
 ins:vaddsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm5
 ins:vsubsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm5
 ins:vmovapd xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm5
 ins:vmulsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm0
 ins:vucomisd xmm4, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac9f9]
 ins:vmovsd xmm4, qword ptr [rip+0xac9f9]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xac911]
 ins:vmovsd xmm6, qword ptr [rip+0xac911]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm0
 ins:vmulsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm1
 ins:vmulsd xmm6, xmm6, xmm1
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac9f1]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac9f1]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm0
 ins:vmulsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac9f5]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac9f5]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm0
 ins:vmulsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac9f9]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac9f9]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm0
 ins:vmulsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac9fd]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac9fd]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm6
 ins:vsubsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm5
 ins:vmovapd xmm6, xmm5
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm0
 ins:vmulsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm5
 ins:vmovapd xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm1
 ins:vaddsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm4
 ins:vaddsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm3
 ins:vucomisd xmm6, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xac8d5]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xac8d5]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, qword ptr [rip+0xac91f]
 ins:vaddsd xmm6, xmm6, qword ptr [rip+0xac91f]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3feb5fff
 ins:cmp eax, 0x3feb5fff
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xaecdd]
 ins:vmovsd xmm10, qword ptr [rip+0xaecdd]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm10
 ins:vmovapd xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm2
 ins:vaddsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm2
 ins:vmovapd xmm6, xmm2
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xaebe9]
 ins:vmovsd xmm7, qword ptr [rip+0xaebe9]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaebe9]
 ins:vmovsd xmm8, qword ptr [rip+0xaebe9]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaebf9]
 ins:vmovsd xmm5, qword ptr [rip+0xaebf9]
 reg:xmm5
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm10
 ins:vsubsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm6
 ins:vmovapd xmm1, xmm6
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm6
 ins:vmovapd xmm3, xmm6
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm11, qword ptr [rax*8+0x4ceb00]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm6
 ins:vmulsd xmm1, xmm1, xmm6
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm1
 ins:vmulsd xmm3, xmm3, xmm1
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm4
 ins:vmulsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaeb95]
 ins:vmovsd xmm4, qword ptr [rip+0xaeb95]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm6
 ins:vaddsd xmm3, xmm3, xmm6
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xaeb95]
 ins:vmovsd xmm6, qword ptr [rip+0xaeb95]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm1
 ins:vmulsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm1
 ins:vmulsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add edx, 0x2
 ins:add edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm3
 ins:vmulsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm3, xmm3, qword ptr [rdx*8+0x4ceb00]
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm11
 ins:vaddsd xmm1, xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm3
 ins:vaddsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm9
 ins:vmovapd xmm3, xmm9
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm1
 ins:vaddsd xmm3, xmm3, xmm1
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm3
 ins:vsubsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xaeb56]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xaeb56]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm3
 ins:vaddsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x400368fc
 ins:cmp eax, 0x400368fc
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm13, qword ptr [rip+0xaeb9d]
 ins:vmovsd xmm13, qword ptr [rip+0xaeb9d]
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm2
 ins:vsubsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rip+0xaeb91]
 ins:vmovsd xmm11, qword ptr [rip+0xaeb91]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm11
 ins:vmovapd xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rip+0xae184]
 ins:vmovsd xmm12, qword ptr [rip+0xae184]
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm11
 ins:vsubsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae20b]
 ins:vmovsd xmm0, qword ptr [rip+0xae20b]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm12
 ins:vxorpd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xaea77]
 ins:vmovsd xmm7, qword ptr [rip+0xaea77]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm0
 ins:vmulsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm0
 ins:vmovapd xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaea6f]
 ins:vmovsd xmm8, qword ptr [rip+0xaea6f]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea esi, ptr [rdx+0x1]
 ins:lea esi, ptr [rdx+0x1]
 reg:esi
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaea6e]
 ins:vmovsd xmm4, qword ptr [rip+0xaea6e]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm10
 ins:vmovapd xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm10
 ins:vmulsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rsi, esi
 ins:movsxd rsi, esi
 reg:rsi
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaea60]
 ins:vmovsd xmm5, qword ptr [rip+0xaea60]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xaea4d]
 ins:vmovsd xmm6, qword ptr [rip+0xaea4d]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm8
 ins:vsubsd xmm1, xmm1, xmm8
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm1
 ins:vmulsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsi*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rsi*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm9, xmm9, qword ptr [rdx*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm10
 ins:vmovapd xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm9
 ins:vsubsd xmm1, xmm1, xmm9
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm14
 ins:vmovapd xmm9, xmm14
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm1
 ins:vaddsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm9
 ins:vsubsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xae9fc]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xae9fc]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm9
 ins:vucomisd xmm0, xmm9
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm9
 ins:vmovapd xmm2, xmm9
 reg:xmm2
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rip+0xaccd8]
 ins:vmovsd xmm12, qword ptr [rip+0xaccd8]
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xacbf4]
 ins:vmovsd xmm4, qword ptr [rip+0xacbf4]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm12
 ins:vaddsd xmm1, xmm1, xmm12
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xacbff]
 ins:vmovsd xmm7, qword ptr [rip+0xacbff]
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xacbff]
 ins:vmovsd xmm6, qword ptr [rip+0xacbff]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm12
 ins:vsubsd xmm1, xmm1, xmm12
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xacbc8]
 ins:vmovsd xmm1, qword ptr [rip+0xacbc8]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdx+0x1]
 ins:lea ecx, ptr [rdx+0x1]
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rcx, ecx
 ins:movsxd rcx, ecx
 reg:rcx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm0
 ins:vmovapd xmm11, xmm0
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm0
 ins:vmulsd xmm11, xmm11, xmm0
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm11
 ins:vmovapd xmm5, xmm11
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm11
 ins:vmulsd xmm10, xmm10, xmm11
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm4
 ins:vmulsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm1
 ins:vsubsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm5
 ins:vmulsd xmm10, xmm10, xmm5
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xacb9a]
 ins:vmovsd xmm5, qword ptr [rip+0xacb9a]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm0
 ins:vsubsd xmm8, xmm8, xmm0
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm11
 ins:vmovapd xmm0, xmm11
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm7
 ins:vmulsd xmm0, xmm0, xmm7
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm6
 ins:vsubsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm11
 ins:vmulsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm11
 ins:vmulsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm0
 ins:vsubsd xmm8, xmm8, xmm0
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm10
 ins:vsubsd xmm8, xmm8, xmm10
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm8
 ins:vaddsd xmm9, xmm9, xmm8
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, qword ptr [rip+0xacb61]
 ins:vmulsd xmm9, xmm9, qword ptr [rip+0xacb61]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm9, xmm0
 ins:vucomisd xmm9, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm3
 ins:vmovapd xmm2, xmm3
 reg:xmm2
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm3
 ins:vucomisd xmm5, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm1
 ins:vmovapd xmm10, xmm1
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm5
 ins:vmovapd xmm7, xmm5
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac4c1]
 ins:vmovsd xmm0, qword ptr [rip+0xac4c1]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm0
 ins:vmovapd xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac3ca]
 ins:vmovsd xmm0, qword ptr [rip+0xac3ca]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm4
 ins:vsubsd xmm7, xmm7, xmm4
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm7
 ins:vmovapd xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm7
 ins:vmovapd xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm4, qword ptr [rax*8+0x4ceb00]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included add edx, 0x2
 ins:add edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm8
 ins:vmulsd xmm6, xmm6, xmm8
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac388]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac388]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm0
 ins:vmulsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac38c]
 ins:vmovsd xmm0, qword ptr [rip+0xac38c]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm10
 ins:vaddsd xmm6, xmm6, xmm10
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac382]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac382]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm7
 ins:vaddsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm10
 ins:vmulsd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm6
 ins:vmulsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm6, xmm6, qword ptr [rdx*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm4, xmm4, qword ptr [rax*8+0x4ceb00]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xac35e]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xac35e]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm7
 ins:vsubsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm9
 ins:vmovapd xmm6, xmm9
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm4
 ins:vaddsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm3
 ins:vucomisd xmm6, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xac380]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xac380]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, qword ptr [rip+0xac39a]
 ins:vaddsd xmm6, xmm6, qword ptr [rip+0xac39a]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xac3c4]
 ins:vmovsd xmm10, qword ptr [rip+0xac3c4]
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm5
 ins:vmovapd xmm7, xmm5
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm7, xmm7, xmm10
 ins:vxorpd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm10, xmm10, xmm1
 ins:vxorpd xmm10, xmm10, xmm1
 reg:xmm10
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac4c1]
 ins:vmovsd xmm0, qword ptr [rip+0xac4c1]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm0
 ins:vmovapd xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac3ca]
 ins:vmovsd xmm0, qword ptr [rip+0xac3ca]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm4
 ins:vsubsd xmm7, xmm7, xmm4
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm7
 ins:vmovapd xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm7
 ins:vmovapd xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm4, qword ptr [rax*8+0x4ceb00]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included add edx, 0x2
 ins:add edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm8
 ins:vmulsd xmm6, xmm6, xmm8
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac388]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac388]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm0
 ins:vmulsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac38c]
 ins:vmovsd xmm0, qword ptr [rip+0xac38c]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm10
 ins:vaddsd xmm6, xmm6, xmm10
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac382]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac382]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm7
 ins:vaddsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm10
 ins:vmulsd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm6
 ins:vmulsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm6, xmm6, qword ptr [rdx*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm4, xmm4, qword ptr [rax*8+0x4ceb00]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xac35e]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xac35e]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm7
 ins:vsubsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm9
 ins:vmovapd xmm6, xmm9
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm4
 ins:vaddsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm3
 ins:vucomisd xmm6, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xac380]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xac380]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, qword ptr [rip+0xac39a]
 ins:vaddsd xmm6, xmm6, qword ptr [rip+0xac39a]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm5
 ins:vmovapd xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm5, xmm5, xmm5
 ins:vxorpd xmm5, xmm5, xmm5
 reg:xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm0
 ins:vmovapd xmm6, xmm0
 reg:xmm6
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm5
 ins:vucomisd xmm0, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf172]
 ins:vmovsd xmm0, qword ptr [rip+0xaf172]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm6
 ins:vmovapd xmm4, xmm6
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm0
 ins:vmovapd xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm6
 ins:vaddsd xmm3, xmm3, xmm6
 reg:xmm3
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm0
 ins:vsubsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm3
 ins:vsubsd xmm4, xmm4, xmm3
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm4
 ins:vmovapd xmm8, xmm4
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaf06f]
 ins:vmovsd xmm3, qword ptr [rip+0xaf06f]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm4
 ins:vmulsd xmm8, xmm8, xmm4
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe csloww1
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm4
 ins:vmovapd xmm11, xmm4
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rdx*8+0x4ceb00]
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe csloww1
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe csloww1
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, qword ptr [rip+0xaf033]
 ins:vsubsd xmm3, xmm3, qword ptr [rip+0xaf033]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm9
 ins:vmovapd xmm7, xmm9
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaf01f]
 ins:vmovsd xmm3, qword ptr [rip+0xaf01f]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm3
 ins:vaddsd xmm11, xmm11, xmm3
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm3
 ins:vaddsd xmm7, xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm3
 ins:vsubsd xmm11, xmm11, xmm3
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm3
 ins:vsubsd xmm7, xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm0
 ins:vmovapd xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm12
 ins:vmulsd xmm3, xmm3, xmm12
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm7
 ins:vsubsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm3, xmm3, qword ptr [rax*8+0x4ceb00]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm12
 ins:vaddsd xmm9, xmm9, xmm12
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm4
 ins:vmulsd xmm9, xmm9, xmm4
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm9
 ins:vaddsd xmm3, xmm3, xmm9
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm4
 ins:vmovapd xmm9, xmm4
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm11
 ins:vsubsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm1
 ins:vmulsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm1
 ins:vaddsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm7
 ins:vmulsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm11
 ins:vmulsd xmm7, xmm7, xmm11
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm9
 ins:vaddsd xmm3, xmm3, xmm9
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm4
 ins:vsubsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaefba]
 ins:vmovsd xmm4, qword ptr [rip+0xaefba]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xaefb5]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xaefb5]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xaefb0]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xaefb0]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm7
 ins:vmovapd xmm8, xmm7
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm10
 ins:vaddsd xmm8, xmm8, xmm10
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm8
 ins:vmovapd xmm0, xmm8
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm4
 ins:vsubsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm10
 ins:vmovapd xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaef08]
 ins:vmovsd xmm3, qword ptr [rip+0xaef08]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm6
 ins:vmovapd xmm4, xmm6
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm3
 ins:vmovapd xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaef70]
 ins:vmovsd xmm0, qword ptr [rip+0xaef70]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm4, xmm4, xmm0
 ins:vxorpd xmm4, xmm4, xmm0
 reg:xmm4
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm3
 ins:vsubsd xmm7, xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm7
 ins:vsubsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm4
 ins:vmovapd xmm8, xmm4
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaf06f]
 ins:vmovsd xmm3, qword ptr [rip+0xaf06f]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm4
 ins:vmulsd xmm8, xmm8, xmm4
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe csloww1
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm4
 ins:vmovapd xmm11, xmm4
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rdx*8+0x4ceb00]
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe csloww1
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe csloww1
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, qword ptr [rip+0xaf033]
 ins:vsubsd xmm3, xmm3, qword ptr [rip+0xaf033]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm9
 ins:vmovapd xmm7, xmm9
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaf01f]
 ins:vmovsd xmm3, qword ptr [rip+0xaf01f]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm3
 ins:vaddsd xmm11, xmm11, xmm3
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm3
 ins:vaddsd xmm7, xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm3
 ins:vsubsd xmm11, xmm11, xmm3
 reg:xmm11
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm3
 ins:vsubsd xmm7, xmm7, xmm3
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm0
 ins:vmovapd xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm12
 ins:vmulsd xmm3, xmm3, xmm12
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm7
 ins:vsubsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm3, xmm3, qword ptr [rax*8+0x4ceb00]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm12
 ins:vaddsd xmm9, xmm9, xmm12
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm4
 ins:vmulsd xmm9, xmm9, xmm4
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm9
 ins:vaddsd xmm3, xmm3, xmm9
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm4
 ins:vmovapd xmm9, xmm4
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm11
 ins:vsubsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm1
 ins:vmulsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm1
 ins:vaddsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm7
 ins:vmulsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm11
 ins:vmulsd xmm7, xmm7, xmm11
 reg:xmm7
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm9
 ins:vaddsd xmm3, xmm3, xmm9
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm4
 ins:vsubsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaefba]
 ins:vmovsd xmm4, qword ptr [rip+0xaefba]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xaefb5]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xaefb5]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xaefb0]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xaefb0]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm7
 ins:vmovapd xmm8, xmm7
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm10
 ins:vaddsd xmm8, xmm8, xmm10
 reg:xmm8
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm8
 ins:vmovapd xmm0, xmm8
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm4
 ins:vsubsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm10
 ins:vmovapd xmm4, xmm10
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm3
 ins:vaddsd xmm4, xmm4, xmm3
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm8
 ins:vmovapd xmm3, xmm8
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm0
 ins:vsubsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm4
 ins:vaddsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm5
 ins:vucomisd xmm3, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm3, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, qword ptr [rip+0xaef28]
 ins:vmulsd xmm3, xmm3, qword ptr [rip+0xaef28]
 reg:xmm3
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm5
 ins:vucomisd xmm2, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaef90]
 ins:vmovsd xmm4, qword ptr [rip+0xaef90]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm4
 ins:vaddsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm0
 ins:vucomisd xmm3, xmm0
 reg:rflags
 Exe csloww1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf05e]
 ins:vmovsd xmm1, qword ptr [rip+0xaf05e]
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe csloww1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, qword ptr [rip+0xac1ea]
 ins:vsubsd xmm6, xmm6, qword ptr [rip+0xac1ea]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rip+0xaeb5b]
 ins:vmovsd xmm12, qword ptr [rip+0xaeb5b]
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm11
 ins:vaddsd xmm1, xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm11
 ins:vsubsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm12
 ins:vaddsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xaea77]
 ins:vmovsd xmm7, qword ptr [rip+0xaea77]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm0
 ins:vmulsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm0
 ins:vmovapd xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaea6f]
 ins:vmovsd xmm8, qword ptr [rip+0xaea6f]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea esi, ptr [rdx+0x1]
 ins:lea esi, ptr [rdx+0x1]
 reg:esi
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaea6e]
 ins:vmovsd xmm4, qword ptr [rip+0xaea6e]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm10
 ins:vmovapd xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm10
 ins:vmulsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rsi, esi
 ins:movsxd rsi, esi
 reg:rsi
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaea60]
 ins:vmovsd xmm5, qword ptr [rip+0xaea60]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xaea4d]
 ins:vmovsd xmm6, qword ptr [rip+0xaea4d]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm8
 ins:vsubsd xmm1, xmm1, xmm8
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm1
 ins:vmulsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm1, qword ptr [rax*8+0x4ceb00]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsi*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rsi*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm9, xmm9, qword ptr [rdx*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm10
 ins:vmovapd xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm9
 ins:vsubsd xmm1, xmm1, xmm9
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm14
 ins:vmovapd xmm9, xmm14
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm1
 ins:vaddsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm9
 ins:vsubsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xae9fc]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xae9fc]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm9
 ins:vucomisd xmm0, xmm9
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm9
 ins:vmovapd xmm2, xmm9
 reg:xmm2
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac426]
 ins:vmovsd xmm1, qword ptr [rip+0xac426]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x419921fa
 ins:cmp eax, 0x419921fa
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac7e5]
 ins:vmovsd xmm0, qword ptr [rip+0xac7e5]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac7d5]
 ins:vmovsd xmm1, qword ptr [rip+0xac7d5]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm0
 ins:vmovapd xmm3, xmm0
 reg:xmm3
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac7eb]
 ins:vmovsd xmm0, qword ptr [rip+0xac7eb]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rsp+0x8]
 ins:mov r12, qword ptr [rsp+0x8]
 reg:r12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm1
 ins:vsubsd xmm3, xmm3, xmm1
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm2
 ins:vmovapd xmm1, xmm2
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included and r12d, 0x3
 ins:and r12d, 0x3
 reg:r12d
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac7c2]
 ins:vmovsd xmm0, qword ptr [rip+0xac7c2]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, qword ptr [rip+0xac7ae]
 ins:vmulsd xmm3, xmm3, qword ptr [rip+0xac7ae]
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm15, xmm1
 ins:vmovapd xmm15, xmm1
 reg:xmm15
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm15, xmm15, xmm3
 ins:vsubsd xmm15, xmm15, xmm3
 reg:xmm15
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm15
 ins:vsubsd xmm1, xmm1, xmm15
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm3
 ins:vsubsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rip+0xac817]
 ins:vmovsd xmm11, qword ptr [rip+0xac817]
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm2
 ins:vmulsd xmm11, xmm11, xmm2
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 ins:cmp r12d, 0x1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp r12d, 0x3
 ins:cmp r12d, 0x3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm15
 ins:vucomisd xmm3, xmm15
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xac866]
 ins:vmovsd xmm7, qword ptr [rip+0xac866]
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm15
 ins:vmovapd xmm13, xmm15
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac781]
 ins:vmovsd xmm4, qword ptr [rip+0xac781]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm15
 ins:vaddsd xmm7, xmm7, xmm15
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac77c]
 ins:vmovsd xmm1, qword ptr [rip+0xac77c]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xac78c]
 ins:vmovsd xmm6, qword ptr [rip+0xac78c]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm7
 ins:vmovapd xmm0, xmm7
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x10]
 ins:mov rdx, qword ptr [rsp+0x10]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac827]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac827]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xac75f]
 ins:vmovsd xmm7, qword ptr [rip+0xac75f]
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdx+0x1]
 ins:lea ecx, ptr [rdx+0x1]
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rcx, ecx
 ins:movsxd rcx, ecx
 reg:rcx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm13, xmm13, xmm0
 ins:vsubsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x8]
 ins:vmovsd xmm0, qword ptr [rsp+0x8]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm13
 ins:vaddsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm0
 ins:vmovapd xmm12, xmm0
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm12
 ins:vmovapd xmm5, xmm12
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm12
 ins:vmovapd xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm4
 ins:vmulsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm1
 ins:vsubsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm6
 ins:vsubsd xmm8, xmm8, xmm6
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm5
 ins:vmulsd xmm10, xmm10, xmm5
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm12
 ins:vmulsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xac6fd]
 ins:vmovsd xmm5, qword ptr [rip+0xac6fd]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm5
 ins:vaddsd xmm8, xmm8, xmm5
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm12
 ins:vmulsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm14
 ins:vmulsd xmm8, xmm8, xmm14
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm8
 ins:vsubsd xmm9, xmm9, xmm8
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm10
 ins:vsubsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xac708]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xac708]
 reg:xmm14
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xabdf2]
 ins:vmovsd xmm0, qword ptr [rip+0xabdf2]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm15, xmm15, xmm0
 ins:vxorpd xmm15, xmm15, xmm0
 reg:xmm15
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xac866]
 ins:vmovsd xmm7, qword ptr [rip+0xac866]
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm15
 ins:vmovapd xmm13, xmm15
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac781]
 ins:vmovsd xmm4, qword ptr [rip+0xac781]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm15
 ins:vaddsd xmm7, xmm7, xmm15
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac77c]
 ins:vmovsd xmm1, qword ptr [rip+0xac77c]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xac78c]
 ins:vmovsd xmm6, qword ptr [rip+0xac78c]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm7
 ins:vmovapd xmm0, xmm7
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x10]
 ins:mov rdx, qword ptr [rsp+0x10]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xac827]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xac827]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xac75f]
 ins:vmovsd xmm7, qword ptr [rip+0xac75f]
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdx+0x1]
 ins:lea ecx, ptr [rdx+0x1]
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rcx, ecx
 ins:movsxd rcx, ecx
 reg:rcx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm13, xmm13, xmm0
 ins:vsubsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x8]
 ins:vmovsd xmm0, qword ptr [rsp+0x8]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm13
 ins:vaddsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm0
 ins:vmovapd xmm12, xmm0
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm12
 ins:vmovapd xmm5, xmm12
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm12
 ins:vmovapd xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm4
 ins:vmulsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm1
 ins:vsubsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm6
 ins:vsubsd xmm8, xmm8, xmm6
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm5
 ins:vmulsd xmm10, xmm10, xmm5
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm12
 ins:vmulsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xac6fd]
 ins:vmovsd xmm5, qword ptr [rip+0xac6fd]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm5
 ins:vaddsd xmm8, xmm8, xmm5
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm12
 ins:vmulsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm14
 ins:vmulsd xmm8, xmm8, xmm14
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm8
 ins:vsubsd xmm9, xmm9, xmm8
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm10
 ins:vsubsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xac708]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xac708]
 reg:xmm14
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm11
 ins:vsubsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x419921fa
 ins:cmp eax, 0x419921fa
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xae7f5]
 ins:vmovsd xmm5, qword ptr [rip+0xae7f5]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm2
 ins:vmovapd xmm4, xmm2
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7e1]
 ins:vmovsd xmm0, qword ptr [rip+0xae7e1]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm2
 ins:vmulsd xmm5, xmm5, xmm2
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm5
 ins:vmovapd xmm6, xmm5
 reg:xmm6
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7ec]
 ins:vmovsd xmm0, qword ptr [rip+0xae7ec]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and eax, 0x3
 ins:and eax, 0x3
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm6
 ins:vmulsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7ca]
 ins:vmovsd xmm0, qword ptr [rip+0xae7ca]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm6
 ins:vmulsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7b2]
 ins:vmovsd xmm0, qword ptr [rip+0xae7b2]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm6
 ins:vmulsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm15, xmm4
 ins:vmovapd xmm15, xmm4
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm4
 ins:vmovapd xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm15, xmm15, xmm0
 ins:vsubsd xmm15, xmm15, xmm0
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm15
 ins:vsubsd xmm1, xmm1, xmm15
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rip+0xae81f]
 ins:vmovsd xmm11, qword ptr [rip+0xae81f]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm2
 ins:vmulsd xmm11, xmm11, xmm2
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm15
 ins:vmovapd xmm12, xmm15
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm15
 ins:vmulsd xmm12, xmm12, xmm15
 reg:xmm12
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae8f3]
 ins:vmovsd xmm0, qword ptr [rip+0xae8f3]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm15, xmm15, xmm0
 ins:vxorpd xmm15, xmm15, xmm0
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7df]
 ins:vmovsd xmm0, qword ptr [rip+0xae7df]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm12
 ins:vucomisd xmm0, xmm12
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm1
 ins:vmovapd xmm12, xmm1
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadecf]
 ins:vmovsd xmm4, qword ptr [rip+0xadecf]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xaddef]
 ins:vmovsd xmm7, qword ptr [rip+0xaddef]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaddeb]
 ins:vmovsd xmm8, qword ptr [rip+0xaddeb]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaddfb]
 ins:vmovsd xmm5, qword ptr [rip+0xaddfb]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xaddfb]
 ins:vmovsd xmm6, qword ptr [rip+0xaddfb]
 reg:xmm6
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xade9e]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xade9e]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm0
 ins:vmovapd xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm0
 ins:vmulsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm13
 ins:vmovapd xmm4, xmm13
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm13
 ins:vmulsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm4
 ins:vmulsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadd8a]
 ins:vmovsd xmm4, qword ptr [rip+0xadd8a]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm12
 ins:vaddsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm10
 ins:vmulsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm9, xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm13
 ins:vmulsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rax*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rax*8+0x4ceb00]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm13
 ins:vmulsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm0
 ins:vaddsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm14
 ins:vmulsd xmm12, xmm12, xmm14
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm12
 ins:vsubsd xmm9, xmm9, xmm12
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm10
 ins:vaddsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xadd7e]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xadd7e]
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm2
 ins:vmovapd xmm3, xmm2
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaedbe]
 ins:vmovsd xmm0, qword ptr [rip+0xaedbe]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaedf6]
 ins:vmovsd xmm4, qword ptr [rip+0xaedf6]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm2
 ins:vmulsd xmm3, xmm3, xmm2
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm2
 ins:vmovapd xmm5, xmm2
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm3
 ins:vmovapd xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xaedaa]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xaedaa]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xaedae]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xaedae]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xaedb2]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xaedb2]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm1
 ins:vmulsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm2
 ins:vmovapd xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm4
 ins:vaddsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm5
 ins:vsubsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm4
 ins:vaddsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xaec8e]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xaec8e]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm5
 ins:vaddsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm5
 ins:vucomisd xmm1, xmm5
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm5
 ins:vmovapd xmm2, xmm5
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test bpl, bpl
 ins:test bpl, bpl
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add rsp, 0x70
 ins:add rsp, 0x70
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe __sin_avx
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe __sin_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac426]
 ins:vmovsd xmm1, qword ptr [rip+0xac426]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac426]
 ins:vmovsd xmm1, qword ptr [rip+0xac426]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm13
 ins:vmovapd xmm1, xmm13
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm3
 ins:vucomisd xmm1, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm1
 ins:vmovapd xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm11
 ins:vaddsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm11
 ins:vsubsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm0
 ins:vmovapd xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xae252]
 ins:vmovsd xmm10, qword ptr [rip+0xae252]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm0
 ins:vmulsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm0
 ins:vmovapd xmm11, xmm0
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm10
 ins:vaddsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm15, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm15, qword ptr [rdx*8+0x4ceb00]
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm10
 ins:vsubsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm15
 ins:vmovapd xmm1, xmm15
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm0
 ins:vmovapd xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm10
 ins:vaddsd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm11
 ins:vsubsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm10
 ins:vsubsd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rsp]
 ins:vmovsd xmm10, qword ptr [rsp]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rsp]
 ins:vaddsd xmm5, xmm5, qword ptr [rsp]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm0
 ins:vmulsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm1
 ins:vmulsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm4
 ins:vaddsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm14
 ins:vmulsd xmm10, xmm10, xmm14
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm10
 ins:vsubsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm15
 ins:vmovapd xmm5, xmm15
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm1
 ins:vsubsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm11
 ins:vmulsd xmm1, xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm0
 ins:vmulsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm7
 ins:vmulsd xmm0, xmm0, xmm7
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm15
 ins:vmulsd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm1
 ins:vsubsd xmm14, xmm14, xmm1
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm14
 ins:vaddsd xmm4, xmm4, xmm14
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm4
 ins:vaddsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm11
 ins:vmovapd xmm9, xmm11
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm1
 ins:vsubsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm11
 ins:vsubsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xadc89]
 ins:vmovsd xmm1, qword ptr [rip+0xadc89]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm12
 ins:vxorpd xmm1, xmm1, xmm12
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm0
 ins:vmovapd xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xae252]
 ins:vmovsd xmm10, qword ptr [rip+0xae252]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm0
 ins:vmulsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm0
 ins:vmovapd xmm11, xmm0
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm10
 ins:vaddsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm15, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm15, qword ptr [rdx*8+0x4ceb00]
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm10
 ins:vsubsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm15
 ins:vmovapd xmm1, xmm15
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm0
 ins:vmovapd xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm10
 ins:vaddsd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm11
 ins:vsubsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm10
 ins:vsubsd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rsp]
 ins:vmovsd xmm10, qword ptr [rsp]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rsp]
 ins:vaddsd xmm5, xmm5, qword ptr [rsp]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm0
 ins:vmulsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm1
 ins:vmulsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm4
 ins:vaddsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm14
 ins:vmulsd xmm10, xmm10, xmm14
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm10
 ins:vsubsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm15
 ins:vmovapd xmm5, xmm15
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm1
 ins:vsubsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm11
 ins:vmulsd xmm1, xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm0
 ins:vmulsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm7
 ins:vmulsd xmm0, xmm0, xmm7
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm15
 ins:vmulsd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm1
 ins:vsubsd xmm14, xmm14, xmm1
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm14
 ins:vaddsd xmm4, xmm4, xmm14
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm4
 ins:vaddsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xae12d]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xae12d]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm11
 ins:vsubsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, qword ptr [rip+0xac2f8]
 ins:vsubsd xmm6, xmm6, qword ptr [rip+0xac2f8]
 reg:xmm6
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm5
 ins:vmovapd xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm13
 ins:vmovapd xmm8, xmm13
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rip+0xabe96]
 ins:vmovsd xmm9, qword ptr [rip+0xabe96]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm13
 ins:vmulsd xmm8, xmm8, xmm13
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm13
 ins:vmovapd xmm10, xmm13
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm9
 ins:vaddsd xmm10, xmm10, xmm9
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rsp+0x8]
 ins:vmovsd xmm14, qword ptr [rsp+0x8]
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm12
 ins:vmovapd xmm0, xmm12
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm8
 ins:vmulsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm9
 ins:vsubsd xmm10, xmm10, xmm9
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm8
 ins:vmulsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm6
 ins:vsubsd xmm7, xmm7, xmm6
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm13
 ins:vmovapd xmm6, xmm13
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm9
 ins:vsubsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm14
 ins:vmovapd xmm9, xmm14
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm10
 ins:vsubsd xmm6, xmm6, xmm10
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm8
 ins:vmulsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm11
 ins:vmovapd xmm1, xmm11
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm14
 ins:vaddsd xmm6, xmm6, xmm14
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm5
 ins:vaddsd xmm7, xmm7, xmm5
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm5, qword ptr [rdx*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm0
 ins:vmulsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm8
 ins:vmulsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm7
 ins:vaddsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm11
 ins:vmulsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm9
 ins:vsubsd xmm5, xmm5, xmm9
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm6
 ins:vsubsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm12
 ins:vmovapd xmm6, xmm12
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm1
 ins:vsubsd xmm11, xmm11, xmm1
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm13
 ins:vmulsd xmm6, xmm6, xmm13
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm8
 ins:vmulsd xmm13, xmm13, xmm8
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm0
 ins:vsubsd xmm11, xmm11, xmm0
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm6
 ins:vsubsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm4
 ins:vmulsd xmm13, xmm13, xmm4
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm12
 ins:vmulsd xmm13, xmm13, xmm12
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm13
 ins:vsubsd xmm5, xmm5, xmm13
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm11
 ins:vaddsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm5
 ins:vaddsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm3
 ins:vucomisd xmm1, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm1, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xabd69]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xabd69]
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaba99]
 ins:vmovsd xmm4, qword ptr [rip+0xaba99]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm4
 ins:vsubsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rip+0xae874]
 ins:vmovsd xmm9, qword ptr [rip+0xae874]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xae87c]
 ins:vmovsd xmm8, qword ptr [rip+0xae87c]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm9
 ins:vmovapd xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xae87f]
 ins:vmovsd xmm7, qword ptr [rip+0xae87f]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae887]
 ins:vmovsd xmm0, qword ptr [rip+0xae887]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm13, qword ptr [rip+0xae76a]
 ins:vmovsd xmm13, qword ptr [rip+0xae76a]
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm1
 ins:vmulsd xmm13, xmm13, xmm1
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm8
 ins:vaddsd xmm10, xmm10, xmm8
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm7
 ins:vaddsd xmm10, xmm10, xmm7
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, qword ptr [rip+0xae862]
 ins:vaddsd xmm10, xmm10, qword ptr [rip+0xae862]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm15
 ins:vmulsd xmm10, xmm10, xmm15
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm13
 ins:vsubsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm15
 ins:vmovapd xmm12, xmm15
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm1
 ins:vaddsd xmm10, xmm10, xmm1
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm10
 ins:vmovapd xmm13, xmm10
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm13, xmm13, xmm15
 ins:vaddsd xmm13, xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm13
 ins:vsubsd xmm12, xmm12, xmm13
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm10
 ins:vaddsd xmm12, xmm12, xmm10
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm12, xmm3
 ins:vucomisd xmm12, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm12, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, qword ptr [rip+0xae732]
 ins:vmulsd xmm12, xmm12, qword ptr [rip+0xae732]
 reg:xmm12
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm11
 ins:vaddsd xmm12, xmm12, xmm11
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm13
 ins:vaddsd xmm12, xmm12, xmm13
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm12, xmm13
 ins:vucomisd xmm12, xmm13
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm13
 ins:vmovapd xmm2, xmm13
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xae940]
 ins:vmovsd xmm1, qword ptr [rip+0xae940]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rip+0xaea50]
 ins:vaddsd xmm0, xmm0, qword ptr [rip+0xaea50]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm2
 ins:vmovapd xmm4, xmm2
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaea54]
 ins:vmovsd xmm8, qword ptr [rip+0xaea54]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm2
 ins:vmovapd xmm7, xmm2
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm1
 ins:vaddsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xae924]
 ins:vmovsd xmm6, qword ptr [rip+0xae924]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm8
 ins:vmulsd xmm6, xmm6, xmm8
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm3
 ins:vmulsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm8
 ins:vmovapd xmm3, xmm8
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm2
 ins:vmovapd xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm4
 ins:vsubsd xmm7, xmm7, xmm4
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm4
 ins:vmulsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm8
 ins:vmulsd xmm5, xmm5, xmm8
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm7
 ins:vmulsd xmm3, xmm3, xmm7
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm7
 ins:vmulsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm4
 ins:vmulsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm7
 ins:vmulsd xmm3, xmm3, xmm7
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm4
 ins:vmulsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm7
 ins:vmulsd xmm3, xmm3, xmm7
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm5
 ins:vaddsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm3
 ins:vaddsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm2
 ins:vmovapd xmm3, xmm2
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm1
 ins:vsubsd xmm3, xmm3, xmm1
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm5
 ins:vaddsd xmm3, xmm3, xmm5
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm3
 ins:vaddsd xmm0, xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm1
 ins:vmovapd xmm3, xmm1
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm3
 ins:vsubsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xae916]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xae916]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm3
 ins:vaddsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm1
 ins:vucomisd xmm3, xmm1
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm3
 ins:vmovapd xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm3
 ins:vmovapd xmm2, xmm3
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm11
 ins:vsubsd xmm12, xmm12, xmm11
 reg:xmm12
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm13
 ins:vaddsd xmm12, xmm12, xmm13
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm12, xmm13
 ins:vucomisd xmm12, xmm13
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm13
 ins:vmovapd xmm2, xmm13
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm2
 ins:vmovapd xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm10
 ins:vaddsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm10
 ins:vsubsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae489]
 ins:vmovsd xmm0, qword ptr [rip+0xae489]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm1
 ins:vmovapd xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm1
 ins:vmovapd xmm11, xmm1
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm1
 ins:vmovapd xmm10, xmm1
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm1
 ins:vmulsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm9
 ins:vmulsd xmm11, xmm11, xmm9
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm0
 ins:vsubsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm7
 ins:vmulsd xmm11, xmm11, xmm7
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm8
 ins:vmovapd xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm13, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm13, qword ptr [rdx*8+0x4ceb00]
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm11
 ins:vmovapd xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm8
 ins:vmulsd xmm11, xmm11, xmm8
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm13
 ins:vmulsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm7
 ins:vsubsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm13
 ins:vaddsd xmm8, xmm8, xmm13
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm12
 ins:vmulsd xmm4, xmm4, xmm12
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm1
 ins:vmulsd xmm8, xmm8, xmm1
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm11
 ins:vaddsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm10
 ins:vsubsd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm10
 ins:vmulsd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm12
 ins:vmovapd xmm1, xmm12
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm7
 ins:vaddsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm12
 ins:vmovapd xmm4, xmm12
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm4
 ins:vsubsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xae37a]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xae37a]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm4
 ins:vaddsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm1
 ins:vucomisd xmm4, xmm1
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm4
 ins:vmovapd xmm2, xmm4
 reg:xmm2
 Exe __sin_avx
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm3
 ins:vaddsd xmm4, xmm4, xmm3
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm3, xmm8
 ins:vmovapd xmm3, xmm8
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm0
 ins:vsubsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm4
 ins:vaddsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm5
 ins:vucomisd xmm3, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm3, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, qword ptr [rip+0xaef28]
 ins:vmulsd xmm3, xmm3, qword ptr [rip+0xaef28]
 reg:xmm3
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm5
 ins:vucomisd xmm2, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaef90]
 ins:vmovsd xmm4, qword ptr [rip+0xaef90]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm4
 ins:vaddsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm0
 ins:vucomisd xmm3, xmm0
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm5
 ins:vucomisd xmm2, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xaeeb6]
 ins:vmovsd xmm4, qword ptr [rip+0xaeeb6]
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm3, xmm3, xmm4
 ins:vsubsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm0
 ins:vaddsd xmm3, xmm3, xmm0
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm0
 ins:vucomisd xmm3, xmm0
 reg:rflags
 Exe csloww1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe csloww1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm12
 ins:vmovapd xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm13, qword ptr [rip+0xacaf6]
 ins:vmovsd xmm13, qword ptr [rip+0xacaf6]
 reg:xmm13
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm0
 ins:vaddsd xmm8, xmm8, xmm0
 reg:xmm8
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm12
 ins:vsubsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm8
 ins:vsubsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm12
 ins:vmovapd xmm8, xmm12
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm0
 ins:vmovapd xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm0
 ins:vmulsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm13
 ins:vaddsd xmm8, xmm8, xmm13
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm13
 ins:vaddsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm13
 ins:vsubsd xmm8, xmm8, xmm13
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm13
 ins:vsubsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm6
 ins:vsubsd xmm7, xmm7, xmm6
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm0
 ins:vmovapd xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm11
 ins:vmovapd xmm1, xmm11
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm10
 ins:vsubsd xmm6, xmm6, xmm10
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm8
 ins:vmulsd xmm6, xmm6, xmm8
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm5
 ins:vaddsd xmm7, xmm7, xmm5
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm5, qword ptr [rdx*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm11
 ins:vmulsd xmm7, xmm7, xmm11
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm7
 ins:vsubsd xmm5, xmm5, xmm7
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm6
 ins:vsubsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm12
 ins:vmovapd xmm6, xmm12
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm8
 ins:vsubsd xmm6, xmm6, xmm8
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm10
 ins:vmulsd xmm8, xmm8, xmm10
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm8
 ins:vsubsd xmm1, xmm1, xmm8
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm1
 ins:vsubsd xmm11, xmm11, xmm1
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm0
 ins:vmulsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm8
 ins:vsubsd xmm11, xmm11, xmm8
 reg:xmm11
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm6
 ins:vsubsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm11
 ins:vaddsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm5
 ins:vaddsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xac9c3]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xac9c3]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf05e]
 ins:vmovsd xmm1, qword ptr [rip+0xaf05e]
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe csloww1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm15
 ins:vmovapd xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rip+0xad473]
 ins:vmovsd xmm11, qword ptr [rip+0xad473]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm15
 ins:vmovapd xmm10, xmm15
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm15
 ins:vmulsd xmm13, xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm15
 ins:vmovapd xmm12, xmm15
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm11
 ins:vaddsd xmm10, xmm10, xmm11
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm11
 ins:vsubsd xmm10, xmm10, xmm11
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rip+0xad575]
 ins:vmovsd xmm11, qword ptr [rip+0xad575]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm8
 ins:vaddsd xmm9, xmm9, xmm8
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm10
 ins:vsubsd xmm12, xmm12, xmm10
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm10
 ins:vmulsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm1
 ins:vaddsd xmm12, xmm12, xmm1
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm10
 ins:vmulsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm7
 ins:vaddsd xmm9, xmm9, xmm7
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm10
 ins:vmulsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm14, xmm11
 ins:vmovapd xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm15
 ins:vaddsd xmm14, xmm14, xmm15
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad534]
 ins:vmovsd xmm0, qword ptr [rip+0xad534]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xad40c]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xad40c]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, qword ptr [rip+0xad50f]
 ins:vaddsd xmm9, xmm9, qword ptr [rip+0xad50f]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad504]
 ins:vmovsd xmm0, qword ptr [rip+0xad504]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm15
 ins:vmulsd xmm9, xmm9, xmm15
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm14
 ins:vsubsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm1
 ins:vaddsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm11
 ins:vaddsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm0
 ins:vaddsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xad3a8]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xad3a8]
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xad410]
 ins:vmovsd xmm7, qword ptr [rip+0xad410]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm2
 ins:vmulsd xmm7, xmm7, xmm2
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm14
 ins:vaddsd xmm7, xmm7, xmm14
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm7
 ins:vucomisd xmm0, xmm7
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xae12d]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xae12d]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xad012]
 ins:vmovsd xmm7, qword ptr [rip+0xad012]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm2
 ins:vmulsd xmm7, xmm7, xmm2
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm7
 ins:vsubsd xmm14, xmm14, xmm7
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm14
 ins:vmovapd xmm7, xmm14
 reg:xmm7
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm7
 ins:vucomisd xmm0, xmm7
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x60]
 ins:lea r12, ptr [rsp+0x60]
 reg:r12
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe InitU
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitU
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitU
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30649c]
 ins:mov rdx, qword ptr [rip+0x30649c]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x30636d]
 ins:mov rcx, qword ptr [rip+0x30636d]
 reg:rcx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306336]
 ins:mov rax, qword ptr [rip+0x306336]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe InitU2
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe InitU2
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe InitU2
 Exe InitU2
 Exe InitU2
 Exe InitU2
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x48]
 ins:cmp rax, qword ptr [rbp-0x48]
 reg:rflags
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x304fea]
 ins:mov rdx, qword ptr [rip+0x304fea]
 reg:rdx
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304e9b]
 ins:mov rax, qword ptr [rip+0x304e9b]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x20]
 ins:imul rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU2
 Exe InitU2
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x48]
 ins:cmp rax, qword ptr [rbp-0x48]
 reg:rflags
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x48]
 ins:cmp rax, qword ptr [rbp-0x48]
 reg:rflags
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x28]
 ins:mov rdx, qword ptr [rbp-0x28]
 reg:rdx
 Exe InitU2
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x18]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x18]
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc958a]
 ins:movsd xmm1, qword ptr [rip+0xc958a]
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm0
 ins:mulsd xmm1, xmm0
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x20]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, qword ptr [rbp-0x38]
 ins:cvtsi2sd xmm1, qword ptr [rbp-0x38]
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe InitU2
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x28]
 ins:mov rdx, qword ptr [rbp-0x28]
 reg:rdx
 Exe InitU2
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdx+rax*1]
 ins:lea rbx, ptr [rdx+rax*1]
 reg:rbx
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x18]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x18]
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc9538]
 ins:movsd xmm1, qword ptr [rip+0xc9538]
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm0
 ins:mulsd xmm1, xmm0
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x20]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe InitU2
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, qword ptr [rbp-0x38]
 ins:cvtsi2sd xmm1, qword ptr [rbp-0x38]
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xc951b]
 ins:movsd xmm1, qword ptr [rip+0xc951b]
 reg:xmm1
 Exe InitU2
 INSTSELECTOR: instruction to be included xorpd xmm0, xmm1
 ins:xorpd xmm0, xmm1
 reg:xmm0
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x48]
 ins:cmp rax, qword ptr [rbp-0x48]
 reg:rflags
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe InitU2
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe InitU2
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x48]
 ins:cmp rax, qword ptr [rbp-0x48]
 reg:rflags
 Exe InitU2
 Exe InitU2
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe InitU2
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe InitU2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm3
 ins:vmovapd xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb9948]
 ins:movsd xmm2, qword ptr [rip+0xb9948]
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm10, qword ptr [rip+0xb994f]
 ins:movsd xmm10, qword ptr [rip+0xb994f]
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm2
 ins:movapd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm10
 ins:movapd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm10
 ins:movapd xmm11, xmm10
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm2
 ins:subsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x30]
 ins:mov rax, qword ptr [rsp-0x30]
 reg:rax
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb9866]
 ins:movsd xmm2, qword ptr [rip+0xb9866]
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm0
 ins:movapd xmm5, xmm0
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm1
 ins:addsd xmm5, xmm1
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm5
 ins:subsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm5
 ins:movapd xmm7, xmm5
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm5
 ins:movapd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm2
 ins:mulsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm4, xmm1
 ins:movapd xmm4, xmm1
 reg:xmm4
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm7, xmm0
 ins:subsd xmm7, xmm0
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm0
 ins:addsd xmm7, xmm0
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm9, xmm7
 ins:subsd xmm9, xmm7
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm7
 ins:movapd xmm0, xmm7
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm7
 ins:movapd xmm1, xmm7
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm7
 ins:mulsd xmm1, xmm7
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm9
 ins:mulsd xmm0, xmm9
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm6, xmm1
 ins:movapd xmm6, xmm1
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm0
 ins:addsd xmm0, xmm0
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm1, xmm6
 ins:subsd xmm1, xmm6
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm9
 ins:movapd xmm0, xmm9
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm9
 ins:mulsd xmm0, xmm9
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm4
 ins:movapd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm4, xmm6
 ins:movapd xmm4, xmm6
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm5
 ins:mulsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm0
 ins:addsd xmm0, xmm0
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 ins:lea edx, ptr [rax+0x1]
 reg:edx
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included add eax, 0x3
 ins:add eax, 0x3
 reg:eax
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm1, qword ptr [rdx*8+0x4ceb00]
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm6, xmm4
 ins:subsd xmm6, xmm4
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm4
 ins:movapd xmm3, xmm4
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax*8+0x4ceb00]
 ins:movsd xmm1, qword ptr [rax*8+0x4ceb00]
 reg:xmm1
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm4
 ins:movapd xmm1, xmm4
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm4
 ins:movapd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm2
 ins:mulsd xmm1, xmm2
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm10
 ins:movapd xmm1, xmm10
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm6
 ins:mulsd xmm10, xmm6
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm2
 ins:mulsd xmm1, xmm2
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm0
 ins:subsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm1
 ins:subsd xmm12, xmm1
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm1
 ins:addsd xmm12, xmm1
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm12
 ins:subsd xmm11, xmm12
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm12
 ins:mulsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm11
 ins:mulsd xmm1, xmm11
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm3
 ins:mulsd xmm11, xmm3
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm12
 ins:addsd xmm1, xmm12
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm1
 ins:addsd xmm12, xmm1
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm12
 ins:subsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm1
 ins:addsd xmm8, xmm1
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xb97c5]
 ins:movsd xmm1, qword ptr [rip+0xb97c5]
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm4
 ins:mulsd xmm1, xmm4
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm11
 ins:addsd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm11, qword ptr [rip+0xb97c3]
 ins:movsd xmm11, qword ptr [rip+0xb97c3]
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm10
 ins:addsd xmm1, xmm10
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm12
 ins:movapd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm11
 ins:movapd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm8
 ins:addsd xmm1, xmm8
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm1
 ins:addsd xmm10, xmm1
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm10
 ins:movapd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm1
 ins:addsd xmm12, xmm1
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm1, xmm1
 ins:xorpd xmm1, xmm1
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm1
 ins:ucomisd xmm10, xmm1
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm11, xmm1
 ins:ucomisd xmm11, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm11, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm13, xmm8
 ins:ucomisd xmm13, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm13, qword ptr [rip+0xb8977]
 ins:movsd xmm13, qword ptr [rip+0xb8977]
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm13, xmm10
 ins:xorpd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm11, xmm1
 ins:ucomisd xmm11, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm11, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm13, xmm8
 ins:ucomisd xmm13, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm14
 ins:subsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm11
 ins:addsd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rip+0xb971c]
 ins:addsd xmm8, qword ptr [rip+0xb971c]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm11
 ins:movapd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm11
 ins:movapd xmm13, xmm11
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm15, xmm11
 ins:movapd xmm15, xmm11
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm2
 ins:mulsd xmm10, xmm2
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm11
 ins:subsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm6
 ins:mulsd xmm11, xmm6
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm8
 ins:addsd xmm14, xmm8
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm10
 ins:addsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm4
 ins:mulsd xmm14, xmm4
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm15, xmm13
 ins:subsd xmm15, xmm13
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm3
 ins:mulsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm11
 ins:addsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm11, qword ptr [rip+0xb9374]
 ins:movsd xmm11, qword ptr [rip+0xb9374]
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm15
 ins:mulsd xmm12, xmm15
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm15, xmm3
 ins:mulsd xmm15, xmm3
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm10
 ins:movapd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm13
 ins:subsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm15
 ins:addsd xmm10, xmm15
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm13
 ins:movapd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm14
 ins:addsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm10
 ins:movapd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm1
 ins:ucomisd xmm10, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm10, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm14
 ins:addsd xmm13, xmm14
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm11
 ins:movapd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm14
 ins:subsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rip+0xb8f23]
 ins:addsd xmm8, qword ptr [rip+0xb8f23]
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm11
 ins:movapd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm11
 ins:movapd xmm13, xmm11
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm15, xmm11
 ins:movapd xmm15, xmm11
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm2
 ins:mulsd xmm10, xmm2
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm11
 ins:subsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm6
 ins:mulsd xmm11, xmm6
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm8
 ins:addsd xmm14, xmm8
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm10
 ins:addsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm4
 ins:mulsd xmm14, xmm4
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm15, xmm13
 ins:subsd xmm15, xmm13
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm3
 ins:mulsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm11
 ins:addsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm11, qword ptr [rip+0xb9374]
 ins:movsd xmm11, qword ptr [rip+0xb9374]
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm15
 ins:mulsd xmm12, xmm15
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm15, xmm3
 ins:mulsd xmm15, xmm3
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm10
 ins:movapd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm13
 ins:subsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm15
 ins:addsd xmm10, xmm15
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm13
 ins:movapd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm14
 ins:addsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm10
 ins:movapd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm1
 ins:ucomisd xmm10, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm10, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm14
 ins:addsd xmm13, xmm14
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm11
 ins:movapd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm11, xmm1
 ins:ucomisd xmm11, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm11, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm12, xmm8
 ins:ucomisd xmm12, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm8, qword ptr [rip+0xb89bf]
 ins:movsd xmm8, qword ptr [rip+0xb89bf]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm8, xmm11
 ins:xorpd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm12, xmm8
 ins:ucomisd xmm12, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm14
 ins:subsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm11
 ins:addsd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rip+0xb9636]
 ins:addsd xmm8, qword ptr [rip+0xb9636]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm11
 ins:movapd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm11
 ins:movapd xmm13, xmm11
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm15, xmm11
 ins:movapd xmm15, xmm11
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm2
 ins:mulsd xmm10, xmm2
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm11
 ins:subsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm6
 ins:mulsd xmm11, xmm6
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm8
 ins:addsd xmm14, xmm8
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm10
 ins:addsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm4
 ins:mulsd xmm14, xmm4
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm15, xmm13
 ins:subsd xmm15, xmm13
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm3
 ins:mulsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm11
 ins:addsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm15
 ins:mulsd xmm12, xmm15
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm15, xmm3
 ins:mulsd xmm15, xmm3
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm10
 ins:movapd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm13
 ins:subsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm13
 ins:movapd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm7
 ins:movapd xmm12, xmm7
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm15
 ins:addsd xmm10, xmm15
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm8
 ins:subsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm11
 ins:subsd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm14
 ins:addsd xmm13, xmm14
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, qword ptr [rsp-0x28]
 ins:mulsd xmm8, qword ptr [rsp-0x28]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm5
 ins:mulsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm10
 ins:subsd xmm11, xmm10
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm10
 ins:mulsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm9
 ins:mulsd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm11
 ins:mulsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm11
 ins:mulsd xmm9, xmm11
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm10
 ins:addsd xmm7, xmm10
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm12
 ins:movapd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm7
 ins:addsd xmm10, xmm7
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm7
 ins:addsd xmm12, xmm7
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm10
 ins:movapd xmm7, xmm10
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm13
 ins:addsd xmm7, xmm13
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm7
 ins:subsd xmm10, xmm7
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm7
 ins:movapd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm7, xmm1
 ins:ucomisd xmm7, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm7, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm5
 ins:addsd xmm11, xmm5
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm7
 ins:movapd xmm9, xmm7
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm1
 ins:ucomisd xmm5, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm14
 ins:subsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rip+0xb8e53]
 ins:addsd xmm8, qword ptr [rip+0xb8e53]
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm11
 ins:movapd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm11
 ins:movapd xmm13, xmm11
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm15, xmm11
 ins:movapd xmm15, xmm11
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm2
 ins:mulsd xmm10, xmm2
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm11
 ins:subsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm6
 ins:mulsd xmm11, xmm6
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm10
 ins:subsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm8
 ins:addsd xmm14, xmm8
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm10
 ins:addsd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm4
 ins:mulsd xmm14, xmm4
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm15, xmm13
 ins:subsd xmm15, xmm13
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm3
 ins:mulsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm11
 ins:addsd xmm14, xmm11
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm15
 ins:mulsd xmm12, xmm15
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm15, xmm3
 ins:mulsd xmm15, xmm3
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm10
 ins:movapd xmm13, xmm10
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm13
 ins:subsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm13
 ins:movapd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm7
 ins:movapd xmm12, xmm7
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm15
 ins:addsd xmm10, xmm15
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm14, xmm10
 ins:addsd xmm14, xmm10
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm8
 ins:subsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm11
 ins:subsd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm14
 ins:addsd xmm13, xmm14
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, qword ptr [rsp-0x28]
 ins:mulsd xmm8, qword ptr [rsp-0x28]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm5
 ins:mulsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm10
 ins:subsd xmm11, xmm10
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm10
 ins:mulsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm9
 ins:mulsd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm11
 ins:mulsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm11
 ins:mulsd xmm9, xmm11
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm10
 ins:addsd xmm7, xmm10
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm12
 ins:movapd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm7
 ins:addsd xmm10, xmm7
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm7
 ins:addsd xmm12, xmm7
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm10
 ins:movapd xmm7, xmm10
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm13
 ins:addsd xmm7, xmm13
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm7
 ins:subsd xmm10, xmm7
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm11, xmm7
 ins:movapd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm7, xmm1
 ins:ucomisd xmm7, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm7, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm5
 ins:addsd xmm11, xmm5
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm7
 ins:movapd xmm9, xmm7
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm1
 ins:ucomisd xmm5, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm8
 ins:ucomisd xmm9, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb89d7]
 ins:movsd xmm9, qword ptr [rip+0xb89d7]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm9, xmm7
 ins:xorpd xmm9, xmm7
 reg:xmm9
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm1
 ins:ucomisd xmm5, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm8
 ins:ucomisd xmm9, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm7, xmm11
 ins:subsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm7
 ins:movapd xmm8, xmm7
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rsp-0x28]
 ins:addsd xmm8, qword ptr [rsp-0x28]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb943b]
 ins:movsd xmm9, qword ptr [rip+0xb943b]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm8
 ins:movapd xmm7, xmm8
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm2
 ins:mulsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm11
 ins:addsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm5
 ins:subsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm7
 ins:subsd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm0
 ins:movapd xmm5, xmm0
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm10
 ins:mulsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm12
 ins:mulsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm10
 ins:addsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm10
 ins:subsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rip+0xb93b2]
 ins:movsd xmm5, qword ptr [rip+0xb93b2]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm4
 ins:mulsd xmm5, xmm4
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb93cb]
 ins:movsd xmm9, qword ptr [rip+0xb93cb]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm11
 ins:subsd xmm5, xmm11
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm7
 ins:addsd xmm8, xmm7
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rsp-0x28]
 ins:addsd xmm8, qword ptr [rsp-0x28]
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb943b]
 ins:movsd xmm9, qword ptr [rip+0xb943b]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm8
 ins:movapd xmm7, xmm8
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm2
 ins:mulsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm11
 ins:addsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm5
 ins:subsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm7
 ins:subsd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm0
 ins:movapd xmm5, xmm0
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm10
 ins:mulsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm12
 ins:mulsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm10
 ins:addsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm10
 ins:subsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rip+0xb93b2]
 ins:movsd xmm5, qword ptr [rip+0xb93b2]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm4
 ins:mulsd xmm5, xmm4
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb93cb]
 ins:movsd xmm9, qword ptr [rip+0xb93cb]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm12, xmm5
 ins:ucomisd xmm12, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm12, qword ptr [rip+0xb8a07]
 ins:movsd xmm12, qword ptr [rip+0xb8a07]
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm12, xmm8
 ins:xorpd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm12, xmm5
 ins:ucomisd xmm12, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm8
 ins:movapd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm13
 ins:subsd xmm5, xmm13
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb9356]
 ins:addsd xmm5, qword ptr [rip+0xb9356]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm10
 ins:addsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm13
 ins:addsd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm2
 ins:mulsd xmm8, xmm2
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm5
 ins:addsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm4
 ins:mulsd xmm13, xmm4
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm12
 ins:subsd xmm14, xmm12
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm12
 ins:mulsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm9
 ins:addsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb931e]
 ins:movsd xmm9, qword ptr [rip+0xb931e]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm14
 ins:mulsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm3
 ins:mulsd xmm14, xmm3
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm12
 ins:subsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm12
 ins:movapd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm13
 ins:subsd xmm5, xmm13
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm10
 ins:addsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb8e34]
 ins:addsd xmm5, qword ptr [rip+0xb8e34]
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm13
 ins:addsd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm2
 ins:mulsd xmm8, xmm2
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm5
 ins:addsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm4
 ins:mulsd xmm13, xmm4
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm12
 ins:subsd xmm14, xmm12
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm12
 ins:mulsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm9
 ins:addsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb931e]
 ins:movsd xmm9, qword ptr [rip+0xb931e]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm14
 ins:mulsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm3
 ins:mulsd xmm14, xmm3
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm12
 ins:subsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm12
 ins:movapd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm5
 ins:ucomisd xmm10, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rip+0xb8a50]
 ins:movsd xmm5, qword ptr [rip+0xb8a50]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm5, xmm9
 ins:xorpd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm5
 ins:ucomisd xmm10, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm8
 ins:movapd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm13
 ins:subsd xmm5, xmm13
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb9281]
 ins:addsd xmm5, qword ptr [rip+0xb9281]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm12
 ins:addsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm13
 ins:addsd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm2
 ins:mulsd xmm8, xmm2
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm5
 ins:addsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm4
 ins:mulsd xmm13, xmm4
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm12
 ins:subsd xmm14, xmm12
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm12
 ins:mulsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm9
 ins:addsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb9249]
 ins:movsd xmm9, qword ptr [rip+0xb9249]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm14
 ins:mulsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm3
 ins:mulsd xmm14, xmm3
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm12
 ins:subsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm12
 ins:movapd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm8
 ins:movapd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm13
 ins:subsd xmm5, xmm13
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm12
 ins:addsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb8e7c]
 ins:addsd xmm5, qword ptr [rip+0xb8e7c]
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm13
 ins:addsd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm2
 ins:mulsd xmm8, xmm2
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm5
 ins:addsd xmm13, xmm5
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm4
 ins:mulsd xmm13, xmm4
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm14, xmm12
 ins:subsd xmm14, xmm12
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm12
 ins:mulsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm9
 ins:addsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb9249]
 ins:movsd xmm9, qword ptr [rip+0xb9249]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm14
 ins:mulsd xmm10, xmm14
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm3
 ins:mulsd xmm14, xmm3
 reg:xmm14
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm12
 ins:subsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm14
 ins:addsd xmm8, xmm14
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm12
 ins:movapd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm8
 ins:subsd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm12, xmm13
 ins:addsd xmm12, xmm13
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm8
 ins:movapd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm13, xmm5
 ins:ucomisd xmm13, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm13, qword ptr [rip+0xb8a67]
 ins:movsd xmm13, qword ptr [rip+0xb8a67]
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm13, xmm8
 ins:xorpd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm13, xmm5
 ins:ucomisd xmm13, xmm5
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm8
 ins:movapd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm10
 ins:subsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb91ac]
 ins:addsd xmm5, qword ptr [rip+0xb91ac]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm12
 ins:addsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm0
 ins:movapd xmm13, xmm0
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x18]
 ins:movsd xmm15, qword ptr [rsp-0x18]
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm15
 ins:mulsd xmm11, xmm15
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm8
 ins:mulsd xmm6, xmm8
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm2
 ins:mulsd xmm12, xmm2
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm9, xmm12
 ins:subsd xmm9, xmm12
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm7
 ins:movapd xmm5, xmm7
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm4
 ins:mulsd xmm10, xmm4
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm15
 ins:movapd xmm8, xmm15
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm9
 ins:mulsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm3
 ins:mulsd xmm9, xmm3
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm6
 ins:addsd xmm10, xmm6
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm6, xmm7
 ins:movapd xmm6, xmm7
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm12
 ins:mulsd xmm0, xmm12
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm12
 ins:mulsd xmm3, xmm12
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm9
 ins:addsd xmm0, xmm9
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm13
 ins:movapd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm0
 ins:addsd xmm9, xmm0
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm4, xmm9
 ins:movapd xmm4, xmm9
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm0
 ins:addsd xmm13, xmm0
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm15
 ins:movapd xmm0, xmm15
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm2
 ins:mulsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm3
 ins:addsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm15
 ins:movapd xmm3, xmm15
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x30]
 ins:movsd xmm15, qword ptr [rsp-0x30]
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm0
 ins:subsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm7
 ins:movapd xmm0, xmm7
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm7, qword ptr [rsp-0x10]
 ins:mulsd xmm7, qword ptr [rsp-0x10]
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm2
 ins:mulsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm10
 ins:addsd xmm4, xmm10
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm3
 ins:subsd xmm8, xmm3
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm6, xmm0
 ins:subsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm7
 ins:addsd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm4
 ins:movapd xmm7, xmm4
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm9, xmm4
 ins:subsd xmm9, xmm4
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm10
 ins:addsd xmm9, xmm10
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm6
 ins:subsd xmm5, xmm6
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm6
 ins:mulsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm8
 ins:mulsd xmm6, xmm8
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm15
 ins:mulsd xmm9, xmm15
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm5
 ins:mulsd xmm3, xmm5
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm8
 ins:mulsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm4
 ins:movapd xmm8, xmm4
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm6
 ins:addsd xmm3, xmm6
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm6, xmm0
 ins:movapd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm3
 ins:addsd xmm6, xmm3
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm10
 ins:subsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm12
 ins:addsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, qword ptr [rip+0xb8ec4]
 ins:addsd xmm5, qword ptr [rip+0xb8ec4]
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm0
 ins:movapd xmm13, xmm0
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x18]
 ins:movsd xmm15, qword ptr [rsp-0x18]
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm15
 ins:mulsd xmm11, xmm15
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm8
 ins:mulsd xmm6, xmm8
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm2
 ins:mulsd xmm12, xmm2
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm9, xmm12
 ins:subsd xmm9, xmm12
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm7
 ins:movapd xmm5, xmm7
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm4
 ins:mulsd xmm10, xmm4
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm15
 ins:movapd xmm8, xmm15
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm9
 ins:mulsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm3
 ins:mulsd xmm9, xmm3
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm6
 ins:addsd xmm10, xmm6
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm6, xmm7
 ins:movapd xmm6, xmm7
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm12
 ins:mulsd xmm0, xmm12
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm12
 ins:mulsd xmm3, xmm12
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm9
 ins:addsd xmm0, xmm9
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm9, xmm13
 ins:movapd xmm9, xmm13
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm0
 ins:addsd xmm9, xmm0
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm4, xmm9
 ins:movapd xmm4, xmm9
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm0
 ins:addsd xmm13, xmm0
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm15
 ins:movapd xmm0, xmm15
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm2
 ins:mulsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm3
 ins:addsd xmm13, xmm3
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm15
 ins:movapd xmm3, xmm15
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x30]
 ins:movsd xmm15, qword ptr [rsp-0x30]
 reg:xmm15
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm0
 ins:subsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm7
 ins:movapd xmm0, xmm7
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm7, qword ptr [rsp-0x10]
 ins:mulsd xmm7, qword ptr [rsp-0x10]
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm2
 ins:mulsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm10
 ins:addsd xmm4, xmm10
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm3
 ins:subsd xmm8, xmm3
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm6, xmm0
 ins:subsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm7
 ins:addsd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm4
 ins:movapd xmm7, xmm4
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm9, xmm4
 ins:subsd xmm9, xmm4
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm9, xmm10
 ins:addsd xmm9, xmm10
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm6
 ins:subsd xmm5, xmm6
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm6
 ins:mulsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm8
 ins:mulsd xmm6, xmm8
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm15
 ins:mulsd xmm9, xmm15
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm5
 ins:mulsd xmm3, xmm5
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm8
 ins:mulsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm4
 ins:movapd xmm8, xmm4
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm6
 ins:addsd xmm3, xmm6
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm6, xmm0
 ins:movapd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm3
 ins:addsd xmm6, xmm3
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm6
 ins:subsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm3
 ins:addsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm4
 ins:movapd xmm3, xmm4
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm2
 ins:mulsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm15
 ins:mulsd xmm2, xmm15
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm5
 ins:addsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm15
 ins:movapd xmm5, xmm15
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm7, xmm3
 ins:subsd xmm7, xmm3
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm2
 ins:subsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm0
 ins:addsd xmm11, xmm0
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm6
 ins:movapd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm3
 ins:addsd xmm7, xmm3
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm2
 ins:addsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm15
 ins:movapd xmm2, xmm15
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm11
 ins:addsd xmm0, xmm11
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm7
 ins:subsd xmm8, xmm7
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm7
 ins:movapd xmm3, xmm7
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm2, xmm5
 ins:subsd xmm2, xmm5
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm5
 ins:mulsd xmm3, xmm5
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm6, xmm0
 ins:subsd xmm6, xmm0
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm0, xmm1
 ins:ucomisd xmm0, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm0, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm8
 ins:mulsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm2
 ins:mulsd xmm7, xmm2
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm2
 ins:mulsd xmm8, xmm2
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm6, xmm11
 ins:addsd xmm6, xmm11
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rsp-0x20]
 ins:movsd xmm2, qword ptr [rsp-0x20]
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm5
 ins:addsd xmm7, xmm5
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm3
 ins:movapd xmm5, xmm3
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm4
 ins:mulsd xmm2, xmm4
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm4, xmm0
 ins:movapd xmm4, xmm0
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm7
 ins:addsd xmm5, xmm7
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm2, xmm9
 ins:addsd xmm2, xmm9
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm5
 ins:subsd xmm3, xmm5
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm7
 ins:addsd xmm3, xmm7
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm0
 ins:movapd xmm7, xmm0
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm8
 ins:addsd xmm3, xmm8
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm2, xmm3
 ins:addsd xmm2, xmm3
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm3, xmm5
 ins:movapd xmm3, xmm5
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm2
 ins:addsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm5, xmm3
 ins:subsd xmm5, xmm3
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm4, xmm3
 ins:subsd xmm4, xmm3
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm2
 ins:addsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm1
 ins:ucomisd xmm3, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm3, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm3
 ins:movapd xmm2, xmm3
 reg:xmm2
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm7, xmm2
 ins:ucomisd xmm7, xmm2
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb8ab0]
 ins:movsd xmm2, qword ptr [rip+0xb8ab0]
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm2, xmm3
 ins:xorpd xmm2, xmm3
 reg:xmm2
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm7, xmm2
 ins:ucomisd xmm7, xmm2
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm4
 ins:subsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm5
 ins:subsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm6
 ins:addsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm0
 ins:movapd xmm2, xmm0
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rsp-0x30]
 ins:movsd xmm3, qword ptr [rsp-0x30]
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm2, xmm4
 ins:addsd xmm2, xmm4
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm4, xmm2
 ins:subsd xmm4, xmm2
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm2
 ins:movapd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm2, xmm1
 ins:ucomisd xmm2, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm2, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm2
 ins:addsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm6, qword ptr [rsp-0x30]
 ins:movsd xmm6, qword ptr [rsp-0x30]
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm1
 ins:ucomisd xmm6, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm6, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm6
 ins:movapd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rip+0xb8ae0]
 ins:movsd xmm0, qword ptr [rip+0xb8ae0]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm0, xmm6
 ins:xorpd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm0
 ins:ucomisd xmm5, xmm0
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x30]
 ins:movsd xmm0, qword ptr [rsp-0x30]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x20]
 ins:addsd xmm0, qword ptr [rsp-0x20]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm3
 ins:movapd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm2, xmm3
 ins:subsd xmm2, xmm3
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x30]
 ins:movsd xmm0, qword ptr [rsp-0x30]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x20]
 ins:addsd xmm0, qword ptr [rsp-0x20]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm3
 ins:movapd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 Exe __dubsin
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae88d]
 ins:vmovsd xmm0, qword ptr [rip+0xae88d]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rsp+0x68]
 ins:vmulsd xmm0, xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp]
 ins:vmovsd xmm2, qword ptr [rsp]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm8, qword ptr [rip+0xb89ef]
 ins:movsd xmm8, qword ptr [rip+0xb89ef]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm8, xmm5
 ins:xorpd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm8
 ins:ucomisd xmm9, xmm8
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm7, xmm11
 ins:subsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm7
 ins:movapd xmm8, xmm7
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, qword ptr [rsp-0x28]
 ins:addsd xmm8, qword ptr [rsp-0x28]
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb943b]
 ins:movsd xmm9, qword ptr [rip+0xb943b]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm7, xmm8
 ins:movapd xmm7, xmm8
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm2
 ins:mulsd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm7, xmm11
 ins:addsd xmm7, xmm11
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm6
 ins:mulsd xmm9, xmm6
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm5
 ins:subsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm11, xmm7
 ins:subsd xmm11, xmm7
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm0
 ins:movapd xmm5, xmm0
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm12, xmm10
 ins:subsd xmm12, xmm10
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm10
 ins:mulsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm12
 ins:mulsd xmm5, xmm12
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm10
 ins:addsd xmm5, xmm10
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm8, xmm10
 ins:subsd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rip+0xb93b2]
 ins:movsd xmm5, qword ptr [rip+0xb93b2]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm4
 ins:mulsd xmm5, xmm4
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm9
 ins:addsd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb93cb]
 ins:movsd xmm9, qword ptr [rip+0xb93cb]
 reg:xmm9
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm1
 ins:ucomisd xmm8, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm13, xmm8
 ins:addsd xmm13, xmm8
 reg:xmm13
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm1
 ins:ucomisd xmm9, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rip+0xb8a98]
 ins:movsd xmm7, qword ptr [rip+0xb8a98]
 reg:xmm7
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm7, xmm0
 ins:xorpd xmm7, xmm0
 reg:xmm7
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm1
 ins:ucomisd xmm3, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm3, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm3
 ins:movapd xmm2, xmm3
 reg:xmm2
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm7, xmm2
 ins:ucomisd xmm7, xmm2
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm4
 ins:subsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm5
 ins:subsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm6
 ins:addsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm0
 ins:movapd xmm2, xmm0
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rsp-0x30]
 ins:movsd xmm3, qword ptr [rsp-0x30]
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm2, xmm4
 ins:addsd xmm2, xmm4
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm4, xmm2
 ins:subsd xmm4, xmm2
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm2
 ins:movapd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm2, xmm1
 ins:ucomisd xmm2, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm2, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm2
 ins:addsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rip+0xb8ac8]
 ins:movsd xmm5, qword ptr [rip+0xb8ac8]
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included xorpd xmm5, xmm2
 ins:xorpd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm6, qword ptr [rsp-0x30]
 ins:movsd xmm6, qword ptr [rsp-0x30]
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm1
 ins:ucomisd xmm6, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm6, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm6
 ins:movapd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm0
 ins:ucomisd xmm5, xmm0
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x30]
 ins:movsd xmm0, qword ptr [rsp-0x30]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x20]
 ins:addsd xmm0, qword ptr [rsp-0x20]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm3
 ins:movapd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 Exe __dubsin
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm1
 ins:vxorpd xmm1, xmm1, xmm1
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 ins:lea rdi, ptr [rsp+0x40]
 reg:rdi
 Exe __cos_avx
 Exe __cos_avx
 Exe __docos
 INSTSELECTOR: instruction to be included xorpd xmm4, xmm4
 ins:xorpd xmm4, xmm4
 reg:xmm4
 Exe __docos
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __docos
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __docos
 INSTSELECTOR: instruction to be included sub rsp, 0x20
 ins:sub rsp, 0x20
 reg:rsp
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm0, xmm4
 ins:ucomisd xmm0, xmm4
 reg:rflags
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb7bc2]
 ins:movsd xmm2, qword ptr [rip+0xb7bc2]
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7b1a]
 ins:movsd xmm3, qword ptr [rip+0xb7b1a]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm2
 ins:mulsd xmm3, xmm2
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm0
 ins:ucomisd xmm3, xmm0
 reg:rflags
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7fa4]
 ins:movsd xmm3, qword ptr [rip+0xb7fa4]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm2
 ins:mulsd xmm3, xmm2
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm0
 ins:ucomisd xmm3, xmm0
 reg:rflags
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x10]
 ins:lea rdi, ptr [rsp+0x10]
 reg:rdi
 Exe __docos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb8ca8]
 ins:movsd xmm2, qword ptr [rip+0xb8ca8]
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm8, qword ptr [rip+0xb8caf]
 ins:movsd xmm8, qword ptr [rip+0xb8caf]
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm2
 ins:movapd xmm3, xmm2
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm8
 ins:movapd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm2
 ins:subsd xmm3, xmm2
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x50]
 ins:mov rax, qword ptr [rsp-0x50]
 reg:rax
 Exe __dubcos
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm0
 ins:movapd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm1
 ins:addsd xmm4, xmm1
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm4
 ins:subsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm4
 ins:movapd xmm5, xmm4
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm4
 ins:movapd xmm3, xmm4
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm4
 ins:movapd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm7, xmm1
 ins:movapd xmm7, xmm1
 reg:xmm7
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rip+0xb8b96]
 ins:movsd xmm1, qword ptr [rip+0xb8b96]
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm5, xmm0
 ins:subsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm0
 ins:addsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm5
 ins:subsd xmm3, xmm5
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm5
 ins:movapd xmm2, xmm5
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm5
 ins:mulsd xmm2, xmm5
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm5
 ins:mulsd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm2
 ins:movapd xmm6, xmm2
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm0
 ins:addsd xmm0, xmm0
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm6
 ins:subsd xmm2, xmm6
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm0
 ins:addsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm3
 ins:mulsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm6
 ins:movapd xmm3, xmm6
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm0
 ins:addsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm7
 ins:movapd xmm0, xmm7
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 ins:lea edx, ptr [rax+0x1]
 reg:edx
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm4
 ins:mulsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __dubcos
 INSTSELECTOR: instruction to be included add eax, 0x3
 ins:add eax, 0x3
 reg:eax
 Exe __dubcos
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm0
 ins:addsd xmm0, xmm0
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 ins:movsd xmm7, qword ptr [rdx*8+0x4ceb00]
 reg:xmm7
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rax*8+0x4ceb00]
 ins:movsd xmm7, qword ptr [rax*8+0x4ceb00]
 reg:xmm7
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm3
 ins:subsd xmm6, xmm3
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm3
 ins:movapd xmm2, xmm3
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm1
 ins:mulsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm6
 ins:addsd xmm0, xmm6
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm8
 ins:movapd xmm6, xmm8
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm1
 ins:mulsd xmm6, xmm1
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm0
 ins:movapd xmm15, xmm0
 reg:xmm15
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm6
 ins:subsd xmm10, xmm6
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm15
 ins:mulsd xmm8, xmm15
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm2
 ins:subsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm6
 ins:addsd xmm10, xmm6
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm3
 ins:movapd xmm2, xmm3
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm10
 ins:subsd xmm9, xmm10
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm0
 ins:movapd xmm6, xmm0
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm7, xmm0
 ins:movapd xmm7, xmm0
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm10
 ins:mulsd xmm6, xmm10
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm0
 ins:movapd xmm11, xmm0
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm9
 ins:mulsd xmm7, xmm9
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm2
 ins:mulsd xmm10, xmm2
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm2
 ins:mulsd xmm9, xmm2
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm6
 ins:movapd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm10
 ins:addsd xmm7, xmm10
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm10, qword ptr [rip+0xb8a8b]
 ins:movsd xmm10, qword ptr [rip+0xb8a8b]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm10
 ins:movapd xmm14, xmm10
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm7
 ins:addsd xmm13, xmm7
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm13
 ins:subsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm7
 ins:addsd xmm6, xmm7
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rip+0xb8b08]
 ins:movsd xmm7, qword ptr [rip+0xb8b08]
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm3
 ins:mulsd xmm7, xmm3
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm9
 ins:addsd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb8b06]
 ins:movsd xmm9, qword ptr [rip+0xb8b06]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm8
 ins:addsd xmm7, xmm8
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm8, qword ptr [rip+0xb877b]
 ins:movsd xmm8, qword ptr [rip+0xb877b]
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm6
 ins:addsd xmm7, xmm6
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm13
 ins:movapd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm7
 ins:addsd xmm6, xmm7
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm6
 ins:subsd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm6
 ins:addsd xmm12, xmm6
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm7
 ins:addsd xmm13, xmm7
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm7, xmm10
 ins:movapd xmm7, xmm10
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm1
 ins:mulsd xmm7, xmm1
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm14, xmm7
 ins:subsd xmm14, xmm7
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm14, xmm7
 ins:addsd xmm14, xmm7
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm7, xmm10
 ins:movapd xmm7, xmm10
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, qword ptr [rsp-0x50]
 ins:mulsd xmm10, qword ptr [rsp-0x50]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm7, xmm14
 ins:subsd xmm7, xmm14
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm7
 ins:movapd xmm15, xmm7
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm7, xmm0
 ins:movapd xmm7, xmm0
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm15
 ins:mulsd xmm11, xmm15
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm7, xmm14
 ins:mulsd xmm7, xmm14
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm2
 ins:mulsd xmm14, xmm2
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm15, xmm2
 ins:mulsd xmm15, xmm2
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm7
 ins:movapd xmm14, xmm7
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm14, xmm11
 ins:addsd xmm14, xmm11
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm7, xmm14
 ins:subsd xmm7, xmm14
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm11
 ins:addsd xmm7, xmm11
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm11, qword ptr [rip+0xb89bc]
 ins:movsd xmm11, qword ptr [rip+0xb89bc]
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm3
 ins:mulsd xmm11, xmm3
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm15
 ins:addsd xmm7, xmm15
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm14
 ins:movapd xmm15, xmm14
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm7
 ins:addsd xmm11, xmm7
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm7, qword ptr [rip+0xb89cb]
 ins:movsd xmm7, qword ptr [rip+0xb89cb]
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm15, xmm11
 ins:addsd xmm15, xmm11
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm7, xmm15
 ins:addsd xmm7, xmm15
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm14, xmm15
 ins:subsd xmm14, xmm15
 reg:xmm14
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm7, xmm7
 ins:xorpd xmm7, xmm7
 reg:xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm14
 ins:addsd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm7
 ins:ucomisd xmm6, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm6, xmm7
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm6
 ins:movapd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm7
 ins:ucomisd xmm9, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm11, qword ptr [rip+0xb7c87]
 ins:movsd xmm11, qword ptr [rip+0xb7c87]
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm11, xmm6
 ins:xorpd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm7
 ins:ucomisd xmm9, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm11, xmm10
 ins:ucomisd xmm11, xmm10
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm12
 ins:subsd xmm6, xmm12
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm6
 ins:movapd xmm10, xmm6
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm9
 ins:addsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, qword ptr [rip+0xb89b4]
 ins:addsd xmm10, qword ptr [rip+0xb89b4]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm10
 ins:movapd xmm9, xmm10
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm0
 ins:movapd xmm11, xmm0
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm9
 ins:movapd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm1
 ins:mulsd xmm6, xmm1
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm6
 ins:subsd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm6
 ins:addsd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm0
 ins:movapd xmm6, xmm0
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm14, xmm13
 ins:subsd xmm14, xmm13
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm13
 ins:mulsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm14
 ins:mulsd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm2
 ins:mulsd xmm14, xmm2
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm13
 ins:addsd xmm11, xmm13
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm6
 ins:movapd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm11
 ins:addsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm13
 ins:subsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm13
 ins:movapd xmm9, xmm13
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm11
 ins:addsd xmm6, xmm11
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm14
 ins:addsd xmm6, xmm14
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm6
 ins:addsd xmm12, xmm6
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm7
 ins:ucomisd xmm9, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm12
 ins:subsd xmm10, xmm12
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm6
 ins:addsd xmm10, xmm6
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm13
 ins:addsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, qword ptr [rip+0xb823b]
 ins:addsd xmm10, qword ptr [rip+0xb823b]
 reg:xmm10
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm10
 ins:movapd xmm9, xmm10
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm0
 ins:movapd xmm11, xmm0
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm9
 ins:movapd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm9
 ins:movapd xmm14, xmm9
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm1
 ins:mulsd xmm6, xmm1
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm6
 ins:subsd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm10
 ins:addsd xmm12, xmm10
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm6
 ins:addsd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm0
 ins:movapd xmm6, xmm0
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm14, xmm13
 ins:subsd xmm14, xmm13
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm13
 ins:mulsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm14
 ins:mulsd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm14, xmm2
 ins:mulsd xmm14, xmm2
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm13
 ins:addsd xmm11, xmm13
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm6
 ins:movapd xmm13, xmm6
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm11
 ins:addsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm13
 ins:subsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm13
 ins:movapd xmm9, xmm13
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm11
 ins:addsd xmm6, xmm11
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm14
 ins:addsd xmm6, xmm14
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm6
 ins:addsd xmm12, xmm6
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm9
 ins:subsd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm9
 ins:movapd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm7
 ins:ucomisd xmm9, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm9, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm13, xmm12
 ins:addsd xmm13, xmm12
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm8
 ins:movapd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm7
 ins:ucomisd xmm8, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm8
 ins:movapd xmm6, xmm8
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm6
 ins:ucomisd xmm10, xmm6
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm6, qword ptr [rip+0xb7cd0]
 ins:movsd xmm6, qword ptr [rip+0xb7cd0]
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm6, xmm8
 ins:xorpd xmm6, xmm8
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm6
 ins:ucomisd xmm10, xmm6
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm9
 ins:movapd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm12
 ins:subsd xmm6, xmm12
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm8
 ins:addsd xmm6, xmm8
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, qword ptr [rip+0xb88d8]
 ins:addsd xmm6, qword ptr [rip+0xb88d8]
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm13
 ins:addsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm14, qword ptr [rsp-0x28]
 ins:movsd xmm14, qword ptr [rsp-0x28]
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm6
 ins:addsd xmm12, xmm6
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm11
 ins:subsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm11
 ins:movapd xmm6, xmm11
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm5
 ins:movapd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm12
 ins:addsd xmm6, xmm12
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm6
 ins:movapd xmm8, xmm6
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm1
 ins:mulsd xmm9, xmm1
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm6
 ins:subsd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm9
 ins:subsd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm12
 ins:addsd xmm11, xmm12
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm9
 ins:addsd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, qword ptr [rsp-0x40]
 ins:mulsd xmm6, qword ptr [rsp-0x40]
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm4
 ins:mulsd xmm11, xmm4
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm8
 ins:subsd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm8
 ins:mulsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm14
 ins:mulsd xmm8, xmm14
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm6
 ins:addsd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm9
 ins:mulsd xmm5, xmm9
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm14
 ins:mulsd xmm9, xmm14
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm8
 ins:movapd xmm5, xmm8
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm9
 ins:addsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm11
 ins:addsd xmm5, xmm11
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm5
 ins:subsd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm5
 ins:movapd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm7
 ins:ucomisd xmm5, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm4
 ins:addsd xmm6, xmm4
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm5
 ins:movapd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm11
 ins:addsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm8
 ins:movapd xmm6, xmm8
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm12
 ins:subsd xmm6, xmm12
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm9
 ins:addsd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm13
 ins:addsd xmm6, xmm13
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, qword ptr [rip+0xb8164]
 ins:addsd xmm6, qword ptr [rip+0xb8164]
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm14, qword ptr [rsp-0x28]
 ins:movsd xmm14, qword ptr [rsp-0x28]
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm6
 ins:addsd xmm12, xmm6
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm11
 ins:subsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm11
 ins:movapd xmm6, xmm11
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm5
 ins:movapd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm12
 ins:addsd xmm6, xmm12
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm6
 ins:movapd xmm8, xmm6
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm1
 ins:mulsd xmm9, xmm1
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm6
 ins:subsd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm9
 ins:subsd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm12
 ins:addsd xmm11, xmm12
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm9
 ins:addsd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm6
 ins:movapd xmm9, xmm6
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, qword ptr [rsp-0x40]
 ins:mulsd xmm6, qword ptr [rsp-0x40]
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm4
 ins:mulsd xmm11, xmm4
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm8
 ins:subsd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm8
 ins:mulsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm14
 ins:mulsd xmm8, xmm14
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm6
 ins:addsd xmm11, xmm6
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm9
 ins:mulsd xmm5, xmm9
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm14
 ins:mulsd xmm9, xmm14
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm8
 ins:addsd xmm5, xmm8
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm10
 ins:movapd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm5
 ins:addsd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm5
 ins:addsd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm8
 ins:movapd xmm5, xmm8
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm9
 ins:addsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm11
 ins:addsd xmm5, xmm11
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm5
 ins:subsd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm5
 ins:movapd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm7
 ins:ucomisd xmm5, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm4
 ins:addsd xmm6, xmm4
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm5
 ins:movapd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm11
 ins:addsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm4
 ins:movapd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm9
 ins:ucomisd xmm10, xmm9
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm10, qword ptr [rip+0xb7ce7]
 ins:movsd xmm10, qword ptr [rip+0xb7ce7]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm10, xmm5
 ins:xorpd xmm10, xmm5
 reg:xmm10
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm4
 ins:movapd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm9
 ins:ucomisd xmm10, xmm9
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm5, xmm6
 ins:subsd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm4
 ins:addsd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, qword ptr [rsp-0x40]
 ins:addsd xmm9, qword ptr [rsp-0x40]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm8
 ins:addsd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm15
 ins:movapd xmm8, xmm15
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm15, xmm7
 ins:ucomisd xmm15, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm15, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm6
 ins:addsd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm5
 ins:subsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm9
 ins:addsd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm6
 ins:subsd xmm4, xmm6
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm4
 ins:movapd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm5
 ins:addsd xmm9, xmm5
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm8
 ins:addsd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, qword ptr [rsp-0x40]
 ins:addsd xmm9, qword ptr [rsp-0x40]
 reg:xmm9
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm15
 ins:movapd xmm8, xmm15
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm15, xmm7
 ins:ucomisd xmm15, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm15, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm6
 ins:addsd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm5
 ins:subsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm9
 ins:addsd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb86d7]
 ins:movsd xmm4, qword ptr [rip+0xb86d7]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm4
 ins:movapd xmm14, xmm4
 reg:xmm14
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm4
 ins:ucomisd xmm8, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm8, qword ptr [rip+0xb7d17]
 ins:movsd xmm8, qword ptr [rip+0xb7d17]
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm8, xmm15
 ins:xorpd xmm8, xmm15
 reg:xmm8
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb86d7]
 ins:movsd xmm4, qword ptr [rip+0xb86d7]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm4
 ins:movapd xmm14, xmm4
 reg:xmm14
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm4
 ins:ucomisd xmm8, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm15
 ins:movapd xmm4, xmm15
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, qword ptr [rsp-0x30]
 ins:subsd xmm4, qword ptr [rsp-0x30]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb86aa]
 ins:addsd xmm4, qword ptr [rip+0xb86aa]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb8692]
 ins:addsd xmm4, qword ptr [rip+0xb8692]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rsp-0x10]
 ins:addsd xmm4, qword ptr [rsp-0x10]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x30]
 ins:movsd xmm15, qword ptr [rsp-0x30]
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm15
 ins:movapd xmm9, xmm15
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm4
 ins:addsd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm11
 ins:subsd xmm12, xmm11
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm12
 ins:mulsd xmm10, xmm12
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm2
 ins:mulsd xmm12, xmm2
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm15
 ins:movapd xmm10, xmm15
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm9
 ins:subsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm12, qword ptr [rip+0xb8632]
 ins:movsd xmm12, qword ptr [rip+0xb8632]
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm4
 ins:addsd xmm10, xmm4
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm9
 ins:addsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm7
 ins:ucomisd xmm8, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb8168]
 ins:movsd xmm4, qword ptr [rip+0xb8168]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, qword ptr [rsp-0x30]
 ins:subsd xmm4, qword ptr [rsp-0x30]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm15
 ins:addsd xmm4, xmm15
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rsp-0x10]
 ins:addsd xmm4, qword ptr [rsp-0x10]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb813f]
 ins:addsd xmm4, qword ptr [rip+0xb813f]
 reg:xmm4
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x30]
 ins:movsd xmm15, qword ptr [rsp-0x30]
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm15
 ins:movapd xmm9, xmm15
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm4
 ins:addsd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm9
 ins:movapd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm11
 ins:subsd xmm12, xmm11
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm12
 ins:mulsd xmm10, xmm12
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm2
 ins:mulsd xmm12, xmm2
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm15
 ins:movapd xmm10, xmm15
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm9
 ins:subsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm12, qword ptr [rip+0xb8632]
 ins:movsd xmm12, qword ptr [rip+0xb8632]
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm4
 ins:addsd xmm10, xmm4
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm9
 ins:addsd xmm10, xmm9
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm7
 ins:ucomisd xmm8, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb85ed]
 ins:movsd xmm4, qword ptr [rip+0xb85ed]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm4
 ins:movapd xmm15, xmm4
 reg:xmm15
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm4
 ins:ucomisd xmm9, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb7d60]
 ins:movsd xmm4, qword ptr [rip+0xb7d60]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm4, xmm15
 ins:xorpd xmm4, xmm15
 reg:xmm4
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm4
 ins:ucomisd xmm9, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm8
 ins:movapd xmm4, xmm8
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm12
 ins:subsd xmm4, xmm12
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb85c1]
 ins:addsd xmm4, qword ptr [rip+0xb85c1]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb85a9]
 ins:addsd xmm4, qword ptr [rip+0xb85a9]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm11
 ins:addsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm4
 ins:movapd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm4
 ins:addsd xmm12, xmm4
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm11
 ins:subsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm10, qword ptr [rip+0xb854c]
 ins:movsd xmm10, qword ptr [rip+0xb854c]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm7
 ins:ucomisd xmm8, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm12
 ins:addsd xmm11, xmm12
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb8511]
 ins:movsd xmm4, qword ptr [rip+0xb8511]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm4
 ins:movapd xmm15, xmm4
 reg:xmm15
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb81b0]
 ins:movsd xmm4, qword ptr [rip+0xb81b0]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm12
 ins:subsd xmm4, xmm12
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm8
 ins:addsd xmm4, xmm8
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm11
 ins:addsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb8189]
 ins:addsd xmm4, qword ptr [rip+0xb8189]
 reg:xmm4
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm4
 ins:movapd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm10, xmm0
 ins:movapd xmm10, xmm0
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm12
 ins:addsd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm9
 ins:movapd xmm8, xmm9
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm9
 ins:movapd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm13, xmm9
 ins:movapd xmm13, xmm9
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm1
 ins:mulsd xmm8, xmm1
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, qword ptr [rsp-0x50]
 ins:mulsd xmm9, qword ptr [rsp-0x50]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm4
 ins:addsd xmm12, xmm4
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm8
 ins:addsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm0
 ins:movapd xmm8, xmm0
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm3
 ins:mulsd xmm12, xmm3
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm13, xmm11
 ins:subsd xmm13, xmm11
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm2
 ins:mulsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm9
 ins:addsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm13
 ins:mulsd xmm10, xmm13
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm13, xmm2
 ins:mulsd xmm13, xmm2
 reg:xmm13
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm11
 ins:addsd xmm10, xmm11
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm10
 ins:addsd xmm11, xmm10
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm11
 ins:subsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm10, qword ptr [rip+0xb854c]
 ins:movsd xmm10, qword ptr [rip+0xb854c]
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm13
 ins:addsd xmm8, xmm13
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm8
 ins:addsd xmm12, xmm8
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm11
 ins:movapd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm12
 ins:addsd xmm8, xmm12
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm8
 ins:subsd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm8, xmm7
 ins:ucomisd xmm8, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm8, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm11, xmm12
 ins:addsd xmm11, xmm12
 reg:xmm11
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb8511]
 ins:movsd xmm4, qword ptr [rip+0xb8511]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm4
 ins:movapd xmm15, xmm4
 reg:xmm15
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm4
 ins:ucomisd xmm9, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb7d77]
 ins:movsd xmm9, qword ptr [rip+0xb7d77]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm9, xmm8
 ins:xorpd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb8511]
 ins:movsd xmm4, qword ptr [rip+0xb8511]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm15, xmm4
 ins:movapd xmm15, xmm4
 reg:xmm15
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm9, xmm4
 ins:ucomisd xmm9, xmm4
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm8
 ins:movapd xmm4, xmm8
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm10
 ins:subsd xmm4, xmm10
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb84e5]
 ins:addsd xmm4, qword ptr [rip+0xb84e5]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb84cd]
 ins:addsd xmm4, qword ptr [rip+0xb84cd]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm11
 ins:addsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm4
 ins:movapd xmm8, xmm4
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x20]
 ins:movsd xmm15, qword ptr [rsp-0x20]
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm14, qword ptr [rsp-0x48]
 ins:movsd xmm14, qword ptr [rsp-0x48]
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm15
 ins:mulsd xmm6, xmm15
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm1
 ins:mulsd xmm11, xmm1
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm11
 ins:subsd xmm9, xmm11
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm4
 ins:addsd xmm10, xmm4
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm5
 ins:movapd xmm4, xmm5
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm11
 ins:addsd xmm9, xmm11
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, qword ptr [rsp-0x50]
 ins:mulsd xmm8, qword ptr [rsp-0x50]
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm9
 ins:subsd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm9
 ins:mulsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm2
 ins:mulsd xmm9, xmm2
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm11
 ins:mulsd xmm0, xmm11
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm11
 ins:mulsd xmm2, xmm11
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm15
 ins:movapd xmm11, xmm15
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm9
 ins:addsd xmm0, xmm9
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm12
 ins:movapd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm0
 ins:addsd xmm9, xmm0
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm9
 ins:movapd xmm3, xmm9
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm0
 ins:addsd xmm12, xmm0
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm15
 ins:movapd xmm0, xmm15
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm2
 ins:addsd xmm12, xmm2
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm15
 ins:movapd xmm2, xmm15
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm0
 ins:addsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm5
 ins:movapd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm5, qword ptr [rsp-0x18]
 ins:mulsd xmm5, qword ptr [rsp-0x18]
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm10
 ins:addsd xmm3, xmm10
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm2
 ins:subsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm0
 ins:subsd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm5
 ins:addsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm3
 ins:movapd xmm5, xmm3
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm3
 ins:subsd xmm9, xmm3
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm10
 ins:addsd xmm9, xmm10
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm4
 ins:subsd xmm8, xmm4
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm4
 ins:mulsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm4, xmm11
 ins:mulsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm14
 ins:mulsd xmm9, xmm14
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm8
 ins:mulsd xmm2, xmm8
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm14
 ins:movapd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm4
 ins:addsd xmm2, xmm4
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm0
 ins:movapd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb81f8]
 ins:movsd xmm4, qword ptr [rip+0xb81f8]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm10
 ins:subsd xmm4, xmm10
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm8
 ins:addsd xmm4, xmm8
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm11
 ins:addsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, qword ptr [rip+0xb81d1]
 ins:addsd xmm4, qword ptr [rip+0xb81d1]
 reg:xmm4
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm4
 ins:movapd xmm8, xmm4
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm12, xmm0
 ins:movapd xmm12, xmm0
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm15, qword ptr [rsp-0x20]
 ins:movsd xmm15, qword ptr [rsp-0x20]
 reg:xmm15
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm8, xmm10
 ins:addsd xmm8, xmm10
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm14, qword ptr [rsp-0x48]
 ins:movsd xmm14, qword ptr [rsp-0x48]
 reg:xmm14
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm6, xmm15
 ins:mulsd xmm6, xmm15
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm8
 ins:movapd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm11, xmm1
 ins:mulsd xmm11, xmm1
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm10, xmm8
 ins:subsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm11
 ins:subsd xmm9, xmm11
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm4
 ins:addsd xmm10, xmm4
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm5
 ins:movapd xmm4, xmm5
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm11
 ins:addsd xmm9, xmm11
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm8
 ins:movapd xmm11, xmm8
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, qword ptr [rsp-0x50]
 ins:mulsd xmm8, qword ptr [rsp-0x50]
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm10, xmm3
 ins:mulsd xmm10, xmm3
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm9
 ins:subsd xmm11, xmm9
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm12, xmm9
 ins:mulsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm2
 ins:mulsd xmm9, xmm2
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm8
 ins:addsd xmm10, xmm8
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm5
 ins:movapd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm11
 ins:mulsd xmm0, xmm11
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm11
 ins:mulsd xmm2, xmm11
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm15
 ins:movapd xmm11, xmm15
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm9
 ins:addsd xmm0, xmm9
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm12
 ins:movapd xmm9, xmm12
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm0
 ins:addsd xmm9, xmm0
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm12, xmm9
 ins:subsd xmm12, xmm9
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm9
 ins:movapd xmm3, xmm9
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm0
 ins:addsd xmm12, xmm0
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm15
 ins:movapd xmm0, xmm15
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm12, xmm2
 ins:addsd xmm12, xmm2
 reg:xmm12
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm15
 ins:movapd xmm2, xmm15
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm10, xmm12
 ins:addsd xmm10, xmm12
 reg:xmm10
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm0
 ins:addsd xmm2, xmm0
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm5
 ins:movapd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm5, qword ptr [rsp-0x18]
 ins:mulsd xmm5, qword ptr [rsp-0x18]
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm10
 ins:addsd xmm3, xmm10
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm2
 ins:subsd xmm11, xmm2
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm0
 ins:subsd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm5
 ins:addsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm3
 ins:movapd xmm5, xmm3
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm9, xmm3
 ins:subsd xmm9, xmm3
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm10
 ins:addsd xmm9, xmm10
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm4
 ins:subsd xmm8, xmm4
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm4
 ins:mulsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm4, xmm11
 ins:mulsd xmm4, xmm11
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm9, xmm14
 ins:mulsd xmm9, xmm14
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm2, xmm8
 ins:mulsd xmm2, xmm8
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm11, xmm14
 ins:movapd xmm11, xmm14
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm4
 ins:addsd xmm2, xmm4
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm0
 ins:movapd xmm4, xmm0
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm2
 ins:addsd xmm4, xmm2
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm4
 ins:subsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm4
 ins:movapd xmm2, xmm4
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm8
 ins:addsd xmm0, xmm8
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm3
 ins:movapd xmm8, xmm3
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm0
 ins:addsd xmm6, xmm0
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm3
 ins:movapd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm14
 ins:mulsd xmm1, xmm14
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm2, xmm6
 ins:addsd xmm2, xmm6
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm5, xmm0
 ins:subsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm4, xmm2
 ins:subsd xmm4, xmm2
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm2, xmm7
 ins:ucomisd xmm2, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm2, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm0
 ins:addsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm14
 ins:movapd xmm0, xmm14
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm4, xmm6
 ins:addsd xmm4, xmm6
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm8, xmm5
 ins:subsd xmm8, xmm5
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm5
 ins:movapd xmm1, xmm5
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm11, xmm0
 ins:subsd xmm11, xmm0
 reg:xmm11
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm1, xmm0
 ins:mulsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm8
 ins:mulsd xmm0, xmm8
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm5, xmm11
 ins:mulsd xmm5, xmm11
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm1
 ins:movapd xmm6, xmm1
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm8, xmm11
 ins:mulsd xmm8, xmm11
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm0
 ins:addsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x38]
 ins:movsd xmm0, qword ptr [rsp-0x38]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm3
 ins:mulsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm3, xmm2
 ins:movapd xmm3, xmm2
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm5
 ins:addsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm9
 ins:addsd xmm0, xmm9
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm1, xmm6
 ins:subsd xmm1, xmm6
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm5
 ins:addsd xmm1, xmm5
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm6
 ins:movapd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm8
 ins:addsd xmm1, xmm8
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm6
 ins:movapd xmm1, xmm6
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm6, xmm2
 ins:movapd xmm6, xmm2
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm5, xmm1
 ins:subsd xmm5, xmm1
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm1
 ins:addsd xmm3, xmm1
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm0
 ins:addsd xmm5, xmm0
 reg:xmm5
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm1, xmm7
 ins:ucomisd xmm1, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm1, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm0
 ins:ucomisd xmm6, xmm0
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm3
 ins:subsd xmm2, xmm3
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm5
 ins:addsd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rsp-0x48]
 ins:movsd xmm5, qword ptr [rsp-0x48]
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm5
 ins:movapd xmm2, xmm5
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm7
 ins:ucomisd xmm5, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm5
 ins:movapd xmm4, xmm5
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm1, xmm7
 ins:ucomisd xmm1, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm1, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm0
 ins:ucomisd xmm4, xmm0
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x48]
 ins:movsd xmm0, qword ptr [rsp-0x48]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm2
 ins:subsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x38]
 ins:addsd xmm0, qword ptr [rsp-0x38]
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm2
 ins:addsd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm2
 ins:movapd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 Exe __dubcos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x10]
 ins:movsd xmm0, qword ptr [rsp+0x10]
 reg:xmm0
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x18]
 ins:movsd xmm0, qword ptr [rsp+0x18]
 reg:xmm0
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included add rsp, 0x20
 ins:add rsp, 0x20
 reg:rsp
 Exe __docos
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __docos
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xac9d3]
 ins:vmovsd xmm1, qword ptr [rip+0xac9d3]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x40]
 ins:vmovsd xmm0, qword ptr [rsp+0x40]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rsp+0x48]
 ins:vmulsd xmm1, xmm1, qword ptr [rsp+0x48]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x8]
 ins:vmovsd xmm2, qword ptr [rsp+0x8]
 reg:xmm2
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm1
 ins:vxorpd xmm1, xmm1, xmm1
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm9, qword ptr [rip+0xb7cff]
 ins:movsd xmm9, qword ptr [rip+0xb7cff]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm9, xmm4
 ins:xorpd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm10, xmm9
 ins:ucomisd xmm10, xmm9
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm5, xmm6
 ins:subsd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm9, xmm5
 ins:movapd xmm9, xmm5
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm4
 ins:addsd xmm9, xmm4
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, qword ptr [rsp-0x40]
 ins:addsd xmm9, qword ptr [rsp-0x40]
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm9, xmm8
 ins:addsd xmm9, xmm8
 reg:xmm9
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm5, xmm9
 ins:movapd xmm5, xmm9
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm8, xmm15
 ins:movapd xmm8, xmm15
 reg:xmm8
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm15, xmm7
 ins:ucomisd xmm15, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm15, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm5, xmm6
 ins:addsd xmm5, xmm6
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm6, xmm5
 ins:subsd xmm6, xmm5
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm6, xmm9
 ins:addsd xmm6, xmm9
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm4, qword ptr [rip+0xb86d7]
 ins:movsd xmm4, qword ptr [rip+0xb86d7]
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm7
 ins:ucomisd xmm4, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm4, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm14, xmm4
 ins:movapd xmm14, xmm4
 reg:xmm14
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm6, qword ptr [rip+0xb7da8]
 ins:movsd xmm6, qword ptr [rip+0xb7da8]
 reg:xmm6
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm6, xmm2
 ins:xorpd xmm6, xmm2
 reg:xmm6
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm1, xmm7
 ins:ucomisd xmm1, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm1, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm0
 ins:ucomisd xmm6, xmm0
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm3
 ins:subsd xmm2, xmm3
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm5
 ins:addsd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rsp-0x48]
 ins:movsd xmm5, qword ptr [rsp-0x48]
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm5
 ins:movapd xmm2, xmm5
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm7
 ins:ucomisd xmm5, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm5
 ins:movapd xmm4, xmm5
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm1, xmm7
 ins:ucomisd xmm1, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm1, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm0
 ins:ucomisd xmm4, xmm0
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm2
 ins:addsd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x48]
 ins:movsd xmm0, qword ptr [rsp-0x48]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x38]
 ins:addsd xmm0, qword ptr [rsp-0x38]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm2
 ins:addsd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm2
 ins:movapd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rip+0xb7df0]
 ins:movsd xmm0, qword ptr [rip+0xb7df0]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included xorpd xmm0, xmm1
 ins:xorpd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm0
 ins:ucomisd xmm4, xmm0
 reg:rflags
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm2
 ins:addsd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x48]
 ins:movsd xmm0, qword ptr [rsp-0x48]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x38]
 ins:addsd xmm0, qword ptr [rsp-0x38]
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm2
 ins:addsd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm2
 ins:movapd xmm1, xmm2
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 Exe __dubcos
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm4
 ins:subsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm5
 ins:subsd xmm0, xmm5
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm6
 ins:addsd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm2, xmm0
 ins:movapd xmm2, xmm0
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rsp-0x30]
 ins:movsd xmm3, qword ptr [rsp-0x30]
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm2, xmm4
 ins:addsd xmm2, xmm4
 reg:xmm2
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm4, xmm2
 ins:subsd xmm4, xmm2
 reg:xmm4
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm5, xmm2
 ins:movapd xmm5, xmm2
 reg:xmm5
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm2, xmm1
 ins:ucomisd xmm2, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm2, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm3, xmm2
 ins:addsd xmm3, xmm2
 reg:xmm3
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm4, xmm0
 ins:addsd xmm4, xmm0
 reg:xmm4
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm6, qword ptr [rsp-0x30]
 ins:movsd xmm6, qword ptr [rsp-0x30]
 reg:xmm6
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm6, xmm1
 ins:ucomisd xmm6, xmm1
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm6, xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm0, xmm6
 ins:movapd xmm0, xmm6
 reg:xmm0
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm0
 ins:ucomisd xmm5, xmm0
 reg:rflags
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp-0x30]
 ins:movsd xmm0, qword ptr [rsp-0x30]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm0, xmm3
 ins:subsd xmm0, xmm3
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rsp-0x20]
 ins:addsd xmm0, qword ptr [rsp-0x20]
 reg:xmm0
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubsin
 Exe __dubsin
 INSTSELECTOR: instruction to be included movapd xmm1, xmm3
 ins:movapd xmm1, xmm3
 reg:xmm1
 Exe __dubsin
 INSTSELECTOR: instruction to be included addsd xmm1, xmm0
 ins:addsd xmm1, xmm0
 reg:xmm1
 Exe __dubsin
 Exe __dubsin
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm3
 ins:vmovapd xmm1, xmm3
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae111]
 ins:vmovsd xmm0, qword ptr [rip+0xae111]
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rsp+0x68]
 ins:vmulsd xmm0, xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp]
 ins:vmovsd xmm2, qword ptr [rsp]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm6
 ins:vmovapd xmm0, xmm6
 reg:xmm0
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe csloww1
 Exe csloww1
 Exe csloww1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x28]
 ins:vmovsd xmm0, qword ptr [rsp+0x28]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rsp+0x18]
 ins:vmovsd xmm5, qword ptr [rsp+0x18]
 reg:xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rsp+0x8]
 ins:vmovsd xmm6, qword ptr [rsp+0x8]
 reg:xmm6
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm5
 ins:vucomisd xmm0, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x10]
 ins:vmovsd xmm2, qword ptr [rsp+0x10]
 reg:xmm2
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm5
 ins:vucomisd xmm2, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xaeed0]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xaeed0]
 reg:xmm0
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaef02]
 ins:vmovsd xmm1, qword ptr [rip+0xaef02]
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x20]
 ins:vmovsd xmm0, qword ptr [rsp+0x20]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe csloww1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm5
 ins:vucomisd xmm6, xmm5
 reg:rflags
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf05e]
 ins:vmovsd xmm1, qword ptr [rip+0xaf05e]
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm5
 ins:vucomisd xmm2, xmm5
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm2, xmm5
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaee0c]
 ins:vmovsd xmm1, qword ptr [rip+0xaee0c]
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm0
 ins:vmulsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaee3a]
 ins:vmovsd xmm3, qword ptr [rip+0xaee3a]
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm2
 ins:vmulsd xmm3, xmm3, xmm2
 reg:xmm3
 Exe csloww1
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm3
 ins:vsubsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x20]
 ins:vmovsd xmm0, qword ptr [rsp+0x20]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww1
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe csloww1
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe csloww1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm2
 ins:vmovapd xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm13
 ins:vsubsd xmm1, xmm1, xmm13
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm12
 ins:vsubsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm12
 ins:vsubsd xmm1, xmm1, xmm12
 reg:xmm1
 Exe __sin_avx
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb7bc8]
 ins:movsd xmm2, qword ptr [rip+0xb7bc8]
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included xorpd xmm0, xmm2
 ins:xorpd xmm0, xmm2
 reg:xmm0
 Exe __docos
 INSTSELECTOR: instruction to be included xorpd xmm1, xmm2
 ins:xorpd xmm1, xmm2
 reg:xmm1
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm2, qword ptr [rip+0xb7bc2]
 ins:movsd xmm2, qword ptr [rip+0xb7bc2]
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7b1a]
 ins:movsd xmm3, qword ptr [rip+0xb7b1a]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm2
 ins:mulsd xmm3, xmm2
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm0
 ins:ucomisd xmm3, xmm0
 reg:rflags
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7fa4]
 ins:movsd xmm3, qword ptr [rip+0xb7fa4]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included mulsd xmm3, xmm2
 ins:mulsd xmm3, xmm2
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm3, xmm0
 ins:ucomisd xmm3, xmm0
 reg:rflags
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7b7e]
 ins:movsd xmm3, qword ptr [rip+0xb7b7e]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __docos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm3
 ins:addsd xmm0, xmm3
 reg:xmm0
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm0, xmm4
 ins:ucomisd xmm0, xmm4
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm0, xmm4
 Exe __docos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm2
 ins:movapd xmm1, xmm2
 reg:xmm1
 Exe __docos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __docos
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae111]
 ins:vmovsd xmm0, qword ptr [rip+0xae111]
 reg:xmm0
 Exe __sin_avx
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm3, qword ptr [rip+0xb7b7e]
 ins:movsd xmm3, qword ptr [rip+0xb7b7e]
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __docos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm2
 ins:movapd xmm0, xmm2
 reg:xmm0
 Exe __docos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm3
 ins:addsd xmm0, xmm3
 reg:xmm0
 Exe __docos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm0
 ins:subsd xmm2, xmm0
 reg:xmm2
 Exe __docos
 INSTSELECTOR: instruction to be included ucomisd xmm0, xmm4
 ins:ucomisd xmm0, xmm4
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm0, xmm4
 Exe __docos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm2
 ins:movapd xmm1, xmm2
 reg:xmm1
 Exe __docos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x10]
 ins:lea rdi, ptr [rsp+0x10]
 reg:rdi
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x10]
 ins:movsd xmm0, qword ptr [rsp+0x10]
 reg:xmm0
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rsp+0x18]
 ins:movsd xmm0, qword ptr [rsp+0x18]
 reg:xmm0
 Exe __docos
 Exe __docos
 INSTSELECTOR: instruction to be included add rsp, 0x20
 ins:add rsp, 0x20
 reg:rsp
 Exe __docos
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __docos
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm5
 ins:vmovapd xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm0
 ins:vmovapd xmm4, xmm0
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm4
 ins:vmovapd xmm8, xmm4
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included sub rsp, 0x30
 ins:sub rsp, 0x30
 reg:rsp
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xaf66b]
 ins:vmovsd xmm3, qword ptr [rip+0xaf66b]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm4
 ins:vmulsd xmm8, xmm8, xmm4
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf523]
 ins:vmovsd xmm0, qword ptr [rip+0xaf523]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm4
 ins:vmovapd xmm7, xmm4
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm4
 ins:vmovapd xmm9, xmm4
 reg:xmm9
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf62e]
 ins:vmovsd xmm0, qword ptr [rip+0xaf62e]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rip+0xaf646]
 ins:vaddsd xmm3, xmm3, qword ptr [rip+0xaf646]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm0
 ins:vmovapd xmm6, xmm0
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm5
 ins:vmulsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm5
 ins:vsubsd xmm7, xmm7, xmm5
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm5
 ins:vmulsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm1
 ins:vaddsd xmm7, xmm7, xmm1
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rip+0xaf635]
 ins:vaddsd xmm3, xmm3, qword ptr [rip+0xaf635]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm5
 ins:vmulsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm6
 ins:vaddsd xmm9, xmm9, xmm6
 reg:xmm9
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rip+0xaf630]
 ins:vaddsd xmm3, xmm3, qword ptr [rip+0xaf630]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, qword ptr [rip+0xaf5d3]
 ins:vaddsd xmm3, xmm3, qword ptr [rip+0xaf5d3]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm8
 ins:vmulsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaf4b6]
 ins:vmovsd xmm8, qword ptr [rip+0xaf4b6]
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm0
 ins:vmulsd xmm8, xmm8, xmm0
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm5
 ins:vmulsd xmm8, xmm8, xmm5
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm0
 ins:vmovapd xmm5, xmm0
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm9
 ins:vmovapd xmm0, xmm9
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm7
 ins:vmulsd xmm5, xmm5, xmm7
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm7
 ins:vmulsd xmm5, xmm5, xmm7
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm8
 ins:vaddsd xmm3, xmm3, xmm8
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm7
 ins:vmulsd xmm5, xmm5, xmm7
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm4
 ins:vmulsd xmm3, xmm3, xmm4
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm5
 ins:vaddsd xmm3, xmm3, xmm5
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm9
 ins:vsubsd xmm5, xmm5, xmm9
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm3, xmm3, xmm1
 ins:vaddsd xmm3, xmm3, xmm1
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm6
 ins:vaddsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm9
 ins:vmovapd xmm6, xmm9
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm3
 ins:vaddsd xmm5, xmm5, xmm3
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vxorpd xmm3, xmm3, xmm3
 ins:vxorpd xmm3, xmm3, xmm3
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm0
 ins:vsubsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm5
 ins:vaddsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm3
 ins:vucomisd xmm6, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm6, xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xaf464]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xaf464]
 reg:xmm6
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaf4cc]
 ins:vmovsd xmm5, qword ptr [rip+0xaf4cc]
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm2
 ins:vmulsd xmm5, xmm5, xmm2
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm5
 ins:vaddsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe csloww
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included add rsp, 0x30
 ins:add rsp, 0x30
 reg:rsp
 Exe csloww
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe csloww
 Exe __cos_avx
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaf2c2]
 ins:vmovsd xmm5, qword ptr [rip+0xaf2c2]
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm2
 ins:vmulsd xmm5, xmm5, xmm2
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm5
 ins:vsubsd xmm6, xmm6, xmm5
 reg:xmm6
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm6, xmm0
 ins:vucomisd xmm6, xmm0
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x20]
 ins:lea rbx, ptr [rsp+0x20]
 reg:rbx
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x20]
 ins:lea rbx, ptr [rsp+0x20]
 reg:rbx
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf398]
 ins:vmovsd xmm0, qword ptr [rip+0xaf398]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm4
 ins:vxorpd xmm0, xmm0, xmm4
 reg:xmm0
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x10]
 ins:vmovsd xmm3, qword ptr [rsp+0x10]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x8]
 ins:vmovsd xmm2, qword ptr [rsp+0x8]
 reg:xmm2
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rsp]
 ins:vmovsd xmm4, qword ptr [rsp]
 reg:xmm4
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x28]
 ins:vmovsd xmm1, qword ptr [rsp+0x28]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaf3fb]
 ins:vmovsd xmm5, qword ptr [rip+0xaf3fb]
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm3
 ins:vucomisd xmm1, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm1, xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm5
 ins:vmulsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf453]
 ins:vmovsd xmm0, qword ptr [rip+0xaf453]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x20]
 ins:vmovsd xmm0, qword ptr [rsp+0x20]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf216]
 ins:vmovsd xmm0, qword ptr [rip+0xaf216]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x20]
 ins:vmovsd xmm0, qword ptr [rsp+0x20]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf35d]
 ins:vmovsd xmm1, qword ptr [rip+0xaf35d]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm2
 ins:vmovapd xmm4, xmm2
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf349]
 ins:vmovsd xmm0, qword ptr [rip+0xaf349]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm1
 ins:vmovapd xmm7, xmm1
 reg:xmm7
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf360]
 ins:vmovsd xmm1, qword ptr [rip+0xaf360]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included and eax, 0x3
 ins:and eax, 0x3
 reg:eax
 Exe csloww
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm7
 ins:vmovapd xmm0, xmm7
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xaf322]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xaf322]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf32e]
 ins:vmovsd xmm1, qword ptr [rip+0xaf32e]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, qword ptr [rip+0xaf312]
 ins:vmulsd xmm7, xmm7, qword ptr [rip+0xaf312]
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm4
 ins:vmovapd xmm1, xmm4
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm7
 ins:vsubsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm4
 ins:vmovapd xmm6, xmm4
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm7
 ins:vsubsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm4
 ins:vsubsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm6
 ins:vaddsd xmm1, xmm1, xmm6
 reg:xmm1
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf3e2]
 ins:vmovsd xmm1, qword ptr [rip+0xaf3e2]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included add rsp, 0x30
 ins:add rsp, 0x30
 reg:rsp
 Exe csloww
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe csloww
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rsp]
 ins:vmovsd xmm4, qword ptr [rsp]
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x8]
 ins:vmovsd xmm2, qword ptr [rsp+0x8]
 reg:xmm2
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x10]
 ins:vmovsd xmm3, qword ptr [rsp+0x10]
 reg:xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x28]
 ins:vmovsd xmm1, qword ptr [rsp+0x28]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaf3fb]
 ins:vmovsd xmm5, qword ptr [rip+0xaf3fb]
 reg:xmm5
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm3
 ins:vucomisd xmm1, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm1, xmm3
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm5
 ins:vmulsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf453]
 ins:vmovsd xmm0, qword ptr [rip+0xaf453]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x20]
 ins:vmovsd xmm0, qword ptr [rsp+0x20]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe csloww
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf35d]
 ins:vmovsd xmm1, qword ptr [rip+0xaf35d]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm2
 ins:vmovapd xmm4, xmm2
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaf349]
 ins:vmovsd xmm0, qword ptr [rip+0xaf349]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm1
 ins:vmovapd xmm7, xmm1
 reg:xmm7
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf360]
 ins:vmovsd xmm1, qword ptr [rip+0xaf360]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included and eax, 0x3
 ins:and eax, 0x3
 reg:eax
 Exe csloww
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm7
 ins:vmovapd xmm0, xmm7
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xaf322]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xaf322]
 reg:xmm0
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xaf32e]
 ins:vmovsd xmm1, qword ptr [rip+0xaf32e]
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm7
 ins:vmulsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, qword ptr [rip+0xaf312]
 ins:vmulsd xmm7, xmm7, qword ptr [rip+0xaf312]
 reg:xmm7
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm4
 ins:vmovapd xmm1, xmm4
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm7
 ins:vsubsd xmm1, xmm1, xmm7
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm1
 ins:vsubsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm4
 ins:vmovapd xmm6, xmm4
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm1
 ins:vmovapd xmm4, xmm1
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm6, xmm6, xmm7
 ins:vsubsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm4
 ins:vsubsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe csloww
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm6
 ins:vaddsd xmm1, xmm1, xmm6
 reg:xmm1
 Exe csloww
 Exe csloww
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe csloww
 Exe csloww
 Exe csloww
 Exe csloww
 Exe csloww1
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaef08]
 ins:vmovsd xmm0, qword ptr [rip+0xaef08]
 reg:xmm0
 Exe csloww1
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm6
 ins:vxorpd xmm0, xmm0, xmm6
 reg:xmm0
 Exe csloww1
 Exe csloww1
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe csloww1
 Exe csloww1
 Exe csloww1
 Exe csloww1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad7b2]
 ins:vmovsd xmm0, qword ptr [rip+0xad7b2]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm15
 ins:vmovapd xmm9, xmm15
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm15
 ins:vaddsd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xad79b]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xad79b]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm9
 ins:vmovapd xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm9
 ins:vmovapd xmm13, xmm9
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm9
 ins:vmulsd xmm10, xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm9
 ins:vmovapd xmm12, xmm9
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad69d]
 ins:vmovsd xmm0, qword ptr [rip+0xad69d]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm10
 ins:vmulsd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm0
 ins:vaddsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm10
 ins:vmulsd xmm13, xmm13, xmm10
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm0
 ins:vsubsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm7
 ins:vmulsd xmm13, xmm13, xmm7
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm8
 ins:vmovapd xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm8
 ins:vmulsd xmm13, xmm13, xmm8
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm7
 ins:vsubsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm14
 ins:vaddsd xmm8, xmm8, xmm14
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm11
 ins:vmulsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm9
 ins:vmulsd xmm8, xmm8, xmm9
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm13
 ins:vaddsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm9
 ins:vmovapd xmm8, xmm9
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm11
 ins:vmulsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm12
 ins:vsubsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm1
 ins:vmulsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm1
 ins:vaddsd xmm8, xmm8, xmm1
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm12
 ins:vmulsd xmm7, xmm7, xmm12
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm9
 ins:vsubsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm11
 ins:vmovapd xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm4
 ins:vsubsd xmm11, xmm11, xmm4
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm7
 ins:vaddsd xmm11, xmm11, xmm7
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm11
 ins:vaddsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, qword ptr [rip+0xad584]
 ins:vmulsd xmm4, xmm4, qword ptr [rip+0xad584]
 reg:xmm4
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad5ec]
 ins:vmovsd xmm0, qword ptr [rip+0xad5ec]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm5
 ins:vmovapd xmm2, xmm5
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xacf97]
 ins:vmovsd xmm0, qword ptr [rip+0xacf97]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm5
 ins:vmovapd xmm2, xmm5
 reg:xmm2
 Exe __sin_avx
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm1, xmm3
 ins:subsd xmm1, xmm3
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm2
 ins:addsd xmm0, xmm2
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm4
 ins:addsd xmm0, xmm4
 reg:xmm0
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm0, xmm5
 ins:addsd xmm0, xmm5
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movsd xmm5, qword ptr [rsp-0x48]
 ins:movsd xmm5, qword ptr [rsp-0x48]
 reg:xmm5
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm1, xmm3
 ins:addsd xmm1, xmm3
 reg:xmm1
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm2, xmm5
 ins:movapd xmm2, xmm5
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm5, xmm7
 ins:ucomisd xmm5, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm5, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm4, xmm5
 ins:movapd xmm4, xmm5
 reg:xmm4
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm3, xmm1
 ins:subsd xmm3, xmm1
 reg:xmm3
 Exe __dubcos
 INSTSELECTOR: instruction to be included subsd xmm2, xmm1
 ins:subsd xmm2, xmm1
 reg:xmm2
 Exe __dubcos
 INSTSELECTOR: instruction to be included addsd xmm3, xmm0
 ins:addsd xmm3, xmm0
 reg:xmm3
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm1, xmm7
 ins:ucomisd xmm1, xmm7
 reg:rflags
 NORMAL FLAG REG: inst ucomisd xmm1, xmm7
 Exe __dubcos
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __dubcos
 Exe __dubcos
 INSTSELECTOR: instruction to be included ucomisd xmm4, xmm0
 ins:ucomisd xmm4, xmm0
 reg:rflags
 Exe __dubcos
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x68]
 ins:vmovsd xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x20]
 ins:vmovsd xmm3, qword ptr [rsp+0x20]
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm15, qword ptr [rsp]
 ins:vmovsd xmm15, qword ptr [rsp]
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x18]
 ins:vmovsd xmm2, qword ptr [rsp+0x18]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xad08e]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xad08e]
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad0b6]
 ins:vmovsd xmm0, qword ptr [rip+0xad0b6]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xace88]
 ins:vmovsd xmm0, qword ptr [rip+0xace88]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xabdd1]
 ins:vmovsd xmm4, qword ptr [rip+0xabdd1]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm4
 ins:vaddsd xmm1, xmm1, xmm4
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 ins:lea rdi, ptr [rsp+0x40]
 reg:rdi
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x8]
 ins:vmovsd xmm1, qword ptr [rsp+0x8]
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x48]
 ins:vmovsd xmm0, qword ptr [rsp+0x48]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x18]
 ins:vmovsd xmm3, qword ptr [rsp+0x18]
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x10]
 ins:vmovsd xmm2, qword ptr [rsp+0x10]
 reg:xmm2
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xabd39]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xabd39]
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xabd61]
 ins:vmovsd xmm1, qword ptr [rip+0xabd61]
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x40]
 ins:vmovsd xmm0, qword ptr [rsp+0x40]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rip+0xab9de]
 ins:vmovsd xmm3, qword ptr [rip+0xab9de]
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm3, xmm3, xmm2
 ins:vmulsd xmm3, xmm3, xmm2
 reg:xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm3
 ins:vsubsd xmm1, xmm1, xmm3
 reg:xmm1
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x40]
 ins:vmovsd xmm0, qword ptr [rsp+0x40]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm1
 ins:vucomisd xmm0, xmm1
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x60]
 ins:lea r12, ptr [rsp+0x60]
 reg:r12
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm15, qword ptr [rsp]
 ins:vmovsd xmm15, qword ptr [rsp]
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rsp+0x18]
 ins:vmovsd xmm5, qword ptr [rsp+0x18]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rsp+0x20]
 ins:vmovsd xmm6, qword ptr [rsp+0x20]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rsp+0x28]
 ins:vmovsd xmm4, qword ptr [rsp+0x28]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x30]
 ins:vmovsd xmm2, qword ptr [rsp+0x30]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x38]
 ins:vmovsd xmm3, qword ptr [rsp+0x38]
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x68]
 ins:vmovsd xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xad31a]
 ins:vmovsd xmm7, qword ptr [rip+0xad31a]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm7
 ins:vmulsd xmm0, xmm0, xmm7
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xad372]
 ins:vmovsd xmm1, qword ptr [rip+0xad372]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xacea7]
 ins:vmovsd xmm1, qword ptr [rip+0xacea7]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm1
 ins:vsubsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xad283]
 ins:vmovsd xmm5, qword ptr [rip+0xad283]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm6
 ins:vmulsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xad26b]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xad26b]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 NORMAL FLAG REG: inst test al, 0x2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm4
 ins:vmovapd xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm0
 ins:vmovapd xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm5
 ins:vsubsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm6
 ins:vsubsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm6
 ins:vsubsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 Exe __cos_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xad283]
 ins:vmovsd xmm5, qword ptr [rip+0xad283]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm6
 ins:vmulsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rip+0xad26b]
 ins:vmulsd xmm6, xmm6, qword ptr [rip+0xad26b]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 NORMAL FLAG REG: inst test al, 0x2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm4
 ins:vmovapd xmm1, xmm4
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm0
 ins:vmovapd xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm5
 ins:vsubsd xmm1, xmm1, xmm5
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm6
 ins:vsubsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm6
 ins:vsubsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm1, xmm1, xmm0
 ins:vaddsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad3eb]
 ins:vmovsd xmm0, qword ptr [rip+0xad3eb]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm4, xmm4, xmm0
 ins:vxorpd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rip+0xad324]
 ins:vmovsd xmm12, qword ptr [rip+0xad324]
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm12
 ins:vxorpd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm12, xmm12, xmm1
 ins:vxorpd xmm12, xmm12, xmm1
 reg:xmm12
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadecf]
 ins:vmovsd xmm4, qword ptr [rip+0xadecf]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xaddef]
 ins:vmovsd xmm7, qword ptr [rip+0xaddef]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xaddeb]
 ins:vmovsd xmm8, qword ptr [rip+0xaddeb]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xaddfb]
 ins:vmovsd xmm5, qword ptr [rip+0xaddfb]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xaddfb]
 ins:vmovsd xmm6, qword ptr [rip+0xaddfb]
 reg:xmm6
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xade9e]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xade9e]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm0
 ins:vmovapd xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm0
 ins:vmulsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm13
 ins:vmovapd xmm4, xmm13
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm13
 ins:vmulsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm4
 ins:vmulsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadd8a]
 ins:vmovsd xmm4, qword ptr [rip+0xadd8a]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm12
 ins:vaddsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm10
 ins:vmulsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm9, xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm13
 ins:vmulsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rax*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rax*8+0x4ceb00]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm13
 ins:vmulsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm0
 ins:vaddsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm14
 ins:vmulsd xmm12, xmm12, xmm14
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm12
 ins:vsubsd xmm9, xmm9, xmm12
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm9, xmm9, xmm10
 ins:vaddsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xadd7e]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xadd7e]
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xaeada]
 ins:vmovsd xmm0, qword ptr [rip+0xaeada]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm2, xmm2, xmm0
 ins:vxorpd xmm2, xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm2
 ins:vmovapd xmm0, xmm2
 reg:xmm0
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad06e]
 ins:vmovsd xmm0, qword ptr [rip+0xad06e]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xacfe6]
 ins:vmovsd xmm10, qword ptr [rip+0xacfe6]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm15
 ins:vmovapd xmm9, xmm15
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm15
 ins:vsubsd xmm10, xmm10, xmm15
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm9, xmm9, xmm0
 ins:vxorpd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm1
 ins:vxorpd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm0
 ins:vmovapd xmm11, xmm0
 reg:xmm11
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm3
 ins:vmovapd xmm0, xmm3
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp]
 ins:mov rax, qword ptr [rsp]
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, qword ptr [rip+0xacfbb]
 ins:vsubsd xmm10, xmm10, qword ptr [rip+0xacfbb]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vcmpsd xmm0, xmm0, xmm15, 0x1
 ins:vcmpsd xmm0, xmm0, xmm15, 0x1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vandpd xmm1, xmm1, xmm0
 ins:vandpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm10
 ins:vsubsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm1
 ins:vmovapd xmm10, xmm1
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vandnpd xmm1, xmm1, xmm11
 ins:vandnpd xmm1, xmm1, xmm11
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vorpd xmm1, xmm1, xmm10
 ins:vorpd xmm1, xmm1, xmm10
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm9
 ins:vmovapd xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm9
 ins:vmovapd xmm13, xmm9
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm9
 ins:vmulsd xmm10, xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm9
 ins:vmovapd xmm12, xmm9
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm11, qword ptr [rdx*8+0x4ceb00]
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad69d]
 ins:vmovsd xmm0, qword ptr [rip+0xad69d]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm10
 ins:vmulsd xmm7, xmm7, xmm10
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm0
 ins:vaddsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm10
 ins:vmulsd xmm13, xmm13, xmm10
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rdx*8+0x4ceb00]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm0
 ins:vsubsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm7
 ins:vmulsd xmm13, xmm13, xmm7
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm8
 ins:vmovapd xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm7, xmm7, xmm0
 ins:vaddsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm0
 ins:vsubsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm8
 ins:vmulsd xmm13, xmm13, xmm8
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm7
 ins:vsubsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm10
 ins:vmulsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm0, xmm0, qword ptr [rax*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm14
 ins:vaddsd xmm8, xmm8, xmm14
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm11
 ins:vmulsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm9
 ins:vmulsd xmm8, xmm8, xmm9
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm13
 ins:vaddsd xmm0, xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm8, xmm9
 ins:vmovapd xmm8, xmm9
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm11
 ins:vmulsd xmm9, xmm9, xmm11
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm8, xmm8, xmm12
 ins:vsubsd xmm8, xmm8, xmm12
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm1
 ins:vmulsd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm8, xmm8, xmm1
 ins:vaddsd xmm8, xmm8, xmm1
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm8, xmm8, xmm7
 ins:vmulsd xmm8, xmm8, xmm7
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm12
 ins:vmulsd xmm7, xmm7, xmm12
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm8
 ins:vaddsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm9
 ins:vsubsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm11
 ins:vmovapd xmm4, xmm11
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm7
 ins:vaddsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm4
 ins:vsubsd xmm11, xmm11, xmm4
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm7
 ins:vaddsd xmm11, xmm11, xmm7
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm11
 ins:vaddsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, qword ptr [rip+0xad584]
 ins:vmulsd xmm4, xmm4, qword ptr [rip+0xad584]
 reg:xmm4
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad5ec]
 ins:vmovsd xmm0, qword ptr [rip+0xad5ec]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xacf57]
 ins:vmovsd xmm0, qword ptr [rip+0xacf57]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm15
 ins:vxorpd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xacf2c]
 ins:vmovsd xmm0, qword ptr [rip+0xacf2c]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm15
 ins:vxorpd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x38]
 ins:vmovsd xmm3, qword ptr [rsp+0x38]
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp+0x30]
 ins:vmovsd xmm2, qword ptr [rsp+0x30]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rsp+0x28]
 ins:vmovsd xmm4, qword ptr [rsp+0x28]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rsp+0x20]
 ins:vmovsd xmm6, qword ptr [rsp+0x20]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rsp+0x18]
 ins:vmovsd xmm5, qword ptr [rsp+0x18]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm15, qword ptr [rsp]
 ins:vmovsd xmm15, qword ptr [rsp]
 reg:xmm15
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x68]
 ins:vmovsd xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xad31a]
 ins:vmovsd xmm7, qword ptr [rip+0xad31a]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm7
 ins:vmulsd xmm0, xmm0, xmm7
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rip+0xad372]
 ins:vmovsd xmm1, qword ptr [rip+0xad372]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, xmm2
 ins:vmulsd xmm1, xmm1, xmm2
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm15
 ins:vmovapd xmm5, xmm15
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 ins:cmp r12d, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp r12d, 0x1
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm15
 ins:vmulsd xmm5, xmm5, xmm15
 reg:xmm5
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac275]
 ins:vmovsd xmm0, qword ptr [rip+0xac275]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm5
 ins:vucomisd xmm0, xmm5
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac30b]
 ins:vmovsd xmm4, qword ptr [rip+0xac30b]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xac223]
 ins:vmovsd xmm0, qword ptr [rip+0xac223]
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm1
 ins:vmulsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac303]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac303]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac307]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac307]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac30b]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac30b]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xac30f]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xac30f]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm15
 ins:vmulsd xmm4, xmm4, xmm15
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm5
 ins:vmulsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm15
 ins:vmovapd xmm5, xmm15
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm1
 ins:vaddsd xmm4, xmm4, xmm1
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm4
 ins:vmovapd xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm15
 ins:vaddsd xmm0, xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm4
 ins:vaddsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm3
 ins:vucomisd xmm5, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm5, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, qword ptr [rip+0xac1e5]
 ins:vmulsd xmm5, xmm5, qword ptr [rip+0xac1e5]
 reg:xmm5
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm1
 ins:vmovapd xmm9, xmm1
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac11c]
 ins:vmovsd xmm4, qword ptr [rip+0xac11c]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm4
 ins:vsubsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac025]
 ins:vmovsd xmm4, qword ptr [rip+0xac025]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm0
 ins:vmovapd xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm0
 ins:vmovapd xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm0
 ins:vmulsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm7
 ins:vmulsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xabfeb]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xabfeb]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm4
 ins:vmulsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xabfef]
 ins:vmovsd xmm4, qword ptr [rip+0xabfef]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm9
 ins:vaddsd xmm6, xmm6, xmm9
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xabfe6]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xabfe6]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm6
 ins:vmulsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xabfc9]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xabfc9]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 ins:vmulsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm8
 ins:vmovapd xmm4, xmm8
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm8
 ins:vmovapd xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm6
 ins:vaddsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm5
 ins:vaddsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, qword ptr [rip+0xabfe1]
 ins:vmulsd xmm4, xmm4, qword ptr [rip+0xabfe1]
 reg:xmm4
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm11
 ins:vaddsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm0
 ins:vucomisd xmm4, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rip+0xabc3a]
 ins:vmovsd xmm9, qword ptr [rip+0xabc3a]
 reg:xmm9
 Exe __cos_avx
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm0, xmm0, xmm9
 ins:vxorpd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vxorpd xmm9, xmm9, xmm1
 ins:vxorpd xmm9, xmm9, xmm1
 reg:xmm9
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac11c]
 ins:vmovsd xmm4, qword ptr [rip+0xac11c]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm4
 ins:vmovapd xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm4
 ins:vsubsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x8]
 ins:mov rdx, qword ptr [rsp+0x8]
 reg:rdx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xac025]
 ins:vmovsd xmm4, qword ptr [rip+0xac025]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included movsxd rax, edx
 ins:movsxd rax, edx
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm8, qword ptr [rax*8+0x4ceb00]
 reg:xmm8
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm7, xmm0
 ins:vmovapd xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm6, xmm0
 ins:vmovapd xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x1]
 ins:lea eax, ptr [rdx+0x1]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm0
 ins:vmulsd xmm7, xmm7, xmm0
 reg:xmm7
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm7
 ins:vmulsd xmm6, xmm6, xmm7
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xabfeb]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xabfeb]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, xmm4
 ins:vmulsd xmm6, xmm6, xmm4
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xabfef]
 ins:vmovsd xmm4, qword ptr [rip+0xabfef]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm9
 ins:vaddsd xmm6, xmm6, xmm9
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, qword ptr [rip+0xabfe6]
 ins:vsubsd xmm4, xmm4, qword ptr [rip+0xabfe6]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm0
 ins:vaddsd xmm6, xmm6, xmm0
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm9
 ins:vmulsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm6
 ins:vmulsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, qword ptr [rip+0xabfc9]
 ins:vaddsd xmm4, xmm4, qword ptr [rip+0xabfc9]
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 ins:vmulsd xmm6, xmm6, qword ptr [rax*8+0x4ceb00]
 reg:xmm6
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm8
 ins:vmovapd xmm4, xmm8
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm8
 ins:vmulsd xmm0, xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm8
 ins:vmovapd xmm0, xmm8
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm6
 ins:vaddsd xmm5, xmm5, xmm6
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm0
 ins:vsubsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm5
 ins:vaddsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm3
 ins:vucomisd xmm4, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm4, xmm3
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, qword ptr [rip+0xabfe1]
 ins:vmulsd xmm4, xmm4, qword ptr [rip+0xabfe1]
 reg:xmm4
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm11
 ins:vaddsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm0
 ins:vucomisd xmm4, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm3, xmm15
 ins:vucomisd xmm3, xmm15
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xae09f]
 ins:vmovsd xmm6, qword ptr [rip+0xae09f]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm15
 ins:vmovapd xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xadfba]
 ins:vmovsd xmm7, qword ptr [rip+0xadfba]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm15
 ins:vaddsd xmm6, xmm6, xmm15
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xadfb5]
 ins:vmovsd xmm8, qword ptr [rip+0xadfb5]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xadfc5]
 ins:vmovsd xmm5, qword ptr [rip+0xadfc5]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm6
 ins:vmovapd xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xae062]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xae062]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xadfaa]
 ins:vmovsd xmm6, qword ptr [rip+0xadfaa]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdx+0x1]
 ins:lea ecx, ptr [rdx+0x1]
 reg:ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rcx, ecx
 ins:movsxd rcx, ecx
 reg:rcx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm13, xmm13, xmm0
 ins:vsubsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm0
 ins:vmovapd xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm12
 ins:vmovapd xmm4, xmm12
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm4
 ins:vmulsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadf3c]
 ins:vmovsd xmm4, qword ptr [rip+0xadf3c]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm12
 ins:vmovapd xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm10
 ins:vsubsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xadf47]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xadf47]
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xada79]
 ins:vmovsd xmm0, qword ptr [rip+0xada79]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm15, xmm15, xmm0
 ins:vxorpd xmm15, xmm15, xmm0
 reg:xmm15
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vxorpd xmm1, xmm1, xmm0
 ins:vxorpd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xae09f]
 ins:vmovsd xmm6, qword ptr [rip+0xae09f]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm15
 ins:vmovapd xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xadfba]
 ins:vmovsd xmm7, qword ptr [rip+0xadfba]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm6, xmm6, xmm15
 ins:vaddsd xmm6, xmm6, xmm15
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xadfb5]
 ins:vmovsd xmm8, qword ptr [rip+0xadfb5]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm5, qword ptr [rip+0xadfc5]
 ins:vmovsd xmm5, qword ptr [rip+0xadfc5]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm6
 ins:vmovapd xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, qword ptr [rip+0xae062]
 ins:vsubsd xmm0, xmm0, qword ptr [rip+0xae062]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm6, qword ptr [rip+0xadfaa]
 ins:vmovsd xmm6, qword ptr [rip+0xadfaa]
 reg:xmm6
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea ecx, ptr [rdx+0x1]
 ins:lea ecx, ptr [rdx+0x1]
 reg:ecx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x2]
 ins:lea eax, ptr [rdx+0x2]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rcx, ecx
 ins:movsxd rcx, ecx
 reg:rcx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm13, xmm13, xmm0
 ins:vsubsd xmm13, xmm13, xmm0
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rax*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx+0x3]
 ins:lea eax, ptr [rdx+0x3]
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm13
 ins:vmovapd xmm0, xmm13
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 ins:vmovsd xmm9, qword ptr [rax*8+0x4ceb00]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm0
 ins:vmovapd xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm0
 ins:vmovapd xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, xmm0
 ins:vmulsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm4, xmm12
 ins:vmovapd xmm4, xmm12
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm7
 ins:vmulsd xmm4, xmm4, xmm7
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm8
 ins:vsubsd xmm4, xmm4, xmm8
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm4
 ins:vmulsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xadf3c]
 ins:vmovsd xmm4, qword ptr [rip+0xadf3c]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 ins:vmovsd xmm0, qword ptr [rcx*8+0x4ceb00]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm10
 ins:vmulsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 ins:vmulsd xmm10, xmm10, qword ptr [rdx*8+0x4ceb00]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm12
 ins:vmovapd xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm4
 ins:vmulsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm6
 ins:vaddsd xmm0, xmm0, xmm6
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm12
 ins:vmulsd xmm0, xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm14
 ins:vmulsd xmm0, xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm0
 ins:vsubsd xmm9, xmm9, xmm0
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm9, xmm9, xmm10
 ins:vsubsd xmm9, xmm9, xmm10
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm9
 ins:vaddsd xmm0, xmm0, xmm9
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm0
 ins:vsubsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm9
 ins:vaddsd xmm14, xmm14, xmm9
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm3
 ins:vucomisd xmm14, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm14, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm14, xmm14, qword ptr [rip+0xadf47]
 ins:vmulsd xmm14, xmm14, qword ptr [rip+0xadf47]
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm11
 ins:vaddsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm14, xmm14, xmm11
 ins:vsubsd xmm14, xmm14, xmm11
 reg:xmm14
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm14, xmm14, xmm0
 ins:vaddsd xmm14, xmm14, xmm0
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm14, xmm0
 ins:vucomisd xmm14, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm11
 ins:vsubsd xmm4, xmm4, xmm11
 reg:xmm4
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm0
 ins:vaddsd xmm4, xmm4, xmm0
 reg:xmm4
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm4, xmm0
 ins:vucomisd xmm4, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm9, xmm13
 ins:vmovapd xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included shl eax, 0x2
 ins:shl eax, 0x2
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm10, qword ptr [rip+0xada89]
 ins:vmovsd xmm10, qword ptr [rip+0xada89]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm9, xmm9, xmm13
 ins:vmulsd xmm9, xmm9, xmm13
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm11, xmm13
 ins:vmovapd xmm11, xmm13
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm14, qword ptr [rdx*8+0x4ceb00]
 reg:xmm14
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x2]
 ins:lea edx, ptr [rax+0x2]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm11, xmm11, xmm10
 ins:vaddsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm14
 ins:vmovapd xmm0, xmm14
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm10
 ins:vaddsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm12, qword ptr [rdx*8+0x4ceb00]
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm11, xmm11, xmm10
 ins:vsubsd xmm11, xmm11, xmm10
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x3]
 ins:lea edx, ptr [rax+0x3]
 reg:edx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm7, xmm7, xmm9
 ins:vmulsd xmm7, xmm7, xmm9
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm13
 ins:vmovapd xmm5, xmm13
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm10
 ins:vsubsd xmm0, xmm0, xmm10
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm13
 ins:vmovapd xmm10, xmm13
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm11
 ins:vsubsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included movsxd rdx, edx
 ins:movsxd rdx, edx
 reg:rdx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm1
 ins:vmulsd xmm10, xmm10, xmm1
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm7, xmm7, xmm8
 ins:vsubsd xmm7, xmm7, xmm8
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm11, xmm11, xmm0
 ins:vmulsd xmm11, xmm11, xmm0
 reg:xmm11
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm1
 ins:vaddsd xmm5, xmm5, xmm1
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm6
 ins:vaddsd xmm4, xmm4, xmm6
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm0
 ins:vmulsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm9
 ins:vmulsd xmm4, xmm4, xmm9
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm4
 ins:vaddsd xmm10, xmm10, xmm4
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 ins:vmovsd xmm4, qword ptr [rdx*8+0x4ceb00]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm10
 ins:vsubsd xmm4, xmm4, xmm10
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm14
 ins:vmovapd xmm5, xmm14
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm0
 ins:vsubsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm12
 ins:vmovapd xmm0, xmm12
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm11
 ins:vsubsd xmm0, xmm0, xmm11
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 ins:vaddsd xmm5, xmm5, qword ptr [rax*8+0x4ceb00]
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm0
 ins:vsubsd xmm12, xmm12, xmm0
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm5, xmm5, xmm13
 ins:vmulsd xmm5, xmm5, xmm13
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm11
 ins:vsubsd xmm12, xmm12, xmm11
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm9
 ins:vmulsd xmm13, xmm13, xmm9
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm5
 ins:vsubsd xmm4, xmm4, xmm5
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm5, xmm0
 ins:vmovapd xmm5, xmm0
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm7
 ins:vmulsd xmm13, xmm13, xmm7
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm14
 ins:vmulsd xmm13, xmm13, xmm14
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm4, xmm4, xmm13
 ins:vsubsd xmm4, xmm4, xmm13
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm4, xmm4, xmm12
 ins:vaddsd xmm4, xmm4, xmm12
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm4
 ins:vaddsd xmm5, xmm5, xmm4
 reg:xmm5
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm5
 ins:vsubsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, qword ptr [rip+0xad962]
 ins:vmulsd xmm0, xmm0, qword ptr [rip+0xad962]
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xad9ca]
 ins:vmovsd xmm4, qword ptr [rip+0xad9ca]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm4
 ins:vaddsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm5
 ins:vmovapd xmm2, xmm5
 reg:xmm2
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm4, qword ptr [rip+0xad184]
 ins:vmovsd xmm4, qword ptr [rip+0xad184]
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm4, xmm4, xmm2
 ins:vmulsd xmm4, xmm4, xmm2
 reg:xmm4
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm0, xmm0, xmm4
 ins:vsubsd xmm0, xmm0, xmm4
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm5
 ins:vaddsd xmm0, xmm0, xmm5
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm5
 ins:vmovapd xmm2, xmm5
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm15, xmm3
 ins:vucomisd xmm15, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm15, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x60]
 ins:lea rdi, ptr [rsp+0x60]
 reg:rdi
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rsp+0x68]
 ins:vmovsd xmm0, qword ptr [rsp+0x68]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm3, qword ptr [rsp+0x18]
 ins:vmovsd xmm3, qword ptr [rsp+0x18]
 reg:xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm1, xmm0
 ins:vmovapd xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm2, qword ptr [rsp]
 ins:vmovsd xmm2, qword ptr [rsp]
 reg:xmm2
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm3
 ins:vucomisd xmm0, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm0, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm1, xmm1, qword ptr [rip+0xad53f]
 ins:vmulsd xmm1, xmm1, qword ptr [rip+0xad53f]
 reg:xmm1
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xad567]
 ins:vmovsd xmm0, qword ptr [rip+0xad567]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm2, xmm3
 ins:vucomisd xmm2, xmm3
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xacfd3]
 ins:vmovsd xmm0, qword ptr [rip+0xacfd3]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm0, xmm0, xmm2
 ins:vmulsd xmm0, xmm0, xmm2
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm1, xmm1, xmm0
 ins:vsubsd xmm1, xmm1, xmm0
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm1
 ins:vmovapd xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm1, qword ptr [rsp+0x60]
 ins:vmovsd xmm1, qword ptr [rsp+0x60]
 reg:xmm1
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm0, xmm0, xmm1
 ins:vaddsd xmm0, xmm0, xmm1
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm1, xmm0
 ins:vucomisd xmm1, xmm0
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm1
 ins:vmovapd xmm2, xmm1
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm11
 ins:vaddsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vsubsd xmm5, xmm5, xmm11
 ins:vsubsd xmm5, xmm5, xmm11
 reg:xmm5
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vaddsd xmm5, xmm5, xmm0
 ins:vaddsd xmm5, xmm5, xmm0
 reg:xmm5
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vucomisd xmm5, xmm0
 ins:vucomisd xmm5, xmm0
 reg:rflags
 Exe __cos_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included and r12d, 0x2
 ins:and r12d, 0x2
 reg:r12d
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm0
 ins:vmovapd xmm2, xmm0
 reg:xmm2
 Exe __sin_avx
 Exe __sin_avx
 Exe __cos_avx
 Exe __cos_avx
 INSTSELECTOR: instruction to be included vmovapd xmm0, xmm15
 ins:vmovapd xmm0, xmm15
 reg:xmm0
 Exe __cos_avx
 Exe __cos_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae7df]
 ins:vmovsd xmm0, qword ptr [rip+0xae7df]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm0, xmm12
 ins:vucomisd xmm0, xmm12
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm9, qword ptr [rip+0xae874]
 ins:vmovsd xmm9, qword ptr [rip+0xae874]
 reg:xmm9
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm8, qword ptr [rip+0xae87c]
 ins:vmovsd xmm8, qword ptr [rip+0xae87c]
 reg:xmm8
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm10, xmm9
 ins:vmovapd xmm10, xmm9
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm7, qword ptr [rip+0xae87f]
 ins:vmovsd xmm7, qword ptr [rip+0xae87f]
 reg:xmm7
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm0, qword ptr [rip+0xae887]
 ins:vmovsd xmm0, qword ptr [rip+0xae887]
 reg:xmm0
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovsd xmm13, qword ptr [rip+0xae76a]
 ins:vmovsd xmm13, qword ptr [rip+0xae76a]
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm13, xmm13, xmm1
 ins:vmulsd xmm13, xmm13, xmm1
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm8
 ins:vaddsd xmm10, xmm10, xmm8
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm7
 ins:vaddsd xmm10, xmm10, xmm7
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm0
 ins:vaddsd xmm10, xmm10, xmm0
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, qword ptr [rip+0xae862]
 ins:vaddsd xmm10, xmm10, qword ptr [rip+0xae862]
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm15
 ins:vmulsd xmm10, xmm10, xmm15
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm10, xmm10, xmm13
 ins:vsubsd xmm10, xmm10, xmm13
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm10, xmm10, xmm12
 ins:vmulsd xmm10, xmm10, xmm12
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm12, xmm15
 ins:vmovapd xmm12, xmm15
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm10, xmm10, xmm1
 ins:vaddsd xmm10, xmm10, xmm1
 reg:xmm10
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm13, xmm10
 ins:vmovapd xmm13, xmm10
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm13, xmm13, xmm15
 ins:vaddsd xmm13, xmm13, xmm15
 reg:xmm13
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vsubsd xmm12, xmm12, xmm13
 ins:vsubsd xmm12, xmm12, xmm13
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm10
 ins:vaddsd xmm12, xmm12, xmm10
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm12, xmm3
 ins:vucomisd xmm12, xmm3
 reg:rflags
 NORMAL FLAG REG: inst vucomisd xmm12, xmm3
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmulsd xmm12, xmm12, qword ptr [rip+0xae732]
 ins:vmulsd xmm12, xmm12, qword ptr [rip+0xae732]
 reg:xmm12
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm11
 ins:vaddsd xmm12, xmm12, xmm11
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vaddsd xmm12, xmm12, xmm13
 ins:vaddsd xmm12, xmm12, xmm13
 reg:xmm12
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vucomisd xmm12, xmm13
 ins:vucomisd xmm12, xmm13
 reg:rflags
 Exe __sin_avx
 Exe __sin_avx
 Exe __sin_avx
 INSTSELECTOR: instruction to be included vmovapd xmm2, xmm13
 ins:vmovapd xmm2, xmm13
 reg:xmm2
 Exe __sin_avx
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe2af]
 ins:mov rax, qword ptr [rip+0x2fe2af]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe main
 Exe main
 Exe SlaveStart
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe SlaveStart
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe SlaveStart
 INSTSELECTOR: instruction to be included sub rsp, 0xe8
 ins:sub rsp, 0xe8
 reg:rsp
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30594f]
 ins:mov rax, qword ptr [rip+0x30594f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30593c]
 ins:mov rax, qword ptr [rip+0x30593c]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30592e]
 ins:mov rax, qword ptr [rip+0x30592e]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax]
 ins:mov rdx, qword ptr [rax]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30591d]
 ins:mov rax, qword ptr [rip+0x30591d]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30590a]
 ins:mov rax, qword ptr [rip+0x30590a]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x38], 0x0
 ins:cmp qword ptr [rbp-0x38], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3058d6]
 ins:mov rax, qword ptr [rip+0x3058d6]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3058c4]
 ins:mov rax, qword ptr [rip+0x3058c4]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fd864]
 ins:mov rax, qword ptr [rip+0x2fd864]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x78]
 ins:lea rax, ptr [rbp-0x78]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30582d]
 ins:mov rax, qword ptr [rip+0x30582d]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x305826]
 ins:mov rdx, qword ptr [rip+0x305826]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe SlaveStart
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305808]
 ins:mov rax, qword ptr [rip+0x305808]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3057f6]
 ins:mov rax, qword ptr [rip+0x3057f6]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included lock cmpxchg dword ptr [rdi], esi
 ins:lock cmpxchg dword ptr [rdi], esi
 reg:eax
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included add rdi, 0x4
 ins:add rdi, 0x4
 reg:rdi
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rdi+0x4]
 ins:mov r9, qword ptr [rdi+0x4]
 reg:r9
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included cmp r9, qword ptr [rdi+0xc]
 ins:cmp r9, qword ptr [rdi+0xc]
 reg:rflags
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included add r9, r9
 ins:add r9, r9
 reg:r9
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included inc dword ptr [rdi+0x28]
 ins:inc dword ptr [rdi+0x28]
 reg:rflags
 COMP2MEM: inst inc dword ptr [rdi+0x28]
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi+0x1c]
 ins:mov r8, qword ptr [rdi+0x1c]
 reg:r8
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdi-0x4]
 ins:lock dec dword ptr [rdi-0x4]
 reg:rflags
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included lock dec dword ptr [rdi-0x4]
 ins:lock dec dword ptr [rdi-0x4]
 reg:rflags
 Exe __pthread_cond_broadcast
 Exe __pthread_cond_broadcast
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __pthread_cond_broadcast
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3057dd]
 ins:mov rax, qword ptr [rip+0x3057dd]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305902]
 ins:mov rax, qword ptr [rip+0x305902]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x48], 0x0
 ins:cmp qword ptr [rbp-0x48], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fdee8]
 ins:mov rax, qword ptr [rip+0x2fdee8]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov esi, 0x4cd7a8
 ins:mov esi, 0x4cd7a8
 reg:esi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30587f]
 ins:mov rax, qword ptr [rip+0x30587f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x18]
 ins:cmp rax, qword ptr [rbp-0x18]
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30586b]
 ins:mov rax, qword ptr [rip+0x30586b]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x30]
 ins:imul rax, qword ptr [rbp-0x30]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fd6e7]
 ins:mov rbx, qword ptr [rip+0x2fd6e7]
 reg:rbx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305847]
 ins:mov rax, qword ptr [rip+0x305847]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fd6c4]
 ins:mov rbx, qword ptr [rip+0x2fd6c4]
 reg:rbx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x305704]
 ins:mov rdx, qword ptr [rip+0x305704]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x305705]
 ins:mov rsi, qword ptr [rip+0x305705]
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3056ce]
 ins:mov rax, qword ptr [rip+0x3056ce]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp-0x58]
 ins:mov r8, qword ptr [rbp-0x58]
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x50]
 ins:mov rdi, qword ptr [rbp-0x50]
 reg:rdi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x48]
 ins:mov rcx, qword ptr [rbp-0x48]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax*8]
 ins:lea rdx, ptr [rax*8]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30575c]
 ins:mov rax, qword ptr [rip+0x30575c]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x18]
 ins:mov rcx, qword ptr [rbp-0x18]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included shl rcx, 0x3
 ins:shl rcx, 0x3
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30587f]
 ins:mov rax, qword ptr [rip+0x30587f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x18]
 ins:cmp rax, qword ptr [rbp-0x18]
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30586b]
 ins:mov rax, qword ptr [rip+0x30586b]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x30]
 ins:imul rax, qword ptr [rbp-0x30]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fd6e7]
 ins:mov rbx, qword ptr [rip+0x2fd6e7]
 reg:rbx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305847]
 ins:mov rax, qword ptr [rip+0x305847]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fd6c4]
 ins:mov rbx, qword ptr [rip+0x2fd6c4]
 reg:rbx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x305704]
 ins:mov rdx, qword ptr [rip+0x305704]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x305705]
 ins:mov rsi, qword ptr [rip+0x305705]
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3056ce]
 ins:mov rax, qword ptr [rip+0x3056ce]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp-0x58]
 ins:mov r8, qword ptr [rbp-0x58]
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x50]
 ins:mov rdi, qword ptr [rbp-0x50]
 reg:rdi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x48]
 ins:mov rcx, qword ptr [rbp-0x48]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe TouchArray
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305438]
 ins:mov rax, qword ptr [rip+0x305438]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x10]
 ins:cmp rax, qword ptr [rbp-0x10]
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax*8]
 ins:lea rdx, ptr [rax*8]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rax]
 ins:movsd xmm0, qword ptr [rax]
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rbp-0x18]
 ins:movsd xmm1, qword ptr [rbp-0x18]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305438]
 ins:mov rax, qword ptr [rip+0x305438]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x10]
 ins:cmp rax, qword ptr [rbp-0x10]
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x58]
 ins:movsd xmm0, qword ptr [rbp-0x58]
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x305417]
 ins:mov rdx, qword ptr [rip+0x305417]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3052c8]
 ins:mov rax, qword ptr [rip+0x3052c8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x10]
 ins:imul rax, qword ptr [rbp-0x10]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305318]
 ins:mov rax, qword ptr [rip+0x305318]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x8], rax
 ins:cmp qword ptr [rbp-0x8], rax
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x58]
 ins:movsd xmm0, qword ptr [rbp-0x58]
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rax]
 ins:movsd xmm0, qword ptr [rax]
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rbp-0x18]
 ins:movsd xmm1, qword ptr [rbp-0x18]
 reg:xmm1
 Exe TouchArray
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305318]
 ins:mov rax, qword ptr [rip+0x305318]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x8], rax
 ins:cmp qword ptr [rbp-0x8], rax
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe TouchArray
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe TouchArray
 Exe TouchArray
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x58]
 ins:movsd xmm0, qword ptr [rbp-0x58]
 reg:xmm0
 Exe TouchArray
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe TouchArray
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3056c5]
 ins:mov rax, qword ptr [rip+0x3056c5]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x60], 0x0
 ins:cmp qword ptr [rbp-0x60], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305691]
 ins:mov rax, qword ptr [rip+0x305691]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30567f]
 ins:mov rax, qword ptr [rip+0x30567f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fd61f]
 ins:mov rax, qword ptr [rip+0x2fd61f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x88]
 ins:lea rax, ptr [rbp-0x88]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3055df]
 ins:mov rax, qword ptr [rip+0x3055df]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3055d8]
 ins:mov rdx, qword ptr [rip+0x3055d8]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe SlaveStart
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3055ba]
 ins:mov rax, qword ptr [rip+0x3055ba]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3055a8]
 ins:mov rax, qword ptr [rip+0x3055a8]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30558f]
 ins:mov rax, qword ptr [rip+0x30558f]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x30], 0x0
 ins:cmp qword ptr [rbp-0x30], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2feced]
 ins:mov rax, qword ptr [rip+0x2feced]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xa0]
 ins:lea rax, ptr [rbp-0xa0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xa0]
 ins:lea rax, ptr [rbp-0xa0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x98]
 ins:mov rdx, qword ptr [rbp-0x98]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa0]
 ins:mov rax, qword ptr [rbp-0xa0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rip+0x2fecb1]
 ins:mov r9, qword ptr [rip+0x2fecb1]
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x2fec9a]
 ins:mov r8, qword ptr [rip+0x2fec9a]
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x30551b]
 ins:mov rdi, qword ptr [rip+0x30551b]
 reg:rdi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x305534]
 ins:mov rsi, qword ptr [rip+0x305534]
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rip+0x305535]
 ins:mov r10, qword ptr [rip+0x305535]
 reg:r10
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x3054fe]
 ins:mov rcx, qword ptr [rip+0x3054fe]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3054ef]
 ins:mov rdx, qword ptr [rip+0x3054ef]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fd4d0]
 ins:mov rax, qword ptr [rip+0x2fd4d0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x48]
 ins:mov r11, qword ptr [rbp-0x48]
 reg:r11
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x58]
 ins:mov rdi, qword ptr [rbp-0x58]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x50]
 ins:mov rdi, qword ptr [rbp-0x50]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x70]
 ins:lea rdi, ptr [rbp-0x70]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x30]
 ins:mov rdi, qword ptr [rbp-0x30]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, r11
 ins:mov r9, r11
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, r10
 ins:mov r8, r10
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe SlaveStart
 Exe FFT1D
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe FFT1D
 INSTSELECTOR: instruction to be included sub rsp, 0x170
 ins:sub rsp, 0x170
 reg:rsp
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x140]
 ins:mov rax, qword ptr [rbp-0x140]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included shr rdx, 0x3f
 ins:shr rdx, 0x3f
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe FFT1D
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304d00]
 ins:mov rax, qword ptr [rip+0x304d00]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x28], 0x0
 ins:cmp qword ptr [rbp-0x28], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304ccc]
 ins:mov rax, qword ptr [rip+0x304ccc]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304cba]
 ins:mov rax, qword ptr [rip+0x304cba]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fcc5a]
 ins:mov rax, qword ptr [rip+0x2fcc5a]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x80]
 ins:lea rax, ptr [rbp-0x80]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304c20]
 ins:mov rax, qword ptr [rip+0x304c20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x304c19]
 ins:mov rdx, qword ptr [rip+0x304c19]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe FFT1D
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304bfb]
 ins:mov rax, qword ptr [rip+0x304bfb]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304be9]
 ins:mov rax, qword ptr [rip+0x304be9]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304bd0]
 ins:mov rax, qword ptr [rip+0x304bd0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xa0]
 ins:lea rax, ptr [rbp-0xa0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xa0]
 ins:lea rax, ptr [rbp-0xa0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x98]
 ins:mov rdx, qword ptr [rbp-0x98]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa0]
 ins:mov rax, qword ptr [rbp-0xa0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbp+0x30]
 ins:mov r9, qword ptr [rbp+0x30]
 reg:r9
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp+0x28]
 ins:mov r8, qword ptr [rbp+0x28]
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+0x18]
 ins:mov rcx, qword ptr [rbp+0x18]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x158]
 ins:mov rdx, qword ptr [rbp-0x158]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x150]
 ins:mov rsi, qword ptr [rbp-0x150]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x38]
 ins:mov rdi, qword ptr [rbp+0x38]
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe Transpose
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe Transpose
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa0]
 ins:mov rax, qword ptr [rbp-0xa0]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xa8]
 ins:mov rdx, qword ptr [rbp-0xa8]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included sub rdx, rax
 ins:sub rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rax
 ins:add rax, rax
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2fbfeb]
 ins:mov rbx, qword ptr [rip+0x2fbfeb]
 reg:rbx
 Exe Transpose
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included idiv rbx
 ins:idiv rbx
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fbfdb]
 ins:mov rax, qword ptr [rip+0x2fbfdb]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x38]
 ins:imul rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x50]
 ins:mov rdx, qword ptr [rbp-0x50]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included add rdx, rdx
 ins:add rdx, rdx
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x38], 0x1
 ins:add qword ptr [rbp-0x38], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x38], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included idiv qword ptr [rbp-0x38]
 ins:idiv qword ptr [rbp-0x38]
 reg:rdx
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa0]
 ins:mov rax, qword ptr [rbp-0xa0]
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x2fbf8d]
 ins:mov rsi, qword ptr [rip+0x2fbf8d]
 reg:rsi
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x80]
 ins:mov rax, qword ptr [rbp-0x80]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included idiv rsi
 ins:idiv rsi
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x10]
 ins:mov rax, qword ptr [rbp+0x10]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x80]
 ins:mov rdx, qword ptr [rbp-0x80]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x98]
 ins:mov rax, qword ptr [rbp-0x98]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fbdf0]
 ins:mov rax, qword ptr [rip+0x2fbdf0]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x28], rax
 ins:cmp qword ptr [rbp-0x28], rax
 reg:rflags
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x28]
 ins:mov rax, qword ptr [rbp-0x28]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x98]
 ins:cmp rax, qword ptr [rbp-0x98]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x98]
 ins:mov rax, qword ptr [rbp-0x98]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x60]
 ins:imul rax, qword ptr [rbp-0x60]
 reg:rax
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x48], rax
 ins:add qword ptr [rbp-0x48], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x48], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x40], rax
 ins:add qword ptr [rbp-0x40], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x40], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x30], 0x1
 ins:add qword ptr [rbp-0x30], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x30], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x48], rax
 ins:add qword ptr [rbp-0x48], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x48], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x48]
 ins:mov rdx, qword ptr [rbp-0x48]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Transpose
 Exe Transpose
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x40], rax
 ins:add qword ptr [rbp-0x40], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x40], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x30], 0x1
 ins:add qword ptr [rbp-0x30], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x30], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x40]
 ins:mov rdx, qword ptr [rbp-0x40]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x68]
 ins:imul rax, qword ptr [rbp-0x68]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x70]
 ins:mov rax, qword ptr [rbp-0x70]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x90]
 ins:mov rax, qword ptr [rbp-0x90]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x70]
 ins:mov rax, qword ptr [rbp-0x70]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x68]
 ins:imul rax, qword ptr [rbp-0x68]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x88]
 ins:mov rax, qword ptr [rbp-0x88]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x68]
 ins:imul rax, qword ptr [rbp-0x68]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x70]
 ins:mov rax, qword ptr [rbp-0x70]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x90]
 ins:mov rax, qword ptr [rbp-0x90]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x70]
 ins:mov rax, qword ptr [rbp-0x70]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x68]
 ins:imul rax, qword ptr [rbp-0x68]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 ins:lea rcx, ptr [rax+0x8]
 reg:rcx
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x88]
 ins:mov rax, qword ptr [rbp-0x88]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x50]
 ins:cmp rax, qword ptr [rbp-0x50]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x40], rax
 ins:add qword ptr [rbp-0x40], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x40], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x30], 0x1
 ins:add qword ptr [rbp-0x30], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x30], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x48], rax
 ins:add qword ptr [rbp-0x48], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x48], rax
 Exe Transpose
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x20], 0x1
 ins:add qword ptr [rbp-0x20], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x20], 0x1
 Exe Transpose
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe Transpose
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x38]
 ins:cmp rax, qword ptr [rbp-0x38]
 reg:rflags
 Exe Transpose
 Exe Transpose
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe Transpose
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe Transpose
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xb0]
 ins:lea rax, ptr [rbp-0xb0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xb0]
 ins:lea rax, ptr [rbp-0xb0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xa8]
 ins:mov rdx, qword ptr [rbp-0xa8]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xb0]
 ins:mov rax, qword ptr [rbp-0xb0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x10]
 ins:mov rdx, qword ptr [rbp-0x10]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x38]
 ins:mov rcx, qword ptr [rbp-0x38]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included sub rcx, rdx
 ins:sub rcx, rdx
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x28]
 ins:mov rax, qword ptr [rbp+0x28]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp+0x30]
 ins:cmp rax, qword ptr [rbp+0x30]
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304a3b]
 ins:mov rax, qword ptr [rip+0x304a3b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x38]
 ins:mov rax, qword ptr [rbp+0x38]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x158]
 ins:mov rax, qword ptr [rbp-0x158]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx+rax*1]
 ins:lea rdi, ptr [rdx+rax*1]
 reg:rdi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x160]
 ins:mov rcx, qword ptr [rbp-0x160]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x18]
 ins:mov rsi, qword ptr [rbp-0x18]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x138]
 ins:mov rax, qword ptr [rbp-0x138]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included sub rsp, 0xa8
 ins:sub rsp, 0xa8
 reg:rsp
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xa8]
 ins:mov rdx, qword ptr [rbp-0xa8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x90]
 ins:mov rcx, qword ptr [rbp-0x90]
 reg:rcx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x98]
 ins:mov rax, qword ptr [rbp-0x98]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1DOnce
 Exe Reverse
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe Reverse
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe Reverse
 Exe Reverse
 Exe Reverse
 Exe Reverse
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rsp
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x8]
 ins:mov rdx, qword ptr [rbp-0x8]
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe Reverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe BitReverse
 Exe BitReverse
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe BitReverse
 Exe BitReverse
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+rax*1]
 ins:lea rdx, ptr [rax+rax*1]
 reg:rdx
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe BitReverse
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included sar qword ptr [rbp-0x18], 0x1
 ins:sar qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst sar qword ptr [rbp-0x18], 0x1
 Exe BitReverse
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe BitReverse
 Exe BitReverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe BitReverse
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe BitReverse
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x8]
 ins:cmp rax, qword ptr [rbp-0x8]
 reg:rflags
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 ins:lea rcx, ptr [rax+0x8]
 reg:rcx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rbp
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe Reverse
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe Reverse
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe Reverse
 Exe Reverse
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rbp
 Exe Reverse
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x90]
 ins:cmp rax, qword ptr [rbp-0x90]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rsp
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl edx, cl
 ins:shl edx, cl
 reg:edx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x98]
 ins:mov rax, qword ptr [rbp-0x98]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cqo 
 ins:cqo 
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included idiv qword ptr [rbp-0x20]
 ins:idiv qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shr rdx, 0x3f
 ins:shr rdx, 0x3f
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included sar rax, 0x1
 ins:sar rax, 0x1
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa0]
 ins:mov rax, qword ptr [rbp-0xa0]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x90]
 ins:cmp rax, qword ptr [rbp-0x90]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rbp
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x20]
 ins:imul rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa8]
 ins:mov rax, qword ptr [rbp-0xa8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x20]
 ins:imul rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x30]
 ins:mov rax, qword ptr [rbp-0x30]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xa8]
 ins:mov rax, qword ptr [rbp-0xa8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x30]
 ins:cmp rax, qword ptr [rbp-0x30]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x90]
 ins:cmp rax, qword ptr [rbp-0x90]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x88]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x88]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x50]
 ins:movsd xmm0, qword ptr [rbp-0x50]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x60]
 ins:mulsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rbp-0x58]
 ins:movsd xmm1, qword ptr [rbp-0x58]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x68]
 ins:mulsd xmm1, qword ptr [rbp-0x68]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x50]
 ins:movsd xmm0, qword ptr [rbp-0x50]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x68]
 ins:mulsd xmm1, qword ptr [rbp-0x68]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x58]
 ins:movsd xmm0, qword ptr [rbp-0x58]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x60]
 ins:mulsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x60]
 ins:movsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, qword ptr [rbp-0x70]
 ins:subsd xmm0, qword ptr [rbp-0x70]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x68]
 ins:movsd xmm0, qword ptr [rbp-0x68]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, qword ptr [rbp-0x78]
 ins:subsd xmm0, qword ptr [rbp-0x78]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x60]
 ins:movsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rbp-0x70]
 ins:addsd xmm0, qword ptr [rbp-0x70]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x68]
 ins:movsd xmm0, qword ptr [rbp-0x68]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rbp-0x78]
 ins:addsd xmm0, qword ptr [rbp-0x78]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x30]
 ins:cmp rax, qword ptr [rbp-0x30]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x90]
 ins:cmp rax, qword ptr [rbp-0x90]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rsp
 Exe FFT1DOnce
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x38]
 ins:mov rax, qword ptr [rbp+0x38]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x158]
 ins:mov rax, qword ptr [rbp-0x158]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx+rax*1]
 ins:lea rdi, ptr [rdx+rax*1]
 reg:rdi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+0x38]
 ins:mov rcx, qword ptr [rbp+0x38]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x8]
 ins:mov rdx, qword ptr [rbp-0x8]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x20]
 ins:mov rsi, qword ptr [rbp-0x20]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x138]
 ins:mov rax, qword ptr [rbp-0x138]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r9, rcx
 ins:mov r9, rcx
 reg:r9
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+0x10]
 ins:mov rcx, qword ptr [rbp+0x10]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x40]
 ins:cmp rax, qword ptr [rbp-0x40]
 reg:rflags
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x60]
 ins:mov rax, qword ptr [rbp-0x60]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x40]
 ins:mov rdx, qword ptr [rbp-0x40]
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x48]
 ins:imul rax, qword ptr [rbp-0x48]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x38]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x38]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x60]
 ins:mov rax, qword ptr [rbp-0x60]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x40]
 ins:mov rdx, qword ptr [rbp-0x40]
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included imul rax, qword ptr [rbp-0x48]
 ins:imul rax, qword ptr [rbp-0x48]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x50]
 ins:mov rax, qword ptr [rbp-0x50]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x10]
 ins:movsd xmm0, qword ptr [rbp-0x10]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x20]
 ins:mulsd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rbp-0x18]
 ins:movsd xmm1, qword ptr [rbp-0x18]
 reg:xmm1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x28]
 ins:mulsd xmm1, qword ptr [rbp-0x28]
 reg:xmm1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x10]
 ins:movsd xmm0, qword ptr [rbp-0x10]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x28]
 ins:mulsd xmm1, qword ptr [rbp-0x28]
 reg:xmm1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x18]
 ins:movsd xmm0, qword ptr [rbp-0x18]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x20]
 ins:mulsd xmm0, qword ptr [rbp-0x20]
 reg:xmm0
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x40]
 ins:cmp rax, qword ptr [rbp-0x40]
 reg:rflags
 Exe TwiddleOneCol
 Exe TwiddleOneCol
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe TwiddleOneCol
 Exe FFT1D
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp+0x30]
 ins:cmp rax, qword ptr [rbp+0x30]
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304a3b]
 ins:mov rax, qword ptr [rip+0x304a3b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x40], 0x0
 ins:cmp qword ptr [rbp-0x40], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304a07]
 ins:mov rax, qword ptr [rip+0x304a07]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3049f5]
 ins:mov rax, qword ptr [rip+0x3049f5]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fc995]
 ins:mov rax, qword ptr [rip+0x2fc995]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xb8]
 ins:lea rax, ptr [rbp-0xb8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304955]
 ins:mov rax, qword ptr [rip+0x304955]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x30494e]
 ins:mov rdx, qword ptr [rip+0x30494e]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe FFT1D
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304930]
 ins:mov rax, qword ptr [rip+0x304930]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30491e]
 ins:mov rax, qword ptr [rip+0x30491e]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304905]
 ins:mov rax, qword ptr [rip+0x304905]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xd0]
 ins:lea rax, ptr [rbp-0xd0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xd0]
 ins:lea rax, ptr [rbp-0xd0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xc8]
 ins:mov rdx, qword ptr [rbp-0xc8]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xd0]
 ins:mov rax, qword ptr [rbp-0xd0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbp+0x30]
 ins:mov r9, qword ptr [rbp+0x30]
 reg:r9
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp+0x28]
 ins:mov r8, qword ptr [rbp+0x28]
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+0x18]
 ins:mov rcx, qword ptr [rbp+0x18]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x150]
 ins:mov rdx, qword ptr [rbp-0x150]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x158]
 ins:mov rsi, qword ptr [rbp-0x158]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x38]
 ins:mov rdi, qword ptr [rbp+0x38]
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xe0]
 ins:lea rax, ptr [rbp-0xe0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xe0]
 ins:lea rax, ptr [rbp-0xe0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xd8]
 ins:mov rdx, qword ptr [rbp-0xd8]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xe0]
 ins:mov rax, qword ptr [rbp-0xe0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x10]
 ins:mov rdx, qword ptr [rbp-0x10]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x38]
 ins:mov rcx, qword ptr [rbp-0x38]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included sub rcx, rdx
 ins:sub rcx, rdx
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x28]
 ins:mov rax, qword ptr [rbp+0x28]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp+0x30]
 ins:cmp rax, qword ptr [rbp+0x30]
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304776]
 ins:mov rax, qword ptr [rip+0x304776]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x38]
 ins:mov rax, qword ptr [rbp+0x38]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x150]
 ins:mov rax, qword ptr [rbp-0x150]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx+rax*1]
 ins:lea rdi, ptr [rdx+rax*1]
 reg:rdi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x160]
 ins:mov rcx, qword ptr [rbp-0x160]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x18]
 ins:mov rsi, qword ptr [rbp-0x18]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x138]
 ins:mov rax, qword ptr [rbp-0x138]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, rdi
 ins:mov r8, rdi
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x138], 0xffffffffffffffff
 ins:cmp qword ptr [rbp-0x138], 0xffffffffffffffff
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x38]
 ins:mov rax, qword ptr [rbp+0x38]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rcx
 ins:imul rax, rcx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x150]
 ins:mov rax, qword ptr [rbp-0x150]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x148]
 ins:mov rcx, qword ptr [rbp-0x148]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rcx
 ins:mov rsi, rcx
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp+0x30]
 ins:cmp rax, qword ptr [rbp+0x30]
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304776]
 ins:mov rax, qword ptr [rip+0x304776]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, qword ptr [rbp-0x88]
 ins:cvtsi2sd xmm0, qword ptr [rbp-0x88]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x38]
 ins:mov rax, qword ptr [rbp-0x38]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, xmm1
 ins:mulsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x50]
 ins:movsd xmm0, qword ptr [rbp-0x50]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x60]
 ins:mulsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rbp-0x58]
 ins:movsd xmm1, qword ptr [rbp-0x58]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x68]
 ins:mulsd xmm1, qword ptr [rbp-0x68]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, xmm1
 ins:subsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x50]
 ins:movsd xmm0, qword ptr [rbp-0x50]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movapd xmm1, xmm0
 ins:movapd xmm1, xmm0
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm1, qword ptr [rbp-0x68]
 ins:mulsd xmm1, qword ptr [rbp-0x68]
 reg:xmm1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x58]
 ins:movsd xmm0, qword ptr [rbp-0x58]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mulsd xmm0, qword ptr [rbp-0x60]
 ins:mulsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, xmm1
 ins:addsd xmm0, xmm1
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x60]
 ins:movsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, qword ptr [rbp-0x70]
 ins:subsd xmm0, qword ptr [rbp-0x70]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x48]
 ins:mov rax, qword ptr [rbp-0x48]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x68]
 ins:movsd xmm0, qword ptr [rbp-0x68]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included subsd xmm0, qword ptr [rbp-0x78]
 ins:subsd xmm0, qword ptr [rbp-0x78]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x60]
 ins:movsd xmm0, qword ptr [rbp-0x60]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rbp-0x70]
 ins:addsd xmm0, qword ptr [rbp-0x70]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0x68]
 ins:movsd xmm0, qword ptr [rbp-0x68]
 reg:xmm0
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included addsd xmm0, qword ptr [rbp-0x78]
 ins:addsd xmm0, qword ptr [rbp-0x78]
 reg:xmm0
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x8], 0x1
 ins:add qword ptr [rbp-0x8], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x8], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x8]
 ins:mov rax, qword ptr [rbp-0x8]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x30]
 ins:cmp rax, qword ptr [rbp-0x30]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x10], 0x1
 ins:add qword ptr [rbp-0x10], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x10], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x10]
 ins:mov rax, qword ptr [rbp-0x10]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x28]
 ins:cmp rax, qword ptr [rbp-0x28]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x18], 0x1
 ins:add qword ptr [rbp-0x18], 0x1
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x18], 0x1
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x18]
 ins:mov rax, qword ptr [rbp-0x18]
 reg:rax
 Exe FFT1DOnce
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x90]
 ins:cmp rax, qword ptr [rbp-0x90]
 reg:rflags
 Exe FFT1DOnce
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x50], 0x0
 ins:cmp qword ptr [rbp-0x50], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304742]
 ins:mov rax, qword ptr [rip+0x304742]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304730]
 ins:mov rax, qword ptr [rip+0x304730]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fc6d0]
 ins:mov rax, qword ptr [rip+0x2fc6d0]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xe8]
 ins:lea rax, ptr [rbp-0xe8]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304690]
 ins:mov rax, qword ptr [rip+0x304690]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x304689]
 ins:mov rdx, qword ptr [rip+0x304689]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe FFT1D
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30466b]
 ins:mov rax, qword ptr [rip+0x30466b]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304659]
 ins:mov rax, qword ptr [rip+0x304659]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304640]
 ins:mov rax, qword ptr [rip+0x304640]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x100]
 ins:lea rax, ptr [rbp-0x100]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x100]
 ins:lea rax, ptr [rbp-0x100]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xf8]
 ins:mov rdx, qword ptr [rbp-0xf8]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x100]
 ins:mov rax, qword ptr [rbp-0x100]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbp+0x30]
 ins:mov r9, qword ptr [rbp+0x30]
 reg:r9
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp+0x28]
 ins:mov r8, qword ptr [rbp+0x28]
 reg:r8
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp+0x18]
 ins:mov rcx, qword ptr [rbp+0x18]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x158]
 ins:mov rdx, qword ptr [rbp-0x158]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x150]
 ins:mov rsi, qword ptr [rbp-0x150]
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x20]
 ins:mov rax, qword ptr [rbp-0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x38]
 ins:mov rdi, qword ptr [rbp+0x38]
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x18], 0x0
 ins:cmp qword ptr [rbp+0x18], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x48], 0x0
 ins:cmp qword ptr [rbp+0x48], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x110]
 ins:lea rax, ptr [rbp-0x110]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x110]
 ins:lea rax, ptr [rbp-0x110]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x108]
 ins:mov rdx, qword ptr [rbp-0x108]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x110]
 ins:mov rax, qword ptr [rbp-0x110]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x10]
 ins:mov rdx, qword ptr [rbp-0x10]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x38]
 ins:mov rcx, qword ptr [rbp-0x38]
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included sub rcx, rdx
 ins:sub rcx, rdx
 reg:rcx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304561]
 ins:mov rax, qword ptr [rip+0x304561]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x60], 0x0
 ins:cmp qword ptr [rbp-0x60], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30452d]
 ins:mov rax, qword ptr [rip+0x30452d]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30451b]
 ins:mov rax, qword ptr [rip+0x30451b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fc4bb]
 ins:mov rax, qword ptr [rip+0x2fc4bb]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x118]
 ins:lea rax, ptr [rbp-0x118]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30447b]
 ins:mov rax, qword ptr [rip+0x30447b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x304474]
 ins:mov rdx, qword ptr [rip+0x304474]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe FFT1D
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304456]
 ins:mov rax, qword ptr [rip+0x304456]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304444]
 ins:mov rax, qword ptr [rip+0x304444]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30442b]
 ins:mov rax, qword ptr [rip+0x30442b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp+0x40], 0x0
 ins:cmp qword ptr [rbp+0x40], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fdb81]
 ins:mov rax, qword ptr [rip+0x2fdb81]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x28]
 ins:mov rax, qword ptr [rbp+0x28]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30438f]
 ins:mov rax, qword ptr [rip+0x30438f]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x70], 0x0
 ins:cmp qword ptr [rbp-0x70], 0x0
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x4cd778
 ins:mov edi, 0x4cd778
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30435b]
 ins:mov rax, qword ptr [rip+0x30435b]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x90]
 ins:mov rax, qword ptr [rax+0x90]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304349]
 ins:mov rax, qword ptr [rip+0x304349]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x88]
 ins:mov rdx, qword ptr [rax+0x88]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fc2e9]
 ins:mov rax, qword ptr [rip+0x2fc2e9]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x128]
 ins:lea rax, ptr [rbp-0x128]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3042a9]
 ins:mov rax, qword ptr [rip+0x3042a9]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x3042a2]
 ins:mov rdx, qword ptr [rip+0x3042a2]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdx+0x90]
 ins:mov rdx, qword ptr [rdx+0x90]
 reg:rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe FFT1D
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe FFT1D
 INSTSELECTOR: instruction to be included movzx edx, dl
 ins:movzx edx, dl
 reg:edx
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304284]
 ins:mov rax, qword ptr [rip+0x304284]
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304272]
 ins:mov rax, qword ptr [rip+0x304272]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x58
 ins:add rax, 0x58
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x304259]
 ins:mov rax, qword ptr [rip+0x304259]
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included add rax, 0x30
 ins:add rax, 0x30
 reg:rax
 Exe FFT1D
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe FFT1D
 Exe FFT1D
 INSTSELECTOR: instruction to be included leave 
 ins:leave 
 reg:rbp
 Exe FFT1D
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fec1b]
 ins:mov rax, qword ptr [rip+0x2fec1b]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rip+0x2fec1b]
 ins:mov r9, qword ptr [rip+0x2fec1b]
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x2fec04]
 ins:mov r8, qword ptr [rip+0x2fec04]
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x305485]
 ins:mov rdi, qword ptr [rip+0x305485]
 reg:rdi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x30549e]
 ins:mov rsi, qword ptr [rip+0x30549e]
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rip+0x30549f]
 ins:mov r10, qword ptr [rip+0x30549f]
 reg:r10
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x305468]
 ins:mov rcx, qword ptr [rip+0x305468]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x305459]
 ins:mov rdx, qword ptr [rip+0x305459]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fd43a]
 ins:mov rax, qword ptr [rip+0x2fd43a]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x48]
 ins:mov r11, qword ptr [rbp-0x48]
 reg:r11
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x58]
 ins:mov rdi, qword ptr [rbp-0x58]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x50]
 ins:mov rdi, qword ptr [rbp-0x50]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x70]
 ins:lea rdi, ptr [rbp-0x70]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x30]
 ins:mov rdi, qword ptr [rbp-0x30]
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r9, r11
 ins:mov r9, r11
 reg:r9
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov r8, r10
 ins:mov r8, r10
 reg:r8
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, 0xffffffffffffffff
 ins:mov rdi, 0xffffffffffffffff
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x30], 0x0
 ins:cmp qword ptr [rbp-0x30], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2feb8c]
 ins:mov rax, qword ptr [rip+0x2feb8c]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xb0]
 ins:lea rax, ptr [rbp-0xb0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0xb0]
 ins:lea rax, ptr [rbp-0xb0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov esi, 0x0
 ins:mov esi, 0x0
 reg:esi
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xa8]
 ins:mov rdx, qword ptr [rbp-0xa8]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xb0]
 ins:mov rax, qword ptr [rbp-0xb0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included imul rax, rax, 0xf4240
 ins:imul rax, rax, 0xf4240
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3053d8]
 ins:mov rax, qword ptr [rip+0x3053d8]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included shl rdx, 0x3
 ins:shl rdx, 0x3
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x70]
 ins:mov rax, qword ptr [rbp-0x70]
 reg:rax
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3053b8]
 ins:mov rax, qword ptr [rip+0x3053b8]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x30]
 ins:mov rdx, qword ptr [rbp-0x30]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included shl rdx, 0x3
 ins:shl rdx, 0x3
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x28]
 ins:mov rcx, qword ptr [rbp-0x28]
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included sub rcx, rdx
 ins:sub rcx, rdx
 reg:rcx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x30], 0x0
 ins:cmp qword ptr [rbp-0x30], 0x0
 reg:rflags
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305387]
 ins:mov rax, qword ptr [rip+0x305387]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x28]
 ins:mov rdx, qword ptr [rbp-0x28]
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305375]
 ins:mov rax, qword ptr [rip+0x305375]
 reg:rax
 Exe SlaveStart
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x20]
 ins:mov rdx, qword ptr [rbp-0x20]
 reg:rdx
 Exe SlaveStart
 Exe SlaveStart
 INSTSELECTOR: instruction to be included add rsp, 0xe8
 ins:add rsp, 0xe8
 reg:rsp
 Exe SlaveStart
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe SlaveStart
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe SlaveStart
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2fe250]
 ins:mov rax, qword ptr [rip+0x2fe250]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbp-0x30]
 ins:cmp rax, qword ptr [rbp-0x30]
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff9ef]
 ins:mov rax, qword ptr [rip+0x2ff9ef]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff9db]
 ins:mov rax, qword ptr [rip+0x2ff9db]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306238]
 ins:mov rax, qword ptr [rip+0x306238]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd3a0
 ins:mov edi, 0x4cd3a0
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd3c8
 ins:mov edi, 0x4cd3c8
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd400
 ins:mov edi, 0x4cd400
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3061f8]
 ins:mov rax, qword ptr [rip+0x3061f8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, rax
 ins:cvtsi2sd xmm0, rax
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3061e2]
 ins:mov rax, qword ptr [rip+0x3061e2]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3061c8]
 ins:mov rax, qword ptr [rip+0x3061c8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax]
 ins:mov rdx, qword ptr [rax]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3061b7]
 ins:mov rax, qword ptr [rip+0x3061b7]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd438
 ins:mov edi, 0x4cd438
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe main
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test r12d, 0x8000
 ins:test r12d, 0x8000
 reg:rflags
 NORMAL FLAG REG: inst test r12d, 0x8000
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0x40d050
 ins:mov eax, 0x40d050
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x440]
 ins:lea rdi, ptr [rbp-0x440]
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, 0x40e560
 ins:mov esi, 0x40e560
 reg:esi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x4c0]
 ins:lea rdi, ptr [rbp-0x4c0]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe read_int
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe read_int
 INSTSELECTOR: instruction to be included mov r8d, 0x7fffffff
 ins:mov r8d, 0x7fffffff
 reg:r8d
 Exe read_int
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe read_int
 INSTSELECTOR: instruction to be included sub eax, 0x30
 ins:sub eax, 0x30
 reg:eax
 Exe read_int
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 ins:mov rdx, qword ptr [rdi]
 reg:rdx
 Exe read_int
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdx+0x1]
 ins:lea rcx, ptr [rdx+0x1]
 reg:rcx
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rdx+0x1]
 ins:movzx edx, byte ptr [rdx+0x1]
 reg:edx
 Exe read_int
 INSTSELECTOR: instruction to be included sub edx, 0x30
 ins:sub edx, 0x30
 reg:edx
 Exe read_int
 INSTSELECTOR: instruction to be included cmp edx, 0x9
 ins:cmp edx, 0x9
 reg:rflags
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included cmp eax, 0xccccccc
 ins:cmp eax, 0xccccccc
 reg:rflags
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included imul ecx, eax, 0xa
 ins:imul ecx, eax, 0xa
 reg:ecx
 Exe read_int
 INSTSELECTOR: instruction to be included mov esi, r8d
 ins:mov esi, r8d
 reg:esi
 Exe read_int
 INSTSELECTOR: instruction to be included or eax, 0xffffffff
 ins:or eax, 0xffffffff
 reg:eax
 Exe read_int
 INSTSELECTOR: instruction to be included sub esi, edx
 ins:sub esi, edx
 reg:esi
 Exe read_int
 INSTSELECTOR: instruction to be included add edx, ecx
 ins:add edx, ecx
 reg:edx
 Exe read_int
 INSTSELECTOR: instruction to be included cmp esi, ecx
 ins:cmp esi, ecx
 reg:rflags
 NORMAL FLAG REG: inst cmp esi, ecx
 Exe read_int
 INSTSELECTOR: instruction to be included cmovnl eax, edx
 ins:cmovnl eax, edx
 reg:eax
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 ins:mov rdx, qword ptr [rdi]
 reg:rdx
 Exe read_int
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdx+0x1]
 ins:lea rcx, ptr [rdx+0x1]
 reg:rcx
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rdx+0x1]
 ins:movzx edx, byte ptr [rdx+0x1]
 reg:edx
 Exe read_int
 INSTSELECTOR: instruction to be included sub edx, 0x30
 ins:sub edx, 0x30
 reg:edx
 Exe read_int
 INSTSELECTOR: instruction to be included cmp edx, 0x9
 ins:cmp edx, 0x9
 reg:rflags
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe read_int
 Exe read_int
 INSTSELECTOR: instruction to be included cmp eax, 0xccccccc
 ins:cmp eax, 0xccccccc
 reg:rflags
 Exe read_int
 Exe read_int
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp eax, 0x7fffffde
 ins:cmp eax, 0x7fffffde
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x7fffffde
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x530], 0x3c7
 ins:cmp dword ptr [rbp-0x530], 0x3c7
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsxd r13, dword ptr [rbp-0x530]
 ins:movsxd r13, dword ptr [rbp-0x530]
 reg:r13
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add r13, 0x20
 ins:add r13, 0x20
 reg:r13
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r13, 0x1000
 ins:cmp r13, 0x1000
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x24
 ins:cmp al, 0x24
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x4e0fc0]
 ins:movzx eax, byte ptr [rax+0x4e0fc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax*8+0x4e0dc0]
 ins:mov rdx, qword ptr [rax*8+0x4e0dc0]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov r15d, 0x4e1800
 ins:mov r15d, 0x4e1800
 reg:r15d
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included cmp esi, 0x20
 ins:cmp esi, 0x20
 reg:rflags
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included cmp esi, 0x30
 ins:cmp esi, 0x30
 reg:rflags
 NORMAL FLAG REG: inst cmp esi, 0x30
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov r15d, 0x4e17f0
 ins:mov r15d, 0x4e17f0
 reg:r15d
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included movzx esi, sil
 ins:movzx esi, sil
 reg:esi
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rax, 0x101010101010101
 ins:mov rax, 0x101010101010101
 reg:rax
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov r15, rsp
 ins:mov r15, rsp
 reg:r15
 Exe _IO_padn
 INSTSELECTOR: instruction to be included imul rsi, rax
 ins:imul rsi, rax
 reg:rsi
 Exe _IO_padn
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included cmp edx, 0xf
 ins:cmp edx, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0xf
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included cmp edx, 0xf
 ins:cmp edx, 0xf
 reg:rflags
 NORMAL FLAG REG: inst cmp edx, 0xf
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov r14d, 0x4ebfa8
 ins:mov r14d, 0x4ebfa8
 reg:r14d
 Exe _IO_padn
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_padn
 INSTSELECTOR: instruction to be included sub r14, 0x4eb780
 ins:sub r14, 0x4eb780
 reg:r14
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [r13+0xd8]
 ins:mov rbp, qword ptr [r13+0xd8]
 reg:rbp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_padn
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_padn
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_padn
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included movsxd rdx, ebx
 ins:movsxd rdx, ebx
 reg:rdx
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included add r12, rax
 ins:add r12, rax
 reg:r12
 Exe _IO_padn
 Exe _IO_padn
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _IO_padn
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _IO_padn
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x530]
 ins:mov r11, qword ptr [rbp-0x530]
 reg:r11
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp r11, rax
 ins:cmp r11, rax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, 0x7fffffff
 ins:mov eax, 0x7fffffff
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, dword ptr [rbp-0x4d0]
 ins:sub eax, dword ptr [rbp-0x4d0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x538]
 ins:mov ecx, dword ptr [rbp-0x538]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x520]
 ins:mov r10d, dword ptr [rbp-0x520]
 reg:r10d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp ecx, eax
 ins:cmp ecx, eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add dword ptr [rbp-0x4d0], ecx
 ins:add dword ptr [rbp-0x4d0], ecx
 reg:rflags
 COMP2MEM: inst add dword ptr [rbp-0x4d0], ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea r13, ptr [rbp-0x38]
 ins:lea r13, ptr [rbp-0x38]
 reg:r13
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x1]
 ins:movzx eax, byte ptr [rax+0x1]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, 0x469990
 ins:mov edx, 0x469990
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x5a
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x4e0fc0]
 ins:movzx eax, byte ptr [rax+0x4e0fc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax*8+0x4e0ec0]
 ins:mov rdx, qword ptr [rax*8+0x4e0ec0]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x4c0]
 ins:lea rdi, ptr [rbp-0x4c0]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+0x1]
 ins:lea rax, ptr [rax+0x1]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rdx+0x1]
 ins:movzx ecx, byte ptr [rdx+0x1]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp cl, 0x2a
 ins:cmp cl, 0x2a
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx edx, cl
 ins:movzx edx, cl
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub edx, 0x30
 ins:sub edx, 0x30
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x9
 ins:cmp edx, 0x9
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbp-0x4c0]
 ins:lea rdi, ptr [rbp-0x4c0]
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x538], 0x3c8
 ins:cmp dword ptr [rbp-0x538], 0x3c8
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x530]
 ins:mov eax, dword ptr [rbp-0x530]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x538], eax
 ins:cmp dword ptr [rbp-0x538], eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x4c0]
 ins:mov rax, qword ptr [rbp-0x4c0]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp al, 0x5a
 ins:cmp al, 0x5a
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub eax, 0x20
 ins:sub eax, 0x20
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax+0x4e0fc0]
 ins:movzx eax, byte ptr [rax+0x4e0fc0]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax*8+0x4e0cc0]
 ins:mov rdx, qword ptr [rax*8+0x4e0cc0]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea r13, ptr [rbp-0x480]
 ins:lea r13, ptr [rbp-0x480]
 reg:r13
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, 0x5
 ins:mov ecx, 0x5
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp-0x54c]
 ins:mov esi, dword ptr [rbp-0x54c]
 reg:esi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp-0x528]
 ins:movzx edx, byte ptr [rbp-0x528]
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included rep stosd dword ptr [rdi]
 ins:rep stosd dword ptr [rdi]
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included rep stosd dword ptr [rdi]
 ins:rep stosd dword ptr [rdi]
 reg:rcx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x538]
 ins:mov eax, dword ptr [rbp-0x538]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rbp-0x558]
 ins:movzx ecx, byte ptr [rbp-0x558]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl edx, 0x2
 ins:shl edx, 0x2
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x530]
 ins:mov eax, dword ptr [rbp-0x530]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and ecx, 0x1
 ins:and ecx, 0x1
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add ecx, ecx
 ins:add ecx, ecx
 reg:ecx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp-0x508]
 ins:movsx eax, byte ptr [rbp-0x508]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, ecx
 ins:or eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rbp-0x548]
 ins:movzx ecx, byte ptr [rbp-0x548]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp-0x540]
 ins:movzx edx, byte ptr [rbp-0x540]
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and ecx, 0x1
 ins:and ecx, 0x1
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl ecx, 0x3
 ins:shl ecx, 0x3
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, ecx
 ins:or eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rbp-0x520]
 ins:movzx ecx, byte ptr [rbp-0x520]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl edx, 0x4
 ins:shl edx, 0x4
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp-0x544]
 ins:movzx edx, byte ptr [rbp-0x544]
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and ecx, 0x1
 ins:and ecx, 0x1
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl ecx, 0x5
 ins:shl ecx, 0x5
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, ecx
 ins:or eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rbp-0x568]
 ins:movzx ecx, byte ptr [rbp-0x568]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl edx, 0x6
 ins:shl edx, 0x6
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl ecx, 0x7
 ins:shl ecx, 0x7
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included or eax, ecx
 ins:or eax, ecx
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp-0x56c]
 ins:movzx eax, byte ptr [rbp-0x56c]
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included shl eax, 0x3
 ins:shl eax, 0x3
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp-0x4fa]
 ins:movzx eax, byte ptr [rbp-0x4fa]
 reg:eax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15+0x8]
 ins:mov rax, qword ptr [r15+0x8]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, 0xf
 ins:add rax, 0xf
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x10]
 ins:lea rdx, ptr [rax+0x10]
 reg:rdx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included fld st, ptr [rax]
 ins:fld st, ptr [rax]
 reg:st0
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x490]
 ins:lea rax, ptr [rbp-0x490]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbp-0x4a0]
 ins:lea rdx, ptr [rbp-0x4a0]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15+0x4]
 ins:mov edx, dword ptr [r15+0x4]
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0xb0
 ins:cmp edx, 0xb0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x10
 ins:add edx, 0x10
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rax]
 ins:movsd xmm0, qword ptr [rax]
 reg:xmm0
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x490]
 ins:lea rax, ptr [rbp-0x490]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbp-0x4a0]
 ins:lea rdx, ptr [rbp-0x4a0]
 reg:rdx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe ___printf_fp
 INSTSELECTOR: instruction to be included mov rcx, 0xffffffffffffff90
 ins:mov rcx, 0xffffffffffffff90
 reg:rcx
 Exe ___printf_fp
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe ___printf_fp
 INSTSELECTOR: instruction to be included mov rsi, qword ptr fs:[rcx]
 ins:mov rsi, qword ptr fs:[rcx]
 reg:rsi
 Exe ___printf_fp
 INSTSELECTOR: instruction to be included mov rcx, rdx
 ins:mov rcx, rdx
 reg:rcx
 Exe ___printf_fp
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe ___printf_fp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r12, rdx
 ins:mov r12, rdx
 reg:r12
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, 0x128
 ins:sub rsp, 0x128
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rdx+0xd]
 ins:movzx edx, byte ptr [rdx+0xd]
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shr al, 0x2
 ins:shr al, 0x2
 reg:al
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edi, al
 ins:movzx edi, al
 reg:edi
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsi+0x8]
 ins:mov rsi, qword ptr [rsi+0x8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx r13d, byte ptr [r12+0xc]
 ins:movzx r13d, byte ptr [r12+0xc]
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsi+0x40]
 ins:mov rdi, qword ptr [rsi+0x40]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r13b, r13b
 ins:test r13b, r13b
 reg:rflags
 NORMAL FLAG REG: inst test r13b, r13b
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsi+0x58]
 ins:mov edi, dword ptr [rsi+0x58]
 reg:edi
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsi+0x50]
 ins:mov rsi, qword ptr [rsi+0x50]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rsi]
 ins:movzx edi, byte ptr [rsi]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, edi
 ins:mov esi, edi
 reg:esi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub esi, 0x1
 ins:sub esi, 0x1
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp sil, 0x7d
 ins:cmp sil, 0x7d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r13b, 0x1
 ins:test r13b, 0x1
 reg:rflags
 NORMAL FLAG REG: inst test r13b, 0x1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 ins:mov rax, qword ptr [rcx]
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsd xmm1, qword ptr [rax]
 ins:movsd xmm1, qword ptr [rax]
 reg:xmm1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __isnan
 INSTSELECTOR: instruction to be included mov rax, 0x7fffffffffffffff
 ins:mov rax, 0x7fffffffffffffff
 reg:rax
 Exe __isnan
 INSTSELECTOR: instruction to be included movq rdx, xmm0
 ins:movq rdx, xmm0
 reg:rdx
 Exe __isnan
 INSTSELECTOR: instruction to be included and rdx, rax
 ins:and rdx, rax
 reg:rdx
 Exe __isnan
 INSTSELECTOR: instruction to be included mov rax, 0x7ff0000000000000
 ins:mov rax, 0x7ff0000000000000
 reg:rax
 Exe __isnan
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe __isnan
 INSTSELECTOR: instruction to be included shr rax, 0x3f
 ins:shr rax, 0x3f
 reg:rax
 Exe __isnan
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0xc0]
 ins:movsd xmm0, qword ptr [rbp-0xc0]
 reg:xmm0
 Exe __printf_fp_l
 Exe isinf
 INSTSELECTOR: instruction to be included mov rdx, 0x7fffffffffffffff
 ins:mov rdx, 0x7fffffffffffffff
 reg:rdx
 Exe isinf
 INSTSELECTOR: instruction to be included mov rax, 0x7ff0000000000000
 ins:mov rax, 0x7ff0000000000000
 reg:rax
 Exe isinf
 INSTSELECTOR: instruction to be included movq rcx, xmm0
 ins:movq rcx, xmm0
 reg:rcx
 Exe isinf
 INSTSELECTOR: instruction to be included and rdx, rcx
 ins:and rdx, rcx
 reg:rdx
 Exe isinf
 INSTSELECTOR: instruction to be included sar rcx, 0x3e
 ins:sar rcx, 0x3e
 reg:rcx
 Exe isinf
 INSTSELECTOR: instruction to be included xor rdx, rax
 ins:xor rdx, rax
 reg:rdx
 Exe isinf
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe isinf
 INSTSELECTOR: instruction to be included neg rax
 ins:neg rax
 reg:rax
 Exe isinf
 INSTSELECTOR: instruction to be included or rax, rdx
 ins:or rax, rdx
 reg:rax
 Exe isinf
 INSTSELECTOR: instruction to be included sar rax, 0x3f
 ins:sar rax, 0x3f
 reg:rax
 Exe isinf
 INSTSELECTOR: instruction to be included not eax
 ins:not eax
 reg:eax
 Exe isinf
 INSTSELECTOR: instruction to be included and eax, ecx
 ins:and eax, ecx
 reg:eax
 Exe isinf
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, 0xffffffffffffffc8
 ins:mov rdx, 0xffffffffffffffc8
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rcx, dword ptr [r12+0x8]
 ins:movsxd rcx, dword ptr [r12+0x8]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shr eax, 0x1f
 ins:shr eax, 0x1f
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r14d, 0x4e103c
 ins:mov r14d, 0x4e103c
 reg:r14d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15d, 0x4e101f
 ins:mov r15d, 0x4e101f
 reg:r15d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr fs:[rdx]
 ins:mov rdx, qword ptr fs:[rdx]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rdx+rcx*2]
 ins:movzx edx, word ptr [rdx+rcx*2]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, 0x4e105c
 ins:mov ecx, 0x4e105c
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and dx, 0x100
 ins:and dx, 0x100
 reg:dx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, 0x4e1027
 ins:mov edx, 0x4e1027
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovz r14, rcx
 ins:cmovz r14, rcx
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovz r15, rdx
 ins:cmovz r15, rdx
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [r12+0x4]
 ins:mov ecx, dword ptr [r12+0x4]
 reg:ecx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r13b, 0x50
 ins:test r13b, 0x50
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp-0x70]
 ins:lea rax, ptr [rbp-0x70]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea r13, ptr [rbp-0x90]
 ins:lea r13, ptr [rbp-0x90]
 reg:r13
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp-0xa0]
 ins:lea rcx, ptr [rbp-0xa0]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsd xmm0, qword ptr [rbp-0xc0]
 ins:movsd xmm0, qword ptr [rbp-0xc0]
 reg:xmm0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x28]
 ins:lea rdx, ptr [rax+0x28]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp-0x10]
 ins:mov rax, qword ptr [rsp-0x10]
 reg:rax
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included shr rsi, 0x3f
 ins:shr rsi, 0x3f
 reg:rsi
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov rcx, rax
 ins:mov rcx, rax
 reg:rcx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov rsi, 0xfffffffffffff
 ins:mov rsi, 0xfffffffffffff
 reg:rsi
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included shr rcx, 0x34
 ins:shr rcx, 0x34
 reg:rcx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included and rsi, rax
 ins:and rsi, rax
 reg:rsi
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included shr rax, 0x30
 ins:shr rax, 0x30
 reg:rax
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included and ecx, 0x7ff
 ins:and ecx, 0x7ff
 reg:ecx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included sub ecx, 0x3ff
 ins:sub ecx, 0x3ff
 reg:ecx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included test eax, 0x7ff0
 ins:test eax, 0x7ff0
 reg:rflags
 NORMAL FLAG REG: inst test eax, 0x7ff0
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included bsr rax, rsi
 ins:bsr rax, rsi
 reg:rax
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included xor rax, 0x3f
 ins:xor rax, 0x3f
 reg:rax
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included lea ecx, ptr [rax-0xb]
 ins:lea ecx, ptr [rax-0xb]
 reg:ecx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included shl rsi, cl
 ins:shl rsi, cl
 reg:rsi
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov ecx, 0xfffffc0d
 ins:mov ecx, 0xfffffc0d
 reg:ecx
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov rax, 0x10000000000000
 ins:mov rax, 0x10000000000000
 reg:rax
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included or rax, rsi
 ins:or rax, rsi
 reg:rax
 Exe __mpn_extract_double
 Exe __mpn_extract_double
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __mpn_extract_double
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shl r14d, 0x6
 ins:shl r14d, 0x6
 reg:r14d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r14d, 0x34
 ins:sub r14d, 0x34
 reg:r14d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rbp-0x48]
 ins:mov r8d, dword ptr [rbp-0x48]
 reg:r8d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sar edx, 0x1f
 ins:sar edx, 0x1f
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, edx
 ins:mov esi, edx
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included xor esi, r8d
 ins:xor esi, r8d
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub esi, edx
 ins:sub esi, edx
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add esi, 0x3f
 ins:add esi, 0x3f
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sar esi, 0x6
 ins:sar esi, 0x6
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add esi, 0x4
 ins:add esi, 0x4
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rsi, esi
 ins:movsxd rsi, esi
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rcx, ptr [rsi*8+0x1e]
 ins:lea rcx, ptr [rsi*8+0x1e]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff0
 ins:and rdx, 0xfffffffffffffff0
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rsi, 0xfffffffffffff000
 ins:and rsi, 0xfffffffffffff000
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, rsi
 ins:sub rdi, rsi
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rsp, rsi
 ins:cmp rsp, rsi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rdx-0x8]
 ins:lea rsi, ptr [rdx-0x8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, rdx
 ins:sub rsp, rdx
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rsi*1], 0x0
 ins:or qword ptr [rsp+rsi*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rsi*1], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x1f]
 ins:lea rdi, ptr [rsp+0x1f]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r11, rsp
 ins:mov r11, rsp
 reg:r11
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff0
 ins:and rdx, 0xfffffffffffffff0
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdi, 0xfffffffffffffff0
 ins:and rdi, 0xfffffffffffffff0
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rsi, 0xfffffffffffff000
 ins:and rsi, 0xfffffffffffff000
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r11, rsi
 ins:sub r11, rsi
 reg:r11
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, r11
 ins:mov rsi, r11
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rsp, rsi
 ins:cmp rsp, rsi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and edx, 0xfff
 ins:and edx, 0xfff
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rdx-0x8]
 ins:lea rsi, ptr [rdx-0x8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, rdx
 ins:sub rsp, rdx
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rsi*1], 0x0
 ins:or qword ptr [rsp+rsi*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rsi*1], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x1f]
 ins:lea rdx, ptr [rsp+0x1f]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rcx, 0xfffffffffffffff0
 ins:and rcx, 0xfffffffffffffff0
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff0
 ins:and rdx, 0xfffffffffffffff0
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rcx
 ins:mov rdx, rcx
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffff000
 ins:and rdx, 0xfffffffffffff000
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsi, rdx
 ins:sub rsi, rdx
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rsp, rdx
 ins:cmp rsp, rdx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and ecx, 0xfff
 ins:and ecx, 0xfff
 reg:ecx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rcx-0x8]
 ins:lea rdx, ptr [rcx-0x8]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, rcx
 ins:sub rsp, rcx
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rdx*1], 0x0
 ins:or qword ptr [rsp+rdx*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rdx*1], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x1f]
 ins:lea rdx, ptr [rsp+0x1f]
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffffff0
 ins:and rdx, 0xfffffffffffffff0
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r8d, 0x2
 ins:cmp r8d, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp r8d, 0x2
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r8d, r8d
 ins:test r8d, r8d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea ecx, ptr [r14+r8*1]
 ins:lea ecx, ptr [r14+r8*1]
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, r14d
 ins:mov ecx, r14d
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe __printf_fp_l
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+rdx*8-0x8]
 ins:lea rdi, ptr [rdi+rdx*8-0x8]
 reg:rdi
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+rdx*8-0x8]
 ins:lea rsi, ptr [rsi+rdx*8-0x8]
 reg:rsi
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included and eax, 0x3
 ins:and eax, 0x3
 reg:eax
 Exe __mpn_lshift
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi]
 ins:mov r10, qword ptr [rsi]
 reg:r10
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsi-0x8]
 ins:mov r11, qword ptr [rsi-0x8]
 reg:r11
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included shld rax, r10, cl
 ins:shld rax, r10, cl
 reg:rax
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi-0x10]
 ins:mov r8, qword ptr [rsi-0x10]
 reg:r8
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x18]
 ins:lea rdi, ptr [rdi+0x18]
 reg:rdi
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included sub rdx, 0x4
 ins:sub rdx, 0x4
 reg:rdx
 Exe __mpn_lshift
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 ins:cmp eax, 0x2
 reg:rflags
 Exe __mpn_lshift
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi]
 ins:mov r9, qword ptr [rsi]
 reg:r9
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included shld rax, r9, cl
 ins:shld rax, r9, cl
 reg:rax
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included sub rdx, 0x2
 ins:sub rdx, 0x2
 reg:rdx
 Exe __mpn_lshift
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi-0x8]
 ins:mov r10, qword ptr [rsi-0x8]
 reg:r10
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsi-0x10]
 ins:mov r11, qword ptr [rsi-0x10]
 reg:r11
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi-0x8]
 ins:lea rsi, ptr [rsi-0x8]
 reg:rsi
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe __mpn_lshift
 Exe __mpn_lshift
 INSTSELECTOR: instruction to be included shl r9, cl
 ins:shl r9, cl
 reg:r9
 Exe __mpn_lshift
 Exe __mpn_lshift
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x58]
 ins:mov rdx, qword ptr [rbp-0x58]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x48]
 ins:mov r10d, dword ptr [rbp-0x48]
 reg:r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15d, 0x4e5778
 ins:mov r15d, 0x4e5778
 reg:r15d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r14d, 0xc
 ins:mov r14d, 0xc
 reg:r14d
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rcx, ptr [rdx+0x1]
 ins:lea rcx, ptr [rdx+0x1]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included neg r10d
 ins:neg r10d
 reg:r10d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x60]
 ins:mov rcx, qword ptr [rbp-0x60]
 reg:rcx
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r15, 0x18
 ins:sub r15, 0x18
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [r15+0x14], r10d
 ins:cmp dword ptr [r15+0x14], r10d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15+0x8]
 ins:mov rax, qword ptr [r15+0x8]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r15]
 ins:mov rcx, qword ptr [r15]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x1]
 ins:lea rdx, ptr [rax-0x1]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rcx*8+0x4e57c8]
 ins:lea rsi, ptr [rcx*8+0x4e57c8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x68]
 ins:mov rdi, qword ptr [rbp-0x68]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x60]
 ins:mov rcx, qword ptr [rbp-0x60]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r14d, 0x1
 ins:sub r14d, 0x1
 reg:r14d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r15, 0x4e5658
 ins:cmp r15, 0x4e5658
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp-0xd8]
 ins:mov rbx, qword ptr [rbp-0xd8]
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xc0]
 ins:mov eax, dword ptr [rbp-0xc0]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r15, 0x18
 ins:sub r15, 0x18
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [r15+0x14], r10d
 ins:cmp dword ptr [r15+0x14], r10d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r15+0x8]
 ins:mov rax, qword ptr [r15+0x8]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r15]
 ins:mov rcx, qword ptr [r15]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x1]
 ins:lea rdx, ptr [rax-0x1]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x58]
 ins:mov rax, qword ptr [rbp-0x58]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rcx*8+0x4e57c8]
 ins:lea rsi, ptr [rcx*8+0x4e57c8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x68]
 ins:mov rdi, qword ptr [rbp-0x68]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0x60]
 ins:mov rcx, qword ptr [rbp-0x60]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x60]
 ins:mov rsi, qword ptr [rbp-0x60]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x68]
 ins:mov rdi, qword ptr [rbp-0x68]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rcx, ptr [rcx*8+0x4e57c8]
 ins:lea rcx, ptr [rcx*8+0x4e57c8]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, rdx
 ins:mov r8, rdx
 reg:r8
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __printf_fp_l
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r9, rdi
 ins:mov r9, rdi
 reg:r9
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r14, rcx
 ins:mov r14, rcx
 reg:r14
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r12, rdx
 ins:mov r12, rdx
 reg:r12
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov rbx, r8
 ins:mov rbx, r8
 reg:rbx
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included sub rsp, 0x58
 ins:sub rsp, 0x58
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included cmp r8, 0x1f
 ins:cmp r8, 0x1f
 reg:rflags
 NORMAL FLAG REG: inst cmp r8, 0x1f
 Exe __mpn_mul
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rcx]
 ins:mov rcx, qword ptr [rcx]
 reg:rcx
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included cmp rcx, 0x1
 ins:cmp rcx, 0x1
 reg:rflags
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x38]
 ins:mov rsi, qword ptr [rbp-0x38]
 reg:rsi
 Exe __mpn_mul
 Exe __mpn_mul
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included xor r10, r10
 ins:xor r10, r10
 reg:r10
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mul rcx
 ins:mul rcx
 reg:rdx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov r11, rbx
 ins:mov r11, rbx
 reg:r11
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included add rax, r10
 ins:add rax, r10
 reg:rax
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included adc rdx, 0x0
 ins:adc rdx, 0x0
 reg:rdx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included and ebx, 0x3
 ins:and ebx, 0x3
 reg:ebx
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+r11*8-0x10]
 ins:lea rsi, ptr [rsi+r11*8-0x10]
 reg:rsi
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+r11*8-0x20]
 ins:lea rdi, ptr [rdi+r11*8-0x20]
 reg:rdi
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included neg r11
 ins:neg r11
 reg:r11
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included xor r8, r8
 ins:xor r8, r8
 reg:r8
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov r10, rax
 ins:mov r10, rax
 reg:r10
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi+r11*8+0x18]
 ins:mov rax, qword ptr [rsi+r11*8+0x18]
 reg:rax
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov r9, rdx
 ins:mov r9, rdx
 reg:r9
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mul rcx
 ins:mul rcx
 reg:rdx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included add r11, 0x4
 ins:add r11, 0x4
 reg:r11
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included add r9, rax
 ins:add r9, rax
 reg:r9
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included adc rdx, r8
 ins:adc rdx, r8
 reg:rdx
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included add rdx, r8
 ins:add rdx, r8
 reg:rdx
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __mpn_mul_1
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbp-0x40]
 ins:mov r9, qword ptr [rbp-0x40]
 reg:r9
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included cmp rbx, 0x1
 ins:cmp rbx, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x1
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included lea r13, ptr [r12*8]
 ins:lea r13, ptr [r12*8]
 reg:r13
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included lea r15, ptr [r9+0x8]
 ins:lea r15, ptr [r9+0x8]
 reg:r15
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included add r14, 0x8
 ins:add r14, 0x8
 reg:r14
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included lea rbx, ptr [r9+rbx*8]
 ins:lea rbx, ptr [r9+rbx*8]
 reg:rbx
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r12, r14
 ins:mov r12, r14
 reg:r12
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe __mpn_mul
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe __mpn_mul
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __mpn_mul
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x58]
 ins:mov rdx, qword ptr [rbp-0x58]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x48]
 ins:mov r10d, dword ptr [rbp-0x48]
 reg:r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, rdx
 ins:mov rcx, rdx
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rcx, qword ptr [r15+0x8]
 ins:add rcx, qword ptr [r15+0x8]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rbx, ptr [rcx-0x1]
 ins:lea rbx, ptr [rcx-0x1]
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rcx, 0x2
 ins:sub rcx, 0x2
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x68]
 ins:mov rax, qword ptr [rbp-0x68]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovz rbx, rcx
 ins:cmovz rbx, rcx
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea r9, ptr [rbx*8]
 ins:lea r9, ptr [rbx*8]
 reg:r9
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, rdx
 ins:sub rdi, rdx
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included bsr rax, qword ptr [rax+r9*1-0x8]
 ins:bsr rax, qword ptr [rax+r9*1-0x8]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shl edx, 0x6
 ins:shl edx, 0x6
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included xor rax, 0x3f
 ins:xor rax, 0x3f
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8d, eax
 ins:mov r8d, eax
 reg:r8d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included not r8d
 ins:not r8d
 reg:r8d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r8d, edx
 ins:add r8d, edx
 reg:r8d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea edx, ptr [r10+0x3]
 ins:lea edx, ptr [r10+0x3]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, r8d
 ins:cmp edx, r8d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+0x2]
 ins:lea eax, ptr [r10+0x2]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r8d, eax
 ins:cmp r8d, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x68]
 ins:mov r11, qword ptr [rbp-0x68]
 reg:r11
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r10d, r8d
 ins:sub r10d, r8d
 reg:r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, r14d
 ins:mov ecx, r14d
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r11]
 ins:mov r8, qword ptr [r11]
 reg:r8
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or dword ptr [rbp-0xc0], eax
 ins:or dword ptr [rbp-0xc0], eax
 reg:rflags
 COMP2MEM: inst or dword ptr [rbp-0xc0], eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub eax, r10d
 ins:sub eax, r10d
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 NORMAL FLAG REG: inst test r10d, r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovs r13d, eax
 ins:cmovs r13d, eax
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 ins:cmp eax, 0x3c
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, 0x3c
 ins:mov ecx, 0x3c
 reg:ecx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0xa
 ins:mov eax, 0xa
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shl rax, cl
 ins:shl rax, cl
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+0x2]
 ins:lea eax, ptr [r10+0x2]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r8d, eax
 ins:cmp r8d, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x68]
 ins:mov r11, qword ptr [rbp-0x68]
 reg:r11
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r10d, r8d
 ins:sub r10d, r8d
 reg:r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, r14d
 ins:mov ecx, r14d
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r11]
 ins:mov r8, qword ptr [r11]
 reg:r8
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included shl eax, cl
 ins:shl eax, cl
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or dword ptr [rbp-0xc0], eax
 ins:or dword ptr [rbp-0xc0], eax
 reg:rflags
 COMP2MEM: inst or dword ptr [rbp-0xc0], eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub eax, r10d
 ins:sub eax, r10d
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 NORMAL FLAG REG: inst test r10d, r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovs r13d, eax
 ins:cmovs r13d, eax
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdi, ptr [r11+0x8]
 ins:lea rdi, ptr [r11+0x8]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea eax, ptr [r10+0x3]
 ins:lea eax, ptr [r10+0x3]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, r8d
 ins:cmp eax, r8d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rbp-0x68]
 ins:mov r11, qword ptr [rbp-0x68]
 reg:r11
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [r11+r9*1-0x8], rax
 ins:cmp qword ptr [r11+r9*1-0x8], rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 NORMAL FLAG REG: inst test r10d, r10d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp-0xd8]
 ins:mov rbx, qword ptr [rbp-0xd8]
 reg:rbx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x58]
 ins:mov rdx, qword ptr [rbp-0x58]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x60]
 ins:mov rsi, qword ptr [rbp-0x60]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, 0xa
 ins:mov ecx, 0xa
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x68]
 ins:mov rdi, qword ptr [rbp-0x68]
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0x68]
 ins:mov rsi, qword ptr [rbp-0x68]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0x4
 ins:mov eax, 0x4
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp-0x58]
 ins:mov r13, qword ptr [rbp-0x58]
 reg:r13
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included tzcnt rdx, qword ptr [rsi]
 ins:tzcnt rdx, qword ptr [rsi]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x48], 0x4
 ins:cmp dword ptr [rbp-0x48], 0x4
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x48], 0x4
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovle eax, dword ptr [rbp-0x48]
 ins:cmovle eax, dword ptr [rbp-0x48]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, eax
 ins:cmp edx, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x60]
 ins:mov rdi, qword ptr [rbp-0x60]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, 0x40
 ins:mov ecx, 0x40
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x60]
 ins:mov rdi, qword ptr [rbp-0x60]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, eax
 ins:mov ecx, eax
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe __printf_fp_l
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included and eax, 0x3
 ins:and eax, 0x3
 reg:eax
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi]
 ins:mov r10, qword ptr [rsi]
 reg:r10
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsi+0x8]
 ins:mov r11, qword ptr [rsi+0x8]
 reg:r11
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included shrd rax, r10, cl
 ins:shrd rax, r10, cl
 reg:rax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi+0x10]
 ins:mov r8, qword ptr [rsi+0x10]
 reg:r8
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x8]
 ins:lea rsi, ptr [rsi+0x8]
 reg:rsi
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi-0x18]
 ins:lea rdi, ptr [rdi-0x18]
 reg:rdi
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included sub rdx, 0x4
 ins:sub rdx, 0x4
 reg:rdx
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 ins:cmp eax, 0x2
 reg:rflags
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi]
 ins:mov r9, qword ptr [rsi]
 reg:r9
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included shrd rax, r9, cl
 ins:shrd rax, r9, cl
 reg:rax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included sub rdx, 0x2
 ins:sub rdx, 0x2
 reg:rdx
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x8]
 ins:mov r10, qword ptr [rsi+0x8]
 reg:r10
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r11, qword ptr [rsi+0x10]
 ins:mov r11, qword ptr [rsi+0x10]
 reg:r11
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x10]
 ins:lea rsi, ptr [rsi+0x10]
 reg:rsi
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi-0x10]
 ins:lea rdi, ptr [rdi-0x10]
 reg:rdi
 Exe __mpn_rshift
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsi]
 ins:mov r8, qword ptr [rsi]
 reg:r8
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rsi+0x8]
 ins:mov r9, qword ptr [rsi+0x8]
 reg:r9
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included shrd rax, r8, cl
 ins:shrd rax, r8, cl
 reg:rax
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included sub rdx, 0x3
 ins:sub rdx, 0x3
 reg:rdx
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rsi+0x10]
 ins:mov r10, qword ptr [rsi+0x10]
 reg:r10
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rsi, ptr [rsi+0x18]
 ins:lea rsi, ptr [rsi+0x18]
 reg:rsi
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi-0x8]
 ins:lea rdi, ptr [rdi-0x8]
 reg:rdi
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included shrd r8, r9, cl
 ins:shrd r8, r9, cl
 reg:r8
 Exe __mpn_rshift
 Exe __mpn_rshift
 INSTSELECTOR: instruction to be included shr r9, cl
 ins:shr r9, cl
 reg:r9
 Exe __mpn_rshift
 Exe __mpn_rshift
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or dword ptr [rbp-0xc0], 0x1
 ins:or dword ptr [rbp-0xc0], 0x1
 reg:rflags
 COMP2MEM: inst or dword ptr [rbp-0xc0], 0x1
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xc0]
 ins:mov eax, dword ptr [rbp-0xc0]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r12+0x4]
 ins:mov eax, dword ptr [r12+0x4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [r12+0x8]
 ins:mov r13d, dword ptr [r12+0x8]
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, 0xffffffffffffffc0
 ins:mov rax, 0xffffffffffffffc0
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rdx, r13d
 ins:movsxd rdx, r13d
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[rax]
 ins:mov rax, qword ptr fs:[rax]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax+rdx*4]
 ins:mov eax, dword ptr [rax+rdx*4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp al, 0x65
 ins:cmp al, 0x65
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x65
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp-0x12c], 0x66
 ins:cmp byte ptr [rbp-0x12c], 0x66
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r12]
 ins:mov eax, dword ptr [r12]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [r12]
 ins:movsxd rax, dword ptr [r12]
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbp-0x40]
 ins:mov edx, dword ptr [rbp-0x40]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [rbp-0x48]
 ins:movsxd rdx, dword ptr [rbp-0x48]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, 0x66
 ins:mov r13d, 0x66
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rdx*1+0x2]
 ins:lea rax, ptr [rax+rdx*1+0x2]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea esi, ptr [rdx+0x1]
 ins:lea esi, ptr [rdx+0x1]
 reg:esi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x104]
 ins:mov eax, dword ptr [rbp-0x104]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rax, 0x2
 ins:add rax, 0x2
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, 0x66
 ins:mov r13d, 0x66
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x104]
 ins:mov eax, dword ptr [rbp-0x104]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xd0]
 ins:mov rax, qword ptr [rbp-0xd0]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea edx, ptr [rax-0x1]
 ins:lea edx, ptr [rax-0x1]
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dl, 0x7d
 ins:cmp dl, 0x7d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add qword ptr [rbp-0x110], rax
 ins:add qword ptr [rbp-0x110], rax
 reg:rflags
 COMP2MEM: inst add qword ptr [rbp-0x110], rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x110]
 ins:mov rdi, qword ptr [rbp-0x110]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, 0x3ffffffffffffffc
 ins:mov rax, 0x3ffffffffffffffc
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdi, rax
 ins:cmp rdi, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x110]
 ins:mov rdi, qword ptr [rbp-0x110]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, 0x3ffffffffffffffc
 ins:mov rax, 0x3ffffffffffffffc
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdi, rax
 ins:cmp rdi, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp-0xd8]
 ins:movsxd rax, dword ptr [rbp-0xd8]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdi, rax
 ins:cmp rdi, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x110]
 ins:mov rax, qword ptr [rbp-0x110]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea r14, ptr [rax*4+0x8]
 ins:lea r14, ptr [rax*4+0x8]
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r14, 0x1000
 ins:cmp r14, 0x1000
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [r14+0x1e]
 ins:lea rax, ptr [r14+0x1e]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rdx, 0xfffffffffffff000
 ins:and rdx, 0xfffffffffffff000
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsi, rdx
 ins:sub rsi, rdx
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rsp, rdx
 ins:cmp rsp, rdx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and eax, 0xfff
 ins:and eax, 0xfff
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax-0x8]
 ins:lea rdx, ptr [rax-0x8]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, rax
 ins:sub rsp, rax
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rdx*1], 0x0
 ins:or qword ptr [rsp+rdx*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rdx*1], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x1f]
 ins:lea rax, ptr [rsp+0x1f]
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and qword ptr [rbp-0x118], 0xfffffffffffffff0
 ins:and qword ptr [rbp-0x118], 0xfffffffffffffff0
 reg:rflags
 COMP2MEM: inst and qword ptr [rbp-0x118], 0xfffffffffffffff0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x118]
 ins:mov rax, qword ptr [rbp-0x118]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea r14, ptr [rax+0x8]
 ins:lea r14, ptr [rax+0x8]
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x40]
 ins:mov eax, dword ptr [rbp-0x40]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r13d, 0x66
 ins:cmp r13d, 0x66
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rbp-0x108]
 ins:mov r15d, dword ptr [rbp-0x108]
 reg:r15d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r15d, r15d
 ins:test r15d, r15d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, r13
 ins:mov rbx, r13
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rbp-0x108]
 ins:mov r15d, dword ptr [rbp-0x108]
 reg:r15d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rbp-0x118]
 ins:mov r14, qword ptr [rbp-0x118]
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp-0xc8]
 ins:mov r13, qword ptr [rbp-0xc8]
 reg:r13
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10, r13
 ins:mov r10, r13
 reg:r10
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x118]
 ins:mov rax, qword ptr [rbp-0x118]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp-0xe0]
 ins:mov esi, dword ptr [rbp-0xe0]
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub dword ptr [rbp-0x48], 0x1
 ins:sub dword ptr [rbp-0x48], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rbp-0x48], 0x1
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea r15, ptr [rax+0x10]
 ins:lea r15, ptr [rax+0x10]
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x104]
 ins:mov eax, dword ptr [rbp-0x104]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r12, rbx
 ins:mov r12, rbx
 reg:r12
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, r15
 ins:mov rbx, r15
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15d, r13d
 ins:mov r15d, r13d
 reg:r15d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xe8]
 ins:mov eax, dword ptr [rbp-0xe8]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r15d, eax
 ins:cmp r15d, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp r15d, eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0xd8], r15d
 ins:cmp dword ptr [rbp-0xd8], r15d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x58], 0x1
 ins:cmp qword ptr [rbp-0x58], 0x1
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rbp-0xc8]
 ins:mov r10, qword ptr [rbp-0xc8]
 reg:r10
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r15d, 0x1
 ins:add r15d, 0x1
 reg:r15d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rbx, 0x4
 ins:add rbx, 0x4
 reg:rbx
 Exe __printf_fp_l
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rbx, r10
 ins:mov rbx, r10
 reg:rbx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r10+0x30]
 ins:mov eax, dword ptr [r10+0x30]
 reg:eax
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included cmp dword ptr [r10+0x2c], 0x66
 ins:cmp dword ptr [r10+0x2c], 0x66
 reg:rflags
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbx+0x20]
 ins:mov r9, qword ptr [rbx+0x20]
 reg:r9
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov eax, dword ptr [r10+0x28]
 ins:mov eax, dword ptr [r10+0x28]
 reg:eax
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov ebp, 0x30
 ins:mov ebp, 0x30
 reg:ebp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included lea edx, ptr [rax-0x1]
 ins:lea edx, ptr [rax-0x1]
 reg:edx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe hack_digit.13299
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov eax, ebp
 ins:mov eax, ebp
 reg:eax
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov r9, qword ptr [rbx+0x20]
 ins:mov r9, qword ptr [rbx+0x20]
 reg:r9
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x18]
 ins:mov rdx, qword ptr [rbx+0x18]
 reg:rdx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included cmp r9, rdx
 ins:cmp r9, rdx
 reg:rflags
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x10]
 ins:mov rdi, qword ptr [rbx+0x10]
 reg:rdi
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov ebp, 0x30
 ins:mov ebp, 0x30
 reg:ebp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov ecx, 0xa
 ins:mov ecx, 0xa
 reg:ecx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x18]
 ins:mov rdx, qword ptr [rbx+0x18]
 reg:rdx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x10]
 ins:mov rdi, qword ptr [rbx+0x10]
 reg:rdi
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov ecx, 0xa
 ins:mov ecx, 0xa
 reg:ecx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdi+rdx*8-0x8]
 ins:lea rbx, ptr [rdi+rdx*8-0x8]
 reg:rbx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included sub rdx, 0x1
 ins:sub rdx, 0x1
 reg:rdx
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx]
 ins:mov rbp, qword ptr [rbx]
 reg:rbp
 Exe hack_digit.13299
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included dec r11
 ins:dec r11
 reg:r11
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __mpn_mul_1
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __mpn_mul_1
 Exe hack_digit.13299
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included add ebp, 0x30
 ins:add ebp, 0x30
 reg:ebp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included mov eax, ebp
 ins:mov eax, ebp
 reg:eax
 Exe hack_digit.13299
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe hack_digit.13299
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x30
 ins:cmp eax, 0x30
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rbp-0xc0]
 ins:mov r8d, dword ptr [rbp-0xc0]
 reg:r8d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r8d, r8d
 ins:test r8d, r8d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add dword ptr [rbp-0xa8], 0x1
 ins:add dword ptr [rbp-0xa8], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rbp-0xa8], 0x1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x104]
 ins:mov eax, dword ptr [rbp-0x104]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbp-0xa8]
 ins:mov edi, dword ptr [rbp-0xa8]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add dword ptr [rbp-0xd8], 0x1
 ins:add dword ptr [rbp-0xd8], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rbp-0xd8], 0x1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add eax, edi
 ins:add eax, edi
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xe8]
 ins:mov eax, dword ptr [rbp-0xe8]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r15d, eax
 ins:cmp r15d, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp r15d, eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0xd8], r15d
 ins:cmp dword ptr [rbp-0xd8], r15d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x58], 0x1
 ins:cmp qword ptr [rbp-0x58], 0x1
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, r15d
 ins:mov r13d, r15d
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15, rbx
 ins:mov r15, rbx
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15-0x4]
 ins:mov edx, dword ptr [r15-0x4]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, dword ptr [rbp-0xe0]
 ins:cmp edx, dword ptr [rbp-0xe0]
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rbp-0xc8]
 ins:mov r10, qword ptr [rbp-0xc8]
 reg:r10
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x35
 ins:cmp eax, 0x35
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x35
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbp-0xc0]
 ins:mov edx, dword ptr [rbp-0xc0]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp-0xd8]
 ins:mov esi, dword ptr [rbp-0xd8]
 reg:esi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x30
 ins:cmp eax, 0x30
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x30
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r9d, 0x1
 ins:mov r9d, 0x1
 reg:r9d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rbp-0x58]
 ins:mov r10, qword ptr [rbp-0x58]
 reg:r10
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r10, 0x1
 ins:cmp r10, 0x1
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x50], 0x0
 ins:cmp qword ptr [rbp-0x50], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbp-0x50], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r9d, 0x1
 ins:mov r9d, 0x1
 reg:r9d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 NORMAL FLAG REG: inst test r10, r10
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, r10
 ins:mov rdi, r10
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rbp-0x60]
 ins:mov r8, qword ptr [rbp-0x60]
 reg:r8
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [r8+r10*8-0x8], 0x0
 ins:cmp qword ptr [r8+r10*8-0x8], 0x0
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edi, word ptr [rbp-0x80]
 ins:movzx edi, word ptr [rbp-0x80]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and di, 0xc00
 ins:and di, 0xc00
 reg:di
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp di, 0x400
 ins:cmp di, 0x400
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp di, 0x800
 ins:cmp di, 0x800
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test di, di
 ins:test di, di
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x34
 ins:cmp eax, 0x34
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or eax, r9d
 ins:or eax, r9d
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r13d, esi
 ins:cmp r13d, esi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test byte ptr [r12+0xc], 0x8
 ins:test byte ptr [r12+0xc], 0x8
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbp-0xe0]
 ins:mov edi, dword ptr [rbp-0xe0]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [r15-0x4], edi
 ins:cmp dword ptr [r15-0x4], edi
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [r15-0x4], edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [r15-0x4]
 ins:lea rax, ptr [r15-0x4]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmovz r15, rax
 ins:cmovz r15, rax
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0xd0], 0x0
 ins:cmp qword ptr [rbp-0xd0], 0x0
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0xd0], 0x0
 ins:cmp qword ptr [rbp-0xd0], 0x0
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x120]
 ins:mov eax, dword ptr [rbp-0x120]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x108], eax
 ins:cmp dword ptr [rbp-0x108], eax
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x108], eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rbp-0x108]
 ins:mov r13d, dword ptr [rbp-0x108]
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xd0]
 ins:mov rax, qword ptr [rbp-0xd0]
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rax]
 ins:movzx eax, byte ptr [rax]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub eax, 0x1
 ins:sub eax, 0x1
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp al, 0x7d
 ins:cmp al, 0x7d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x44]
 ins:mov eax, dword ptr [rbp-0x44]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp eax, 0x66
 ins:cmp eax, 0x66
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x40]
 ins:mov ecx, dword ptr [rbp-0x40]
 reg:ecx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x40], 0x1
 ins:cmp dword ptr [rbp-0x40], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x40], 0x1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [r15+0x8]
 ins:lea rsi, ptr [r15+0x8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sbb eax, eax
 ins:sbb eax, eax
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and eax, 0xfffffffe
 ins:and eax, 0xfffffffe
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add eax, 0x2d
 ins:add eax, 0x2d
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbp-0x48]
 ins:mov edi, dword ptr [rbp-0x48]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edi, 0x9
 ins:cmp edi, 0x9
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa0]
 ins:mov eax, dword ptr [rbp-0xa0]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [r12+0xc]
 ins:movzx edx, byte ptr [r12+0xc]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test dl, 0x50
 ins:test dl, 0x50
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub dword ptr [rbp-0x124], 0x1
 ins:sub dword ptr [rbp-0x124], 0x1
 reg:rflags
 COMP2MEM: inst sub dword ptr [rbp-0x124], 0x1
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, r14
 ins:sub rdi, r14
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbp-0x124]
 ins:mov edi, dword ptr [rbp-0x124]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sar rsi, 0x2
 ins:sar rsi, 0x2
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub edi, esi
 ins:sub edi, esi
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and edx, 0x20
 ins:and edx, 0x20
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, r14
 ins:sub rdi, r14
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbp-0x124]
 ins:mov edi, dword ptr [rbp-0x124]
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sar rsi, 0x2
 ins:sar rsi, 0x2
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub edi, esi
 ins:sub edi, esi
 reg:edi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and edx, 0x20
 ins:and edx, 0x20
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, dword ptr [r12+0x10]
 ins:mov esi, dword ptr [r12+0x10]
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp esi, 0x30
 ins:cmp esi, 0x30
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbp-0xa4]
 ins:mov edx, dword ptr [rbp-0xa4]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd r13, edi
 ins:movsxd r13, edi
 reg:r13
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movsxd r13, dword ptr [rbp-0xc0]
 ins:movsxd r13, dword ptr [rbp-0xc0]
 reg:r13
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rax, r13
 ins:cmp rax, r13
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rbp-0x130]
 ins:mov esi, dword ptr [rbp-0x130]
 reg:esi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x118]
 ins:mov rdi, qword ptr [rbp-0x118]
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa0]
 ins:mov eax, dword ptr [rbp-0xa0]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rbp-0xc0]
 ins:mov r13d, dword ptr [rbp-0xc0]
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa4]
 ins:mov eax, dword ptr [rbp-0xa4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0xa0]
 ins:mov rax, qword ptr [rbx+0xa0]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r12+0xc]
 ins:movzx eax, byte ptr [r12+0xc]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test al, 0x40
 ins:test al, 0x40
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa4]
 ins:mov eax, dword ptr [rbp-0xa4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0xa0]
 ins:mov rax, qword ptr [rbx+0xa0]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test al, 0x10
 ins:test al, 0x10
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa4]
 ins:mov eax, dword ptr [rbp-0xa4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0xa0]
 ins:mov rax, qword ptr [rbx+0xa0]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test al, 0x20
 ins:test al, 0x20
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp dword ptr [r12+0x10], 0x30
 ins:cmp dword ptr [r12+0x10], 0x30
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0xa4]
 ins:mov eax, dword ptr [rbp-0xa4]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test byte ptr [r12+0xd], 0x8
 ins:test byte ptr [r12+0xd], 0x8
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [r12+0xd], 0x8
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0xb0]
 ins:mov rax, qword ptr [rbp-0xb0]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax+0xa8]
 ins:mov eax, dword ptr [rax+0xa8]
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0xf0]
 ins:mov rdi, qword ptr [rbp-0xf0]
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0xf0]
 ins:mov rdi, qword ptr [rbp-0xf0]
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0xf8]
 ins:mov rdi, qword ptr [rbp-0xf8]
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xd8]
 ins:mov rdx, qword ptr [rbp-0xd8]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0xd0]
 ins:mov rdi, qword ptr [rbp-0xd0]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included imul rdx, qword ptr [rbp-0x110]
 ins:imul rdx, qword ptr [rbp-0x110]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rdx, ptr [rdi+rdx*1+0x2]
 ins:lea rdx, ptr [rdi+rdx*1+0x2]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x138], 0x0
 ins:cmp qword ptr [rbp-0x138], 0x0
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+0x1e]
 ins:lea rax, ptr [rdx+0x1e]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffff0
 ins:and rax, 0xfffffffffffffff0
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and rsi, 0xfffffffffffff000
 ins:and rsi, 0xfffffffffffff000
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, rsi
 ins:sub rdi, rsi
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rsp, rsi
 ins:cmp rsp, rsi
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and eax, 0xfff
 ins:and eax, 0xfff
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax-0x8]
 ins:lea rsi, ptr [rax-0x8]
 reg:rsi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rsp, rax
 ins:sub rsp, rax
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included or qword ptr [rsp+rsi*1], 0x0
 ins:or qword ptr [rsp+rsi*1], 0x0
 reg:rflags
 COMP2MEM: inst or qword ptr [rsp+rsi*1], 0x0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x1f]
 ins:lea rax, ptr [rsp+0x1f]
 reg:rax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included and qword ptr [rbp-0xb0], 0xfffffffffffffff0
 ins:and qword ptr [rbp-0xb0], 0xfffffffffffffff0
 reg:rflags
 COMP2MEM: inst and qword ptr [rbp-0xb0], 0xfffffffffffffff0
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0xb0]
 ins:mov rdi, qword ptr [rbp-0xb0]
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rdx, rdi
 ins:add rdx, rdi
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r15, r14
 ins:cmp r15, r14
 reg:rflags
 NORMAL FLAG REG: inst cmp r15, r14
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rbp-0xe0]
 ins:mov r13d, dword ptr [rbp-0xe0]
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rbp-0x100]
 ins:mov ebx, dword ptr [rbp-0x100]
 reg:ebx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r12, r15
 ins:mov r12, r15
 reg:r12
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15, r14
 ins:mov r15, r14
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, r13d
 ins:cmp edx, r13d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xd0]
 ins:mov rdx, qword ptr [rbp-0xd0]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0xf0]
 ins:mov rsi, qword ptr [rbp-0xf0]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp ebx, edx
 ins:cmp ebx, edx
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rdi, 0x1
 ins:add rdi, 0x1
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r15, 0x4
 ins:add r15, 0x4
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r12, r15
 ins:cmp r12, r15
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, r13d
 ins:cmp edx, r13d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xd0]
 ins:mov rdx, qword ptr [rbp-0xd0]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0xf0]
 ins:mov rsi, qword ptr [rbp-0xf0]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r15, 0x4
 ins:add r15, 0x4
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp r12, r15
 ins:cmp r12, r15
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp edx, r13d
 ins:cmp edx, r13d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xd0]
 ins:mov rdx, qword ptr [rbp-0xd0]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbp-0xf0]
 ins:mov rsi, qword ptr [rbp-0xf0]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rbp-0xa8]
 ins:mov r13d, dword ptr [rbp-0xa8]
 reg:r13d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbp-0xe0]
 ins:mov rbx, qword ptr [rbp-0xe0]
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbp-0x100]
 ins:mov r12, qword ptr [rbp-0x100]
 reg:r12
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test byte ptr [r12+0xd], 0x8
 ins:test byte ptr [r12+0xd], 0x8
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rbp-0xb0]
 ins:mov rcx, qword ptr [rbp-0xb0]
 reg:rcx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r11d, dword ptr [rbp-0xa4]
 ins:mov r11d, dword ptr [rbp-0xa4]
 reg:r11d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r11d, r11d
 ins:test r11d, r11d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0xc8]
 ins:mov rdx, qword ptr [rbp-0xc8]
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add rdx, 0x3
 ins:add rdx, 0x3
 reg:rdx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sar rax, 0x2
 ins:sar rax, 0x2
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdx, 0x6
 ins:cmp rdx, 0x6
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, 0x6
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15, rax
 ins:mov r15, rax
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub rdi, rcx
 ins:sub rdi, rcx
 reg:rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rdi, 0x14
 ins:cmp rdi, 0x14
 reg:rflags
 NORMAL FLAG REG: inst cmp rdi, 0x14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15, rdi
 ins:mov r15, rdi
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r15, rdi
 ins:mov r15, rdi
 reg:r15
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r14, rcx
 ins:mov r14, rcx
 reg:r14
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r14, 0x1
 ins:add r14, 0x1
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x28]
 ins:mov rax, qword ptr [rbx+0x28]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbx+0x30]
 ins:cmp rax, qword ptr [rbx+0x30]
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, qword ptr [rbx+0x30]
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [r14-0x1]
 ins:movzx edx, byte ptr [r14-0x1]
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax+0x1]
 ins:lea rsi, ptr [rax+0x1]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea eax, ptr [r13+r14*1]
 ins:lea eax, ptr [r13+r14*1]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r15, 0x1
 ins:sub r15, 0x1
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included add r14, 0x1
 ins:add r14, 0x1
 reg:r14
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x28]
 ins:mov rax, qword ptr [rbx+0x28]
 reg:rax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rbx+0x30]
 ins:cmp rax, qword ptr [rbx+0x30]
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, qword ptr [rbx+0x30]
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [r14-0x1]
 ins:movzx edx, byte ptr [r14-0x1]
 reg:edx
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsi, ptr [rax+0x1]
 ins:lea rsi, ptr [rax+0x1]
 reg:rsi
 Exe __printf_fp_l
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea eax, ptr [r13+r14*1]
 ins:lea eax, ptr [r13+r14*1]
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub eax, ecx
 ins:sub eax, ecx
 reg:eax
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included sub r15, 0x1
 ins:sub r15, 0x1
 reg:r15
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x138], 0x0
 ins:cmp qword ptr [rbp-0x138], 0x0
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test byte ptr [r12+0xc], 0x20
 ins:test byte ptr [r12+0xc], 0x20
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [r12+0xc], 0x20
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rbp-0xc0]
 ins:mov r9d, dword ptr [rbp-0xc0]
 reg:r9d
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included test r9d, r9d
 ins:test r9d, r9d
 reg:rflags
 Exe __printf_fp_l
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe __printf_fp_l
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __printf_fp_l
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp-0x4d0]
 ins:mov ecx, dword ptr [rbp-0x4d0]
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, 0x7fffffff
 ins:mov edx, 0x7fffffff
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included sub edx, ecx
 ins:sub edx, ecx
 reg:edx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add ecx, eax
 ins:add ecx, eax
 reg:ecx
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp eax, edx
 ins:cmp eax, edx
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff90c]
 ins:mov rax, qword ptr [rip+0x2ff90c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306184]
 ins:mov rax, qword ptr [rip+0x306184]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30616c]
 ins:mov rax, qword ptr [rip+0x30616c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306154]
 ins:mov rax, qword ptr [rip+0x306154]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30613c]
 ins:mov rax, qword ptr [rip+0x30613c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306124]
 ins:mov rax, qword ptr [rip+0x306124]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30610c]
 ins:mov rax, qword ptr [rip+0x30610c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, rax
 ins:cvtsi2sd xmm0, rax
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3060f6]
 ins:mov rax, qword ptr [rip+0x3060f6]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3060d4]
 ins:mov rax, qword ptr [rip+0x3060d4]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, rax
 ins:cvtsi2sd xmm0, rax
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x3060be]
 ins:mov rax, qword ptr [rip+0x3060be]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x30609c]
 ins:mov rax, qword ptr [rip+0x30609c]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x98]
 ins:mov rax, qword ptr [rax+0x98]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, rax
 ins:cvtsi2sd xmm0, rax
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306086]
 ins:mov rax, qword ptr [rip+0x306086]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa0]
 ins:mov rax, qword ptr [rax+0xa0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included divsd xmm0, xmm1
 ins:divsd xmm0, xmm1
 reg:xmm0
 Exe main
 Exe main
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305bb6]
 ins:mov rax, qword ptr [rip+0x305bb6]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbp-0x38]
 ins:mov rdx, qword ptr [rbp-0x38]
 reg:rdx
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd528
 ins:mov edi, 0x4cd528
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305b90]
 ins:mov rax, qword ptr [rip+0x305b90]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa8]
 ins:mov rax, qword ptr [rax+0xa8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd550
 ins:mov edi, 0x4cd550
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm0, xmmword ptr [rdi]
 ins:movdqa xmm0, xmmword ptr [rdi]
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdi+0x10]
 ins:lea rdi, ptr [rdi+0x10]
 reg:rdi
 Exe strchrnul
 INSTSELECTOR: instruction to be included movdqa xmm3, xmm0
 ins:movdqa xmm3, xmm0
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm0, xmm1
 ins:pcmpeqb xmm0, xmm1
 reg:xmm0
 Exe strchrnul
 INSTSELECTOR: instruction to be included pcmpeqb xmm3, xmm2
 ins:pcmpeqb xmm3, xmm2
 reg:xmm3
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb edx, xmm0
 ins:pmovmskb edx, xmm0
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included pmovmskb ecx, xmm3
 ins:pmovmskb ecx, xmm3
 reg:ecx
 Exe strchrnul
 INSTSELECTOR: instruction to be included or ecx, edx
 ins:or ecx, edx
 reg:ecx
 Exe strchrnul
 Exe strchrnul
 INSTSELECTOR: instruction to be included bsf edx, ecx
 ins:bsf edx, ecx
 reg:edx
 Exe strchrnul
 INSTSELECTOR: instruction to be included lea rax, ptr [rdi+rdx*1-0x10]
 ins:lea rax, ptr [rdi+rdx*1-0x10]
 reg:rax
 Exe strchrnul
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x528], 0x0
 ins:cmp dword ptr [rbp-0x528], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rbp-0x528], 0x0
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov edx, dword ptr [r15]
 ins:mov edx, dword ptr [r15]
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp edx, 0x30
 ins:cmp edx, 0x30
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add rax, qword ptr [r15+0x10]
 ins:add rax, qword ptr [r15+0x10]
 reg:rax
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included add edx, 0x8
 ins:add edx, 0x8
 reg:edx
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included xor r10d, r10d
 ins:xor r10d, r10d
 reg:r10d
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 Exe _IO_vfprintf_internal
 INSTSELECTOR: instruction to be included cmp dword ptr [rbp-0x538], 0x0
 ins:cmp dword ptr [rbp-0x538], 0x0
 reg:rflags
 Exe _IO_vfprintf_internal
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305b70]
 ins:mov rax, qword ptr [rip+0x305b70]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xb8]
 ins:mov rax, qword ptr [rax+0xb8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd580
 ins:mov edi, 0x4cd580
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305b50]
 ins:mov rax, qword ptr [rip+0x305b50]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xb0]
 ins:mov rax, qword ptr [rax+0xb0]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd5b0
 ins:mov edi, 0x4cd5b0
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305b30]
 ins:mov rax, qword ptr [rip+0x305b30]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0xb0]
 ins:mov rdx, qword ptr [rax+0xb0]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305b22]
 ins:mov rax, qword ptr [rip+0x305b22]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xa8]
 ins:mov rax, qword ptr [rax+0xa8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sub rdx, rax
 ins:sub rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd5e0
 ins:mov edi, 0x4cd5e0
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305afc]
 ins:mov rax, qword ptr [rip+0x305afc]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0xb0]
 ins:mov rdx, qword ptr [rax+0xb0]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305aee]
 ins:mov rax, qword ptr [rip+0x305aee]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xb8]
 ins:mov rax, qword ptr [rax+0xb8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sub rdx, rax
 ins:sub rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd610
 ins:mov edi, 0x4cd610
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff248]
 ins:mov rax, qword ptr [rip+0x2ff248]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd640
 ins:mov edi, 0x4cd640
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff22f]
 ins:mov rax, qword ptr [rip+0x2ff22f]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm1, rax
 ins:cvtsi2sd xmm1, rax
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305aa3]
 ins:mov rax, qword ptr [rip+0x305aa3]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0xb0]
 ins:mov rdx, qword ptr [rax+0xb0]
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305a95]
 ins:mov rax, qword ptr [rip+0x305a95]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0xb8]
 ins:mov rax, qword ptr [rax+0xb8]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included sub rdx, rax
 ins:sub rdx, rax
 reg:rdx
 Exe main
 INSTSELECTOR: instruction to be included mov rax, rdx
 ins:mov rax, rdx
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included cvtsi2sd xmm0, rax
 ins:cvtsi2sd xmm0, rax
 reg:xmm0
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included divsd xmm1, xmm0
 ins:divsd xmm1, xmm0
 reg:xmm1
 Exe main
 INSTSELECTOR: instruction to be included movapd xmm0, xmm1
 ins:movapd xmm0, xmm1
 reg:xmm0
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x4cd670
 ins:mov edi, 0x4cd670
 reg:edi
 Exe main
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2ff1a7]
 ins:mov rax, qword ptr [rip+0x2ff1a7]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x305a17]
 ins:mov rax, qword ptr [rip+0x305a17]
 reg:rax
 Exe main
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe main
 Exe main
 INSTSELECTOR: instruction to be included mov edi, 0x0
 ins:mov edi, 0x0
 reg:edi
 Exe main
 Exe exit
 INSTSELECTOR: instruction to be included push rax
 ins:push rax
 reg:rsp
 Exe exit
 INSTSELECTOR: instruction to be included pop rax
 ins:pop rax
 reg:rax
 Exe exit
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe exit
 INSTSELECTOR: instruction to be included mov esi, 0x701158
 ins:mov esi, 0x701158
 reg:esi
 Exe exit
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe exit
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov r12d, edx
 ins:mov r12d, edx
 reg:r12d
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov ebx, edi
 ins:mov ebx, edi
 reg:ebx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp]
 ins:mov r13, qword ptr [rbp]
 reg:r13
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13+0x8]
 ins:mov rax, qword ptr [r13+0x8]
 reg:rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included shl rdx, 0x5
 ins:shl rdx, 0x5
 reg:rdx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+rdx*1-0x10]
 ins:lea rcx, ptr [r13+rdx*1-0x10]
 reg:rcx
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rcx]
 ins:mov r8, qword ptr [rcx]
 reg:r8
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp r8, 0x3
 ins:cmp r8, 0x3
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp r8, 0x4
 ins:cmp r8, 0x4
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp r8, 0x2
 ins:cmp r8, 0x2
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included sub rcx, 0x20
 ins:sub rcx, 0x20
 reg:rcx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx+0x8]
 ins:mov rax, qword ptr [rcx+0x8]
 reg:rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rcx+0x10]
 ins:mov rdi, qword ptr [rcx+0x10]
 reg:rdi
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov esi, ebx
 ins:mov esi, ebx
 reg:esi
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included ror rax, 0x11
 ins:ror rax, 0x11
 reg:rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x30]
 ins:xor rax, qword ptr fs:[0x30]
 reg:rax
 Exe __run_exit_handlers
 Exe fini
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x306ea1]
 ins:mov rax, qword ptr [rip+0x306ea1]
 reg:rax
 Exe fini
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe fini
 Exe fini
 INSTSELECTOR: instruction to be included mov edi, 0x4e3afb
 ins:mov edi, 0x4e3afb
 reg:edi
 Exe fini
 INSTSELECTOR: instruction to be included mov ecx, 0xe
 ins:mov ecx, 0xe
 reg:ecx
 Exe fini
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe fini
 INSTSELECTOR: instruction to be included rep cmpsb byte ptr [rsi], byte ptr [rdi]
 ins:rep cmpsb byte ptr [rsi], byte ptr [rdi]
 reg:rdi
 Exe fini
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included mov eax, 0x7027ef
 ins:mov eax, 0x7027ef
 reg:eax
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included sub rax, 0x7027e8
 ins:sub rax, 0x7027e8
 reg:rax
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included cmp rax, 0xe
 ins:cmp rax, 0xe
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, 0xe
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe deregister_tm_clones
 Exe deregister_tm_clones
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe deregister_tm_clones
 Exe __deregister_frame_info
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi]
 ins:mov eax, dword ptr [rdi]
 reg:eax
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included lea r12, ptr [rip-0x1e471]
 ins:lea r12, ptr [rip-0x1e471]
 reg:r12
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2dcee3]
 ins:lea rdi, ptr [rip+0x2dcee3]
 reg:rdi
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2dcf07]
 ins:mov rax, qword ptr [rip+0x2dcf07]
 reg:rax
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], rbp
 ins:cmp qword ptr [rax+0x18], rbp
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2dce34]
 ins:lea rax, ptr [rip+0x2dce34]
 reg:rax
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x28]
 ins:mov rdx, qword ptr [rbx+0x28]
 reg:rdx
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x2dce5b]
 ins:lea rdi, ptr [rip+0x2dce5b]
 reg:rdi
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe __deregister_frame_info_bases
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe __deregister_frame_info_bases
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe __deregister_frame_info_bases
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13+0x8]
 ins:mov rax, qword ptr [r13+0x8]
 reg:rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included shl rdx, 0x5
 ins:shl rdx, 0x5
 reg:rdx
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+rdx*1-0x10]
 ins:lea rcx, ptr [r13+rdx*1-0x10]
 reg:rcx
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included sub rax, 0x1
 ins:sub rax, 0x1
 reg:rax
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rcx]
 ins:mov r8, qword ptr [rcx]
 reg:r8
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp r8, 0x3
 ins:cmp r8, 0x3
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp r8, 0x4
 ins:cmp r8, 0x4
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r13]
 ins:mov rax, qword ptr [r13]
 reg:rax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included test r12b, r12b
 ins:test r12b, r12b
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp rax, 0x4ebfb0
 ins:cmp rax, 0x4ebfb0
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe __run_exit_handlers
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2cecb8]
 ins:mov rbx, qword ptr [rip+0x2cecb8]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ebp, dword ptr [rip+0x2d5542]
 ins:mov ebp, dword ptr [rip+0x2d5542]
 reg:ebp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov r13d, 0x4ebfa8
 ins:mov r13d, 0x4ebfa8
 reg:r13d
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub r13, 0x4eb780
 ins:sub r13, 0x4eb780
 reg:r13
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0xc0]
 ins:mov edx, dword ptr [rbx+0xc0]
 reg:edx
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0xa0]
 ins:mov rax, qword ptr [rbx+0xa0]
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x18]
 ins:mov rcx, qword ptr [rax+0x18]
 reg:rcx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x20], rcx
 ins:cmp qword ptr [rax+0x20], rcx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, ebp
 ins:mov edx, ebp
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx+0x68]
 ins:mov rbx, qword ptr [rbx+0x68]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 ins:mov rax, qword ptr [rbx+0x20]
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x28], rax
 ins:cmp qword ptr [rbx+0x28], rax
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, ebp
 ins:mov edx, ebp
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx+0x68]
 ins:mov rbx, qword ptr [rbx+0x68]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2cebfa]
 ins:mov rbx, qword ptr [rip+0x2cebfa]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov r13d, 0x4ebfa8
 ins:mov r13d, 0x4ebfa8
 reg:r13d
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub r13, 0x4eb780
 ins:sub r13, 0x4eb780
 reg:r13
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbp, qword ptr fs:[0x10]
 ins:mov rbp, qword ptr fs:[0x10]
 reg:rbp
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx]
 ins:mov edx, dword ptr [rbx]
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rbx+0xd8]
 ins:mov r14, qword ptr [rbx+0xd8]
 reg:r14
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, r14
 ins:mov rax, r14
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 ins:mov esi, 0xffffffff
 reg:esi
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_cleanup
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdi]
 ins:mov edi, dword ptr [rdi]
 reg:edi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test dil, 0x8
 ins:test dil, 0x8
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test edi, 0x800
 ins:test edi, 0x800
 reg:rflags
 NORMAL FLAG REG: inst test edi, 0x800
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x20]
 ins:mov rsi, qword ptr [rbx+0x20]
 reg:rsi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test rsi, rsi
 ins:test rsi, rsi
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x28]
 ins:mov rdx, qword ptr [rbx+0x28]
 reg:rdx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp ebp, 0xffffffff
 ins:cmp ebp, 0xffffffff
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x40], rdx
 ins:cmp qword ptr [rbx+0x40], rdx
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included lea rax, ptr [rdx+0x1]
 ins:lea rax, ptr [rdx+0x1]
 reg:rax
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included test al, 0x2
 ins:test al, 0x2
 reg:rflags
 Exe _IO_file_overflow
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included sub rdx, rsi
 ins:sub rdx, rsi
 reg:rdx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_file_overflow
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_file_overflow
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test dword ptr [rdi], 0x1000
 ins:test dword ptr [rdi], 0x1000
 reg:rflags
 NORMAL FLAG REG: inst test dword ptr [rdi], 0x1000
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x10]
 ins:mov rax, qword ptr [rdi+0x10]
 reg:rax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x20]
 ins:mov rsi, qword ptr [rdi+0x20]
 reg:rsi
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rdi+0xd8]
 ins:mov r14, qword ptr [rdi+0xd8]
 reg:r14
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov r13d, 0x4ebfa8
 ins:mov r13d, 0x4ebfa8
 reg:r13d
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included sub r13, 0x4eb780
 ins:sub r13, 0x4eb780
 reg:r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included cmp r13, rdx
 ins:cmp r13, rdx
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbx+0xd8]
 ins:mov r13, qword ptr [rbx+0xd8]
 reg:r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_new_do_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test byte ptr [r12+0x74], 0x2
 ins:test byte ptr [r12+0x74], 0x2
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [r12+0x74], 0x2
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov edi, dword ptr [r12+0x70]
 ins:mov edi, dword ptr [r12+0x70]
 reg:edi
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rdx, rbx
 ins:mov rdx, rbx
 reg:rdx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 Exe __write_nocancel
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe __write_nocancel
 Exe __write_nocancel
 INSTSELECTOR: instruction to be included cmp rax, 0xfffffffffffff001
 ins:cmp rax, 0xfffffffffffff001
 reg:rflags
 Exe __write_nocancel
 Exe __write_nocancel
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included or dword ptr [r12], 0x20
 ins:or dword ptr [r12], 0x20
 reg:rflags
 COMP2MEM: inst or dword ptr [r12], 0x20
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r12+0x90]
 ins:mov rdx, qword ptr [r12+0x90]
 reg:rdx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included sub rbx, rax
 ins:sub rbx, rax
 reg:rbx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rbp, rax
 ins:add rbp, rax
 reg:rbp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test byte ptr [r12+0x74], 0x2
 ins:test byte ptr [r12+0x74], 0x2
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [r12+0x74], 0x2
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov edi, dword ptr [r12+0x70]
 ins:mov edi, dword ptr [r12+0x70]
 reg:edi
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rdx, rbx
 ins:mov rdx, rbx
 reg:rdx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r12+0x90]
 ins:mov rdx, qword ptr [r12+0x90]
 reg:rdx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rdx, rax
 ins:add rdx, rax
 reg:rdx
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_new_file_write
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_new_file_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_new_file_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbx+0x80]
 ins:movzx eax, word ptr [rbx+0x80]
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test ax, ax
 ins:test ax, ax
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx+0xc0]
 ins:mov eax, dword ptr [rbx+0xc0]
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x38]
 ins:mov rdx, qword ptr [rbx+0x38]
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx+0xc0]
 ins:mov eax, dword ptr [rbx+0xc0]
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x38]
 ins:mov rdx, qword ptr [rbx+0x38]
 reg:rdx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x40]
 ins:mov rdx, qword ptr [rbx+0x40]
 reg:rdx
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included cmp rbp, r13
 ins:cmp rbp, r13
 reg:rflags
 NORMAL FLAG REG: inst cmp rbp, r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included neg eax
 ins:neg eax
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included test dword ptr [rbx], 0x202
 ins:test dword ptr [rbx], 0x202
 reg:rflags
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x40]
 ins:mov rdx, qword ptr [rbx+0x40]
 reg:rdx
 Exe _IO_new_do_write
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included cmp rbp, r13
 ins:cmp rbp, r13
 reg:rflags
 NORMAL FLAG REG: inst cmp rbp, r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included setnz al
 ins:setnz al
 reg:al
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included neg eax
 ins:neg eax
 reg:eax
 Exe _IO_new_do_write
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _IO_new_do_write
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0xffffffff
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2d54f2]
 ins:mov edx, dword ptr [rip+0x2d54f2]
 reg:edx
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp ebp, edx
 ins:cmp ebp, edx
 reg:rflags
 NORMAL FLAG REG: inst cmp ebp, edx
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2cec46]
 ins:mov rbx, qword ptr [rip+0x2cec46]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx+0x68]
 ins:mov rbx, qword ptr [rbx+0x68]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x2cebfa]
 ins:mov rbx, qword ptr [rip+0x2cebfa]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov r13d, 0x4ebfa8
 ins:mov r13d, 0x4ebfa8
 reg:r13d
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub r13, 0x4eb780
 ins:sub r13, 0x4eb780
 reg:r13
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbp, qword ptr fs:[0x10]
 ins:mov rbp, qword ptr fs:[0x10]
 reg:rbp
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx]
 ins:mov edx, dword ptr [rbx]
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx+0x68]
 ins:mov rbx, qword ptr [rbx+0x68]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx]
 ins:mov edx, dword ptr [rbx]
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test dl, 0x2
 ins:test dl, 0x2
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included and edx, 0x1008
 ins:and edx, 0x1008
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp edx, 0x8
 ins:cmp edx, 0x8
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx+0xc0]
 ins:mov eax, dword ptr [rbx+0xc0]
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included xor r14d, r14d
 ins:xor r14d, r14d
 reg:r14d
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x88]
 ins:mov rdx, qword ptr [rbx+0x88]
 reg:rdx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp rbp, qword ptr [rdx+0x8]
 ins:cmp rbp, qword ptr [rdx+0x8]
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov ecx, 0x1
 ins:mov ecx, 0x1
 reg:ecx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2d71b1], 0x0
 ins:cmp dword ptr [rip+0x2d71b1], 0x0
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmpxchg dword ptr [rdx], ecx
 ins:cmpxchg dword ptr [rdx], ecx
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x88]
 ins:mov rax, qword ptr [rbx+0x88]
 reg:rax
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x88]
 ins:mov rax, qword ptr [rbx+0x88]
 reg:rax
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x2d53c6], 0x0
 ins:cmp byte ptr [rip+0x2d53c6], 0x0
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test al, 0x1
 ins:test al, 0x1
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x38]
 ins:mov rdx, qword ptr [rbx+0x38]
 reg:rdx
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2d52f0]
 ins:mov rax, qword ptr [rip+0x2d52f0]
 reg:rax
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x40]
 ins:mov rax, qword ptr [rbx+0x40]
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rbx+0xd8]
 ins:mov r15, qword ptr [rbx+0xd8]
 reg:r15
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_cleanup
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_new_file_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0xd8]
 ins:mov rbp, qword ptr [rdi+0xd8]
 reg:rbp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rcx, rbp
 ins:mov rcx, rbp
 reg:rcx
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included sub rcx, 0x4eb780
 ins:sub rcx, 0x4eb780
 reg:rcx
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_default_setbuf
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x28]
 ins:mov rdx, qword ptr [rdi+0x28]
 reg:rdx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x20]
 ins:mov rsi, qword ptr [rdi+0x20]
 reg:rsi
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included cmp rdx, rsi
 ins:cmp rdx, rsi
 reg:rflags
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0xc0]
 ins:mov eax, dword ptr [rdi+0xc0]
 reg:eax
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0xa0]
 ins:mov rax, qword ptr [rdi+0xa0]
 reg:rax
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax+0x18]
 ins:mov rsi, qword ptr [rax+0x18]
 reg:rsi
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x20]
 ins:mov rdx, qword ptr [rax+0x20]
 reg:rdx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sub rdx, rsi
 ins:sub rdx, rsi
 reg:rdx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sar rdx, 0x2
 ins:sar rdx, 0x2
 reg:rdx
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rbx+0x8]
 ins:mov rsi, qword ptr [rbx+0x8]
 reg:rsi
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sub rsi, qword ptr [rbx+0x10]
 ins:sub rsi, qword ptr [rbx+0x10]
 reg:rsi
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0xd8]
 ins:mov rbp, qword ptr [rbx+0xd8]
 reg:rbp
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov eax, 0x4ebfa8
 ins:mov eax, 0x4ebfa8
 reg:eax
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sub rax, 0x4eb780
 ins:sub rax, 0x4eb780
 reg:rax
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included sub rdx, 0x4eb780
 ins:sub rdx, 0x4eb780
 reg:rdx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe _IO_file_sync
 Exe _IO_file_sync
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_file_sync
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_file_sync
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx]
 ins:mov edx, dword ptr [rbx]
 reg:edx
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 NORMAL FLAG REG: inst test r12, r12
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov eax, edx
 ins:mov eax, edx
 reg:eax
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x38]
 ins:mov rdi, qword ptr [rbx+0x38]
 reg:rdi
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included or eax, 0x2
 ins:or eax, 0x2
 reg:eax
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x84]
 ins:lea rbp, ptr [rbx+0x84]
 reg:rbp
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x83]
 ins:lea r12, ptr [rbx+0x83]
 reg:r12
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included and edx, 0x1
 ins:and edx, 0x1
 reg:edx
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included or eax, 0x1
 ins:or eax, 0x1
 reg:eax
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe _IO_default_setbuf
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_default_setbuf
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x38]
 ins:mov rax, qword ptr [rbx+0x38]
 reg:rax
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe _IO_new_file_setbuf
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe _IO_new_file_setbuf
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp r14d, 0x2
 ins:cmp r14d, 0x2
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx+0x68]
 ins:mov rbx, qword ptr [rbx+0x68]
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x88]
 ins:mov rdx, qword ptr [rbx+0x88]
 reg:rdx
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included sub dword ptr [rdx+0x4], 0x1
 ins:sub dword ptr [rdx+0x4], 0x1
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x2d705f], 0x0
 ins:cmp dword ptr [rip+0x2d705f], 0x0
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 INSTSELECTOR: instruction to be included dec dword ptr [rdx]
 ins:dec dword ptr [rdx]
 reg:rflags
 Exe _IO_cleanup
 Exe _IO_cleanup
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included add rbp, 0x8
 ins:add rbp, 0x8
 reg:rbp
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included cmp rbp, 0x4ebfb0
 ins:cmp rbp, 0x4ebfb0
 reg:rflags
 Exe __run_exit_handlers
 Exe __run_exit_handlers
 INSTSELECTOR: instruction to be included mov edi, ebx
 ins:mov edi, ebx
 reg:edi
 Exe __run_exit_handlers
 Exe _exit
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 ins:movsxd rdx, edi
 reg:rdx
 Exe _exit
 INSTSELECTOR: instruction to be included mov r10, 0xffffffffffffffb0
 ins:mov r10, 0xffffffffffffffb0
 reg:r10
 Exe _exit
 INSTSELECTOR: instruction to be included mov r9d, 0xe7
 ins:mov r9d, 0xe7
 reg:r9d
 Exe _exit
 INSTSELECTOR: instruction to be included mov r8d, 0x3c
 ins:mov r8d, 0x3c
 reg:r8d
 Exe _exit
 Exe _exit
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe _exit
 INSTSELECTOR: instruction to be included mov eax, r9d
 ins:mov eax, r9d
 reg:eax
 Exe _exit
